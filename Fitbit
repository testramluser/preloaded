[{"path":"/virtual/Fitbit/.project","content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<projectDescription>\r\n    <name>Fitbit</name>\r\n    <comment></comment>\r\n    <projects>\r\n    </projects>\r\n    <buildSpec>\r\n    </buildSpec>\r\n    <natures>\r\n    </natures>\r\n</projectDescription>","filePath":".project","repo":"Fitbit"},{"path":"/virtual/Fitbit/.settings/org.eclipse.core.resources.prefs","content":"eclipse.preferences.version=1","filePath":".settings/org.eclipse.core.resources.prefs","repo":"Fitbit"},{"path":"/virtual/Fitbit/api.raml","content":"#%RAML 0.8\r\ntitle: \"Fitbit API\"\r\nversion: 1\r\nbaseUri: \"http://api.fitbit.com/{version}/\"\r\nmediaType: application/json\r\nsecuritySchemes:\r\n  - oauth_1_0: !include securitySchemes/oauth_1_0.raml\r\nschemas:\r\n  - user-userId-get: !include schemas/user-userId-get-schema.json\r\n  - user-userId-post-body: !include schemas/user-userId-post-body-schema.json\r\n  - user-userId-post: !include schemas/user-userId-post-schema.json\r\n  - user-userId-friends-get: !include schemas/user-userId-friends-get-schema.json\r\n  - user-userId-friends-leaderboard-get: !include schemas/user-userId-friends-leaderboard-get-schema.json\r\n  - user-userId-friends-leaderboard: !include schemas/user-userId-friends-leaderboard-schema.json\r\n  - user-userId-friends-leaderboard-post: !include schemas/user-userId-friends-leaderboard-post-schema.json\r\n  - user-userId-friends-invitations-get: !include schemas/user-userId-friends-invitations-get-schema.json\r\n  - user-userId-friends-invitations: !include schemas/user-userId-friends-invitations-schema.json\r\n  - user-userId-friends-invitations-fromUserId: !include schemas/user-userId-friends-invitations-fromUserId-schema.json\r\n  - user-userId-foods: !include schemas/user-userId-foods-schema.json\r\n  - user-userId-foods-post: !include schemas/user-userId-foods-post-schema.json\r\n  - user-userId-foods-log: !include schemas/user-userId-foods-log-schema.json\r\n  - user-userId-foods-log-post: !include schemas/user-userId-foods-log-post-schema.json\r\n  - user-userId-foods-log-recent-get: !include schemas/user-userId-foods-log-recent-get-schema.json\r\n  - user-userId-foods-log-recent-get-schema: !include schemas/user-userId-foods-log-recent-get-schema.json\r\n  - user-userId-foods-log-goal-get: !include schemas/user-userId-foods-log-goal-get-schema.json\r\n  - user-userId-foods-log-goal: !include schemas/user-userId-foods-log-goal-schema.json\r\n  - user-userId-foods-log-goal-schema: !include schemas/user-userId-foods-log-goal-schema.json\r\n  - user-userId-foods-log-favorite-get: !include schemas/user-userId-foods-log-favorite-get-schema.json\r\n  - user-userId-foods-log-water: !include schemas/user-userId-foods-log-water-schema.json\r\n  - user-userId-foods-log-water-post: !include schemas/user-userId-foods-log-water-post-schema.json\r\n  - user-userId-foods-log-water-date-date-get: !include schemas/user-userId-foods-log-water-date-date-get-schema.json\r\n  - user-userId-foods-log-date-date-get: !include schemas/user-userId-foods-log-date-date-get-schema.json\r\n  - user-userId-body: !include schemas/user-userId-body-schema.json\r\n  - user-userId-body-post: !include schemas/user-userId-body-post-schema.json\r\n  - user-userId-body-weight-date-baseDate-period-get: !include schemas/user-userId-body-weight-date-baseDate-period-get-schema.json\r\n  - user-userId-body-log-weight: !include schemas/user-userId-body-log-weight-schema.json\r\n  - user-userId-body-log-weight-post: !include schemas/user-userId-body-log-weight-post-schema.json\r\n  - user-userId-body-log-weight-goal-get: !include schemas/user-userId-body-log-weight-goal-get-schema.json\r\n  - user-userId-body-log-weight-goal: !include schemas/user-userId-body-log-weight-goal-schema.json\r\n  - user-userId-body-log-weight-goal-post: !include schemas/user-userId-body-log-weight-goal-post-schema.json\r\n  - user-userId-body-log-weight-date-date-get: !include schemas/user-userId-body-log-weight-date-date-get-schema.json\r\n  - user-userId-body-log-weight-date-date-get-schema: !include schemas/user-userId-body-log-weight-date-date-get-schema.json\r\n  - user-userId-body-log-fat: !include schemas/user-userId-body-log-fat-schema.json\r\n  - user-userId-body-log-fat-post: !include schemas/user-userId-body-log-fat-post-schema.json\r\n  - user-userId-body-log-fat-goal-get: !include schemas/user-userId-body-log-fat-goal-get-schema.json\r\n  - user-userId-body-log-fat-goal: !include schemas/user-userId-body-log-fat-goal-schema.json\r\n  - user-userId-body-log-fat-goal-post: !include schemas/user-userId-body-log-fat-goal-post-schema.json\r\n  - user-userId-body-log-fat-date-get: !include schemas/user-userId-body-log-fat-date-get-schema.json\r\n  - user-userId-body-log-fat-date-get-schema: !include schemas/user-userId-body-log-fat-date-get-schema.json\r\n  - user-userId-body-date: !include schemas/user-userId-body-date-schema.json\r\n  - user-userId-heart: !include schemas/user-userId-heart-schema.json\r\n  - user-userId-heart-post: !include schemas/user-userId-heart-post-schema.json\r\n  - user-userId-heart-date-date-get: !include schemas/user-userId-heart-date-date-get-schema.json\r\n  - user-userId-badges-get: !include schemas/user-userId-badges-get-schema.json\r\n  - user-userId-sleep: !include schemas/user-userId-sleep-schema.json\r\n  - user-userId-sleep-post: !include schemas/user-userId-sleep-post-schema.json\r\n  - user-userId-sleep-date-date-get: !include schemas/user-userId-sleep-date-date-get-schema.json\r\n  - user-userId-devices-get: !include schemas/user-userId-devices-get-schema.json\r\n  - user-userId-devices-tracker-trackerId-alarms: !include schemas/user-userId-devices-tracker-trackerId-alarms-schema.json\r\n  - user-userId-devices-tracker-trackerId-alarms-post: !include schemas/user-userId-devices-tracker-trackerId-alarms-post-schema.json\r\n  - user-userId-devices-tracker-trackerId-alarms-alarmId-get: !include schemas/user-userId-devices-tracker-trackerId-alarms-alarmId-get-schema.json\r\n  - user-userId-devices-tracker-trackerId-alarms-alarmId: !include schemas/user-userId-devices-tracker-trackerId-alarms-alarmId-schema.json\r\n  - user-userId-devices-tracker-trackerId-alarms-alarmId-post: !include schemas/user-userId-devices-tracker-trackerId-alarms-alarmId-post-schema.json\r\n  - user-userId-bp: !include schemas/user-userId-bp-schema.json\r\n  - user-userId-bp-post: !include schemas/user-userId-bp-post-schema.json\r\n  - user-userId-bp-date-date-get: !include schemas/user-userId-bp-date-date-get-schema.json\r\n  - user-userId-glucose: !include schemas/user-userId-glucose-schema.json\r\n  - user-userId-glucose-post: !include schemas/user-userId-glucose-post-schema.json\r\n  - user-userId-glucose-date-date-get: !include schemas/user-userId-glucose-date-date-get-schema.json\r\n  - user-userId-activities: !include schemas/user-userId-activities-schema.json\r\n  - user-userId-activities-post: !include schemas/user-userId-activities-post-schema.json\r\n  - user-userId-activities-get: !include schemas/user-userId-activities-get-schema.json\r\n  - user-userId-activities-goals-weekly-get: !include schemas/user-userId-activities-goals-weekly-get-schema.json\r\n  - user-userId-activities-goals-weekly: !include schemas/user-userId-activities-goals-weekly-schema.json\r\n  - user-userId-activities-goals-weekly-post: !include schemas/user-userId-activities-goals-weekly-post-schema.json\r\n  - user-userId-activities-goals-daily-get: !include schemas/user-userId-activities-goals-daily-get-schema.json\r\n  - user-userId-activities-goals-daily: !include schemas/user-userId-activities-goals-daily-schema.json\r\n  - user-userId-activities-goals-daily-post: !include schemas/user-userId-activities-goals-daily-post-schema.json\r\n  - user-userId-activities-recent-get: !include schemas/user-userId-activities-recent-get-schema.json\r\n  - user-userId-activities-recent-get-schema: !include schemas/user-userId-activities-recent-get-schema.json\r\n  - user-userId-activities-steps-date-baseDate-period-get: !include schemas/user-userId-activities-steps-date-baseDate-period-get-schema.json\r\n  - user-userId-activities-favorite-get: !include schemas/user-userId-activities-favorite-get-schema.json\r\n  - user-userId-activities-favId: !include schemas/user-userId-activities-favId-schema.json\r\n  - user-userId-activities-date-date-get: !include schemas/user-userId-activities-date-date-get-schema.json\r\n  - user-userId-meals-get: !include schemas/user-userId-meals-get-schema.json\r\n  - user-userId-apiSubscriptions-subscribitionId-post: !include schemas/user-userId-apiSubscriptions-subscribitionId-post-schema.json\r\n  - user-userId-apiSubscriptions-subscribitionId-post-schema: !include schemas/user-userId-apiSubscriptions-subscribitionId-post-schema.json\r\n  - activities-get: !include schemas/activities-get-schema.json\r\n  - activities-activityId-get: !include schemas/activities-activityId-get-schema.json\r\n  - foods-units: !include schemas/foods-units-schema.json\r\n  - foods-foodId: !include schemas/foods-foodId-schema.json\r\n  - foods-search: !include schemas/foods-search-schema.json\r\nresourceTypes:\r\n  - base: !include resourceTypes/base.raml\r\nsecuredBy: [ oauth_1_0 ]\r\n/user/{userId}{mediaTypeExtension}:\r\n  uriParameters:\r\n    userId:\r\n      description: |\r\n        User's encoded id or \"-\" (dash) to indicate user currently authenticated\r\n        via the token credentials provided.\r\n  type: base\r\n  /profile{mediaTypeExtension}:\r\n    type: base\r\n    get:\r\n      description: |\r\n        Get user's profile in the format requested using units in the unit system\r\n        which corresponds to the Accept-Language header provided.\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-get\r\n              example: !include examples/user-userId-get-example.json\r\n    post:\r\n      description: |\r\n        Update user's profile using units in the unit system that corresponds to\r\n        the Accept-Language header provided and get a response in the format requested.\r\n      body:\r\n        application/json:\r\n          schema: user-userId-post-body\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-post\r\n              example: !include examples/user-userId-post-example.json\r\n  /friends{mediaTypeExtension}:\r\n    type: base\r\n    get:\r\n      description: |\r\n        Get user's friends in the format requested using units in the unit system\r\n        which corresponds to the Accept-Language header provided.\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-friends-get\r\n              example: !include examples/user-userId-friends-get-example.json\r\n    /leaderboard{mediaTypeExtension}:\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get user's friends leaderboard in the format requested using units in the\r\n          unit system which corresponds to the Accept-Language header provided.\r\n          Authorized user himself is also included in the response. Leaderboard has\r\n          last 7 days worth of data (includes data for the previous 6 days plus\r\n          current day's data in real time).\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-friends-leaderboard-get\r\n                example: !include examples/user-userId-friends-leaderboard-get-example.json\r\n      post:\r\n        description: |\r\n          Update visibility of the user for friend's leaderboards and get response in\r\n          the format requested using units in the unit system which corresponds to the\r\n          Accept-Language header provided.\r\n        body:\r\n          application/json:\r\n            schema: user-userId-friends-leaderboard\r\n        responses:\r\n          201:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-friends-leaderboard-post\r\n                example: !include examples/user-userId-friends-leaderboard-post-example.json\r\n    /invitations{mediaTypeExtension}:\r\n      type: base\r\n      get:\r\n        description: |\r\n          Retrieve the list of invites to become freinds for a user in the format requested.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-friends-invitations-get\r\n                example: !include examples/user-userId-friends-invitations-get-example.json\r\n      post:\r\n        description: |\r\n          Invite a user to become friends with authorized user.\r\n          If you provide invitedUserEmail parameter with the request, standard friendship\r\n          invitation email will be sent to the invited user, that he can accept later.\r\n          Contrary, invitedUserId parameter creates an invite silently, so it could only\r\n          be fetched through the Get Invites endpoint. You can accept or reject both\r\n          invitation types on behalf of the authorized user via Accept Invite API call.\r\n          Note: Please be careful and respectful when using this endpoint, and, as\r\n          always, adhere to the Terms of Service. Though we have organic limits on\r\n          allowed number of invites, your application's workflow should not allow users\r\n          to send bulk invites to the huge list of users, which can be considered as spam.\r\n        body:\r\n          application/json:\r\n            schema: user-userId-friends-invitations\r\n        responses:\r\n          201:\r\n            description: \"User was invited.\"\r\n      /{fromUserId}{mediaTypeExtension}:\r\n        uriParameters:\r\n          fromUserId:\r\n            description: |\r\n              User's encoded id to indicate user to accept or reject invite from.\r\n        type: base\r\n        post:\r\n          description: |\r\n            Accept or reject an invite to become friends with inviting user.\r\n          body:\r\n            application/json:\r\n              schema: user-userId-friends-invitations-fromUserId\r\n          responses:\r\n            201:\r\n              description: \"Invite accepted.\"\r\n  /foods{mediaTypeExtension}:\r\n    type: base\r\n    post:\r\n      description: |\r\n        Create new private food for a user and get a response in a format requested.\r\n        Created private food could be found in results of Search Foods call.\r\n        Note: Foods created via endpoint will have PRIVATE value in the <accessLevel>\r\n        field when accessed on behalf of the authorized user, and SHARED when viewed\r\n        by any other user (if authorized user granted respective Foods permission).\r\n      body:\r\n        application/json:\r\n          schema: user-userId-foods\r\n      responses:\r\n        201:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-foods-post\r\n              example: !include examples/user-userId-foods-post-example.json\r\n    /log{mediaTypeExtension}:\r\n      type: base\r\n      post:\r\n        description: |\r\n          Create log entry for a food and get a response in the format requested.\r\n          You need to select one of the unit ids to create a food log entry. It is\r\n          possible to fetch unit ids allowed for specific food via previous calls to\r\n          endpoints that retrieve food lists of the user. Each unit id maps to a uni\r\n          in the list returned via the Get Food Units API call.\r\n        body:\r\n          application/json:\r\n            schema: user-userId-foods-log\r\n        responses:\r\n          201:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-foods-log-post\r\n                example: !include examples/user-userId-foods-log-post-example.json\r\n      /{id}{mediaTypeExtension}:\r\n        uriParameters:\r\n          id:\r\n            description: |\r\n              User's food log entry identified by id.\r\n            type: integer\r\n        type: base\r\n        delete:\r\n          description: \"Delete the user's food log entry with the given id.\"\r\n          responses:\r\n            204:\r\n              description: \"Entry deleted.\"\r\n      /frequent{mediaTypeExtension}:\r\n        type: base\r\n        get:\r\n          description: |\r\n            Get a list of a user's frequent foods in the format requested. A frequen\r\n            food in the list provides a quick way to log the food via the Log Food\r\n            endpoint.\r\n          responses:\r\n            200:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-foods-log-recent-get\r\n                  example: !include examples/user-userId-foods-log-recent-get-example.json\r\n      /recent{mediaTypeExtension}:\r\n        type: base\r\n        get:\r\n          description: |\r\n            Get a list of a user's recent foods in the format requested. A recent food\r\n            provides a quick way to log the food via the Log Food endpoint.\r\n          responses:\r\n            200:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-foods-log-recent-get-schema\r\n                  example: !include examples/user-userId-foods-log-recent-get-example.json\r\n      /goal{mediaTypeExtension}:\r\n        type: base\r\n        get:\r\n          description: |\r\n            Get a user's current daily calorie consumption goal and/or Food Plan in the\r\n            format requested.\r\n          responses:\r\n            200:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-foods-log-goal-get\r\n                  example: !include examples/user-userId-foods-log-goal-get-example.json\r\n        post:\r\n          description: |\r\n            Update (create) a user's daily calorie consumption goal or Food Plan and ge\r\n            a response in the format requested. Food Plan could not be created unless\r\n            user already has active weight goal (Update-Weight-Goal). Depending on the\r\n            weight goal setup only either MAINTENANCE (in case start weight is close to\r\n            target weight or smaller) or one of the four other \"lose\" food plans could\r\n            be created via intensity POST parameter.\r\n          body:\r\n            application/json:\r\n              schema: user-userId-foods-log-goal\r\n          responses:\r\n            201:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-foods-log-goal-schema\r\n                  example: !include examples/user-userId-foods-log-goal-post-example.json\r\n      /favorite{mediaTypeExtension}:\r\n        type: base\r\n        get:\r\n          description: |\r\n            Get a list of a user's favorite foods in the format requested. User marks\r\n            a food as favorite on the Food Log tab on the website. A favorite food in\r\n            the list provides a quick way to log the food via the Log Food endpoint.\r\n          responses:\r\n            200:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-foods-log-favorite-get\r\n                  example: !include examples/user-userId-foods-log-favorite-get-example.json\r\n        /{favId}{mediaTypeExtension}:\r\n          uriParameters:\r\n            favId:\r\n              description: |\r\n                Id of a food.\r\n              type: integer\r\n          type: base\r\n          post:\r\n            description: \"Add the food with the given id to user's list of favorite foods.\"\r\n            responses:\r\n              201:\r\n                description: \"Food item added.\"\r\n          delete:\r\n            description: \"Delete the food with the given id from user's list of favorite foods.\"\r\n            responses:\r\n              204:\r\n                description: \"Food item removed from favorites.\"\r\n      /water{mediaTypeExtension}:\r\n        type: base\r\n        post:\r\n          description: |\r\n            Create log entry for a water using units in the unit system that corresponds\r\n            to the Accept-Language header provided (or custom water measurement unit) and\r\n            get a response in the format requested.\r\n          body:\r\n            application/json:\r\n              schema: user-userId-foods-log-water\r\n          responses:\r\n            201:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-foods-log-water-post\r\n                  example: !include examples/user-userId-foods-log-water-post-example.json\r\n        /{id}{mediaTypeExtension}:\r\n          uriParameters:\r\n            id:\r\n              description: |\r\n                User's water log entry identified by id.\r\n              type: integer\r\n          type: base\r\n          delete:\r\n            description: \"Delete user's water log entry with the given id.\"\r\n            responses:\r\n              204:\r\n                description: \"Entry deleted.\"\r\n        /date/{date}{mediaTypeExtension}:\r\n          uriParameters:\r\n            date:\r\n              description: \"The date in the format YYYY-mm-dd.\"\r\n          type: base\r\n          get:\r\n            description: |\r\n              Get a summary and list of a user's water log entries for a given day in the\r\n              format requested using units in the unit system which corresponds to the\r\n              Accept-Language header provided. Water log entries are available only to\r\n              authorized user, though if you need to fetch only total amount of consumed\r\n              water, you can use Get Foods endpoint. Water log entries in response are\r\n              sorted exactly the same as they are presented on the Fitbit website.\r\n            responses:\r\n              200:\r\n                body:\r\n                  application/json:\r\n                    schema: user-userId-foods-log-water-date-date-get\r\n                    example: !include examples/user-userId-foods-log-water-date-date-get-example.json\r\n      /date/{date}{mediaTypeExtension}:\r\n        uriParameters:\r\n          date:\r\n            description: \"The date in the format YYYY-mm-dd.\"\r\n        type: base\r\n        get:\r\n          description: |\r\n            Get a summary and list of a user's food log entries for a given day in the\r\n            format requested.\r\n          responses:\r\n            200:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-foods-log-date-date-get\r\n                  example: !include examples/user-userId-foods-log-date-date-get-example.json\r\n  /body{mediaTypeExtension}:\r\n    type: base\r\n    post:\r\n      description: |\r\n        Log body measurements using units in the unit system that corresponds to the\r\n        Accept-Language header provided and get a response in the format requested.\r\n      body:\r\n        application/json:\r\n          schema: user-userId-body\r\n      responses:\r\n        201:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-body-post\r\n              example: !include examples/user-userId-body-post-example.json\r\n    /weight/date/{baseDate}/{period}{mediaTypeExtension}:\r\n      uriParameters:\r\n        period:\r\n          description: \"The date range period. One of 1d, 7d, 30d, 1w, 1m.\"\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get time series in the specified range for weight in the format requested\r\n          using units in the unit system which corresponds to the Accept-Language\r\n          header provided.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-body-weight-date-baseDate-period-get\r\n    /log:\r\n      /weight{mediaTypeExtension}:\r\n        type: base\r\n        post:\r\n          description: |\r\n            Create log entry for a body weight using units in the unit system tha\r\n            corresponds to the Accept-Language header provided and get a response in\r\n            the format requested.\r\n          body:\r\n            application/json:\r\n              schema: user-userId-body-log-weight\r\n          responses:\r\n            201:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-body-log-weight-post\r\n                  example: !include examples/user-userId-body-log-weight-post-example.json\r\n        /{id}{mediaTypeExtension}:\r\n          uriParameters:\r\n            id:\r\n              description: \"Log id.\"\r\n          type: base\r\n          delete:\r\n            description: \"Delete user's body weight log entry with the given id.\"\r\n            responses:\r\n              204:\r\n                description: Deleted\r\n        /goal{mediaTypeExtension}:\r\n          type: base\r\n          get:\r\n            description: |\r\n              Get a user's current weight goal using units in the unit system tha\r\n              corresponds to the Accept-Language header provided in the format requested.\r\n            responses:\r\n              200:\r\n                body:\r\n                  application/json:\r\n                    schema: user-userId-body-log-weight-goal-get\r\n                    example: !include examples/user-userId-body-log-weight-goal-get-example.json\r\n          post:\r\n            description: |\r\n              Create or update user's weight goal using units in the unit system tha\r\n              corresponds to the Accept-Language header provided and get a response in\r\n              the format requested.\r\n            body:\r\n              application/json:\r\n                schema: user-userId-body-log-weight-goal\r\n            responses:\r\n              201:\r\n                body:\r\n                  application/json:\r\n                    schema: user-userId-body-log-weight-goal-post\r\n                    example: !include examples/user-userId-body-log-weight-goal-post-example.json\r\n        /date/{date}{mediaTypeExtension}:\r\n          uriParameters:\r\n            date:\r\n              description: \"The date in the format YYYY-mm-dd.\"\r\n          type: base\r\n          get:\r\n            description: |\r\n              Get a list of all user's body weight log entries for a given day in the\r\n              format requested using units in the unit system which corresponds to the\r\n              Accept-Language header provided. Body weight log entries are available only\r\n              to authorized user, though if you need to fetch only the most recent entry,\r\n              you can use Get Body Measurements endpoint. Body weight log entries in\r\n              response are sorted exactly the same as they are presented on the Fitbi\r\n              website.\r\n            responses:\r\n              200:\r\n                body:\r\n                  application/json:\r\n                    schema: user-userId-body-log-weight-date-date-get\r\n                    example: !include examples/user-userId-body-log-weight-date-date-get-example.json\r\n          /{baseDate}/{endDate}{mediaTypeExtension}:\r\n            uriParameters:\r\n              endDate:\r\n                description: |\r\n                  Range end date when date range is provided. Note that period should no\r\n                  be longer than 31 day.\r\n            type: base\r\n            get:\r\n              description: |\r\n                Get a list of all user's body weight log entries for a given day in the\r\n                format requested using units in the unit system which corresponds to the\r\n                Accept-Language header provided. Body weight log entries are available only\r\n                to authorized user, though if you need to fetch only the most recent entry,\r\n                you can use Get Body Measurements endpoint. Body weight log entries in\r\n                response are sorted exactly the same as they are presented on the Fitbi\r\n                website.\r\n              responses:\r\n                200:\r\n                  body:\r\n                    application/json:\r\n                      schema: user-userId-body-log-weight-date-date-get-schema\r\n                      example: !include examples/user-userId-body-log-weight-date-date-get-example.json\r\n          /{baseDate}/{period}{mediaTypeExtension}:\r\n            uriParameters:\r\n              period:\r\n                description: \"The date range period. One of 1d, 7d, 30d, 1w, 1m.\"\r\n            type: base\r\n            get:\r\n              description: |\r\n                Get a list of all user's body weight log entries for a given day in the\r\n                format requested using units in the unit system which corresponds to the\r\n                Accept-Language header provided. Body weight log entries are available only\r\n                to authorized user, though if you need to fetch only the most recent entry,\r\n                you can use Get Body Measurements endpoint. Body weight log entries in\r\n                response are sorted exactly the same as they are presented on the Fitbi\r\n                website.\r\n              responses:\r\n                200:\r\n                  body:\r\n                    application/json:\r\n                      schema: user-userId-body-log-weight-date-date-get-schema\r\n                      example: !include examples/user-userId-body-log-weight-date-date-get-example.json\r\n      /fat{mediaTypeExtension}:\r\n        type: base\r\n        post:\r\n          description: |\r\n            Create log entry for a body fat and get a response in the format requested.\r\n          body:\r\n            application/json:\r\n              schema: user-userId-body-log-fat\r\n          responses:\r\n            201:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-body-log-fat-post\r\n                  example: !include examples/user-userId-body-log-fat-post-example.json\r\n        /goal{mediaTypeExtension}:\r\n          type: base\r\n          get:\r\n            description: |\r\n              Get a user's current fat goal in the format requested.\r\n            responses:\r\n              200:\r\n                body:\r\n                  application/json:\r\n                    schema: user-userId-body-log-fat-goal-get\r\n                    example: !include examples/user-userId-body-log-fat-goal-post-example.json\r\n          post:\r\n            description: |\r\n              Create or updates user's fat goal and get a response in the format requested.\r\n            body:\r\n              application/json:\r\n                schema: user-userId-body-log-fat-goal\r\n            responses:\r\n              201:\r\n                body:\r\n                  application/json:\r\n                    schema: user-userId-body-log-fat-goal-post\r\n                    example: !include examples/user-userId-body-log-fat-goal-post-example.json\r\n        /date/{date}{mediaTypeExtension}:\r\n          uriParameters:\r\n            date:\r\n              description: \"The date in the format YYYY-mm-dd.\"\r\n          type: base\r\n          get:\r\n            description: |\r\n              Get a list of all user's body fat log entries for a given day in the forma\r\n              requested. Body fat log entries are available only to authorized user, though\r\n              if you need to fetch only the most recent entry, you can use Get Body\r\n              Measurements endpoint.\r\n            responses:\r\n              200:\r\n                body:\r\n                  application/json:\r\n                    schema: user-userId-body-log-fat-date-get\r\n                    example: !include examples/user-userId-body-log-fat-date-get-example.json\r\n          /{baseDate}/{endDate}{mediaTypeExtension}:\r\n            uriParameters:\r\n              endDate:\r\n                description: |\r\n                  Range end date when date range is provided. Note that period should no\r\n                  be longer than 31 day.\r\n            type: base\r\n            get:\r\n              description: |\r\n                Get a list of all user's body fat log entries for a given day in the forma\r\n                requested. Body fat log entries are available only to authorized user, though\r\n                if you need to fetch only the most recent entry, you can use Get Body\r\n                Measurements endpoint.\r\n              responses:\r\n                200:\r\n                  body:\r\n                    application/json:\r\n                      schema: user-userId-body-log-fat-date-get-schema\r\n                      example: !include examples/user-userId-body-log-fat-date-get-example.json\r\n          /{baseDate}/{period}{mediaTypeExtension}:\r\n            uriParameters:\r\n              period:\r\n                description: \"The date range period. One of 1d, 7d, 30d, 1w, 1m.\"\r\n            type: base\r\n            get:\r\n              description: |\r\n                Get a list of all user's body fat log entries for a given day in the forma\r\n                requested. Body fat log entries are available only to authorized user, though\r\n                if you need to fetch only the most recent entry, you can use Get Body\r\n                Measurements endpoint.\r\n              responses:\r\n                200:\r\n                  body:\r\n                    application/json:\r\n                      schema: user-userId-body-log-fat-date-get-schema\r\n                      example: !include examples/user-userId-body-log-fat-date-get-example.json\r\n    /date/{date}{mediaTypeExtension}:\r\n      uriParameters:\r\n        date:\r\n          description: \"The date in the format yyyy-MM-dd.\"\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get a summary of a user's body measurements for a given day in the forma\r\n          requested using units in the unit system which corresponds to the\r\n          Accept-Language header provided. This endpoint retrieves only latest entries\r\n          for the specific date for weight, fat, bmi. If you would like to fetch all\r\n          entries, use API-Get-Body-Weight and API-Get-Body-Fat endpoints.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-body-date\r\n                example: !include examples/user-userId-body-date-date-example.json\r\n  /heart{mediaTypeExtension}:\r\n    type: base\r\n    post:\r\n      description: |\r\n        Create log entry for a heart rate measurement and get a response in the forma\r\n        requested.\r\n      body:\r\n        application/json:\r\n          schema: user-userId-heart\r\n      responses:\r\n        201:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-heart-post\r\n              example: !include examples/user-userId-heart-post-example.json\r\n    /{logId}{mediaTypeExtension}:\r\n      uriParameters:\r\n        logId:\r\n          type: integer\r\n      type: base\r\n      delete:\r\n        description: \"Delete user's heart rate log entry with the given id.\"\r\n        responses:\r\n          204:\r\n            description: \"Heart rate log entry deleted.\"\r\n    /date/{date}{mediaTypeExtension}:\r\n      uriParameters:\r\n        date:\r\n          description: \"The date in the format YYYY-mm-dd.\"\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get an average values and a list of user's heart rate log entries for a given\r\n          day in the format requested. Heart rate data available only to the authorized\r\n          user. Heart rate log entries in response are sorted exactly the same as they\r\n          are presented on the Fitbit website. We always include all heart rate trackers\r\n          in the <average> section of the response body (with zero average values for\r\n          the days with no measurements) to allow to seamlessly fetch a list of all\r\n          additional user created custom trackers.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-heart-date-date-get\r\n                example: !include examples/user-userId-heart-date-date-get-example.json\r\n  /badges{mediaTypeExtension}:\r\n    type: base\r\n    get:\r\n      description: |\r\n        Get user's badges in the format requested. Response includes all badges\r\n        for the user as seen on the Fitbit website badge locker (both activity\r\n        and weight related). We return weight and distance badges based on the\r\n        user's unit profile preference as on the website.\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-badges-get\r\n              example: !include examples/user-userId-badges-get-example.json\r\n  /sleep{mediaTypeExtension}:\r\n    type: base\r\n    post:\r\n      description: |\r\n        Create log entry for a sleep and get a response in the format requested.\r\n        Have in mind that it is not possible to create overlapping log entries as\r\n        well as entries for time periods, which have no associated data from tracker\r\n        device. Sleep log entry appears in the website's sleep tracker interface\r\n        according to its end date.\r\n      body:\r\n        application/json:\r\n          schema: user-userId-sleep\r\n      responses:\r\n        201:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-sleep-post\r\n              example: !include examples/user-userId-sleep-post-example.json\r\n    /{sleepId}{mediaTypeExtension}:\r\n      uriParameters:\r\n        sleepId:\r\n          description: \"Sleep log id.\"\r\n          type: integer\r\n      type: base\r\n      delete:\r\n        description: \"Delete user's sleep log entry with the given id.\"\r\n        responses:\r\n          204:\r\n            description: \"User log id deleted.\"\r\n    /date/{date}{mediaTypeExtension}:\r\n      uriParameters:\r\n        date:\r\n          description: \"The date in the format YYYY-mm-dd.\"\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get a summary and list of a user's sleep log entries as well as minute by\r\n          minute sleep entry data for a given day in the format requested. Endpoin\r\n          response includes summary for all sleep log entries for the given day\r\n          (including naps). If you need to fetch data only for the main sleep you can\r\n          fetch entry with \"isMainSleep\" = true or use Get-Time-Series calls. The\r\n          relationship between sleep log entry properties is expressed with the following\r\n          equation:\r\n          -----------\r\n            timeInBed = minutesToFallAsleep + (minutesAsleep + minutesAwake) + minutesAfterWakeup.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-sleep-date-date-get\r\n                example: !include examples/user-userId-sleep-date-date-get-example.json\r\n  /devices{mediaTypeExtension}:\r\n    type: base\r\n    get:\r\n      description: |\r\n        Retrieve the list of Fitbit devices for a user in the format requested.\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-devices-get\r\n              example: !include examples/user-userId-devices-get-example.json\r\n    /tracker/{trackerId}/alarms{mediaTypeExtension}:\r\n      type: base\r\n      post:\r\n        description: |\r\n          Create alarm entry for a given device and get a response in the forma\r\n          requested.  Only available for devices that support alarms.\r\n        body:\r\n          application/json:\r\n            schema: user-userId-devices-tracker-trackerId-alarms\r\n        responses:\r\n          201:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-devices-tracker-trackerId-alarms-post\r\n                example: !include examples/user-userId-devices-tracker-trackerId-alarms-post-example.json\r\n      /{alarmId}{mediaTypeExtension}:\r\n        uriParameters:\r\n          alarmId:\r\n            type: integer\r\n        type: base\r\n        get:\r\n          description: |\r\n            Retrieve the list of Fitbit device alarms for a specific device in the forma\r\n            requested. Only available for devices that support alarms.\r\n          responses:\r\n            200:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-devices-tracker-trackerId-alarms-alarmId-get\r\n                  example: !include examples/user-userId-devices-tracker-trackerId-alarms-alarmId-get-example.json\r\n        post:\r\n          description: |\r\n            Update alarm entry with a give id for a given device and get a response in\r\n            the format requested.\r\n          body:\r\n            application/json:\r\n              schema: user-userId-devices-tracker-trackerId-alarms-alarmId\r\n          responses:\r\n            201:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-devices-tracker-trackerId-alarms-alarmId-post\r\n                  example: !include examples/user-userId-devices-tracker-trackerId-alarms-alarmId-post-example.json\r\n        delete:\r\n          description: \"Delete user's device alarm entry with the given id for a given device.\"\r\n          responses:\r\n            204:\r\n              description: \"Alarm entry removed.\"\r\n  /bp{mediaTypeExtension}:\r\n    type: base\r\n    post:\r\n      description: |\r\n        Create log entry for a blood pressure measurement and get a response in the\r\n        format requested.\r\n      body:\r\n        application/json:\r\n          schema: user-userId-bp\r\n      responses:\r\n        201:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-bp-post\r\n              example: !include examples/user-userId-bp-post-example.json\r\n    /{logId}{mediaTypeExtension}:\r\n      uriParameters:\r\n        logId:\r\n          type: integer\r\n      type: base\r\n      delete:\r\n        description: \"Delete user's blood pressure log entry with the given id.\"\r\n        responses:\r\n          204:\r\n            description: \"Blood rate log entry deleted.\"\r\n    /date/{date}{mediaTypeExtension}:\r\n      uriParameters:\r\n        date:\r\n          description: \"The date in the format YYYY-mm-dd.\"\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get an average value and a list of user's blood pressure log entries for a\r\n          given day in the format requested. Blood pressure data available only to\r\n          authorized user. Blood pressure log entries in response are sorted exactly\r\n          the same as they are presented on the Fitbit website.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-bp-date-date-get\r\n                example: !include examples/user-userId-bp-date-date-get-example.json\r\n  /glucose{mediaTypeExtension}:\r\n    type: base\r\n    post:\r\n      description: |\r\n        Create log entry for a blood glucose measurement and/or HbA1c using units\r\n        in the unit system which corresponds to the Accept-Language header provided\r\n        and get a response in the format requested.\r\n      body:\r\n        application/json:\r\n          schema: user-userId-glucose\r\n      responses:\r\n        201:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-glucose-post\r\n              example: !include examples/user-userId-glucose-post-example.json\r\n    /date/{date}{mediaTypeExtension}:\r\n      uriParameters:\r\n        date:\r\n          description: \"The date in the format YYYY-mm-dd.\"\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get a list of user's blood glucose and HbA1C measurements for a given day\r\n          in the format requested using units in the unit system which corresponds\r\n          to the Accept-Language header provided. Glucose measurement log entries\r\n          are available only to authorized user. We always include all glucose\r\n          trackers in the response body (with zero glucose value for the days with no\r\n          measurements) to allow to seamlessly fetch a list of all additional user\r\n          created custom trackers.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-glucose-date-date-get\r\n                example: !include examples/user-userId-glucose-date-date-get-example.json\r\n  /activities{mediaTypeExtension}:\r\n    type: base\r\n    post:\r\n      description: |\r\n        Create log entry for an activity or user's private custom activity using units\r\n        in the unit system which corresponds to the Accept-Language header provided\r\n        (or using optional custom distanceUnit) and get a response in the forma\r\n        requested.\r\n      body:\r\n        application/json:\r\n          schema: user-userId-activities\r\n      responses:\r\n        201:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-activities-post\r\n              example: !include examples/user-userId-activities-post-example.json\r\n    get:\r\n      description: |\r\n        Get user's activity statistics in the format requested using units in the\r\n        unit system which corresponds to the Accept-Language header provided.\r\n        Activity statistics includes Lifetime and Best achievement values from the\r\n        My Achievements tile on the website dashboard. Response contains both\r\n        statistics from the tracker device and total numbers including tracker data\r\n        and manual activity log entries as seen on the Fitbit website dashboard.\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-activities-get\r\n              example: !include examples/user-userId-activities-get-example.json\r\n    /goals:\r\n      /weekly{mediaTypeExtension}:\r\n        type: base\r\n        get:\r\n          description: |\r\n            Get a user's current weekly activity goals in the format requested using\r\n            units in the unit system which corresponds to the Accept-Language header\r\n            provided.\r\n          responses:\r\n            200:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-activities-goals-weekly-get\r\n                  example: !include examples/user-userId-activities-goals-weekly-get-example.json\r\n        post:\r\n          description: |\r\n            Create or updates user's weekly activity goals and get a response in the\r\n            format requested using units in the unit system which corresponds to the\r\n            Accept-Language header provided.\r\n          body:\r\n            application/json:\r\n              schema: user-userId-activities-goals-weekly\r\n          responses:\r\n            201:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-activities-goals-weekly-post\r\n                  example: !include examples/user-userId-activities-goals-weekly-post-example.json\r\n      /daily{mediaTypeExtension}:\r\n        type: base\r\n        get:\r\n          description: |\r\n            Get a user's current daily activity goals in the format requested using units\r\n            in the unit system which corresponds to the Accept-Language header provided.\r\n          responses:\r\n            200:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-activities-goals-daily-get\r\n                  example: !include examples/user-userId-activities-goals-daily-get-example.json\r\n        post:\r\n          description: |\r\n            Create or updates user's daily activity goals and get a response in the\r\n            format requested using units in the unit system which corresponds to the\r\n            Accept-Language header provided.\r\n          body:\r\n            application/json:\r\n              schema: user-userId-activities-goals-daily\r\n          responses:\r\n            201:\r\n              body:\r\n                application/json:\r\n                  schema: user-userId-activities-goals-daily-post\r\n                  example: !include examples/user-userId-activities-goals-daily-post-example.json\r\n    /{id}{mediaTypeExtension}:\r\n      type: base\r\n      delete:\r\n        description: \"Delete user's activity log entry with the given id.\"\r\n        responses:\r\n          204:\r\n            description: \"Activity deleted.\"\r\n    /frequent{mediaTypeExtension}:\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get a list of a user's frequent activities in the format requested using\r\n          units in the unit system which corresponds to the Accept-Language header\r\n          provided. A frequent activity record contains the distance and duration\r\n          values recorded the last time the activity was logged. The record retrieved\r\n          can therefore be used to log the activity via the Log Activity with the same\r\n          or adjusted values for distance and duration.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-activities-recent-get\r\n                example: !include examples/user-userId-activities-recent-get-example.json\r\n    /recent{mediaTypeExtension}:\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get a list of a user's recent activities in the format requested using units\r\n          in the unit system which corresponds to the Accept-Language header provided.\r\n          A recent activity record contains the distance and duration values recorded\r\n          the last time the activity was logged. The record retrieved can therefore be\r\n          used to log the activity via the Log Activity with the same or adjusted values\r\n          for distance and duration.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-activities-recent-get-schema\r\n                example: !include examples/user-userId-activities-recent-get-example.json\r\n    /steps/date/{baseDate}/{period}{mediaTypeExtension}:\r\n      type: base\r\n      get:\r\n        description: \"Get time series in the specified range for steps.\"\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-activities-steps-date-baseDate-period-get\r\n                example: !include examples/user-userId-activities-steps-date-baseDate-period-get-example.json\r\n    /favorite{mediaTypeExtension}:\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get a list of a user's favorite activities in the format requested. A user\r\n          marks an activity as favorite on the user's Activities Tab. The activity\r\n          ids in the list can be used to create a new activity log entry via the Log\r\n          Activity.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-activities-favorite-get\r\n                example: !include examples/user-userId-activities-favorite-get-example.json\r\n      /{favId}{mediaTypeExtension}:\r\n        uriParameters:\r\n          favId:\r\n            description: |\r\n              Id of the activity.\r\n            type: integer\r\n        type: base\r\n        post:\r\n          description: |\r\n            Adds the activity with the given id to user's list of favorite activities.\r\n          body:\r\n            application/json:\r\n              schema: user-userId-activities-favId\r\n          responses:\r\n            201:\r\n              description: \"Activity added.\"\r\n        delete:\r\n          description: |\r\n            Delete the activity with the given id from user's list of favorite activities.\r\n          responses:\r\n            204:\r\n              description: \"Activity deleted.\"\r\n    /date/{date}{mediaTypeExtension}:\r\n      uriParameters:\r\n        date:\r\n          description: \"The date in the format YYYY-mm-dd.\"\r\n      type: base\r\n      get:\r\n        description: |\r\n          Get a summary and list of a user's activities and activity log entries for\r\n          a given day in the format requested using units in the unit system which\r\n          corresponds to the Accept-Language header provided.\r\n        responses:\r\n          200:\r\n            body:\r\n              application/json:\r\n                schema: user-userId-activities-date-date-get\r\n                example: !include examples/user-userId-activities-date-date-get-example.json\r\n  /meals{mediaTypeExtension}:\r\n    type: base\r\n    get:\r\n      description: |\r\n        Get a list of meals user created in his food log in the format requested. User\r\n        creates and manages his meals on the Food Log tab on the website. Meals in the\r\n        list provide a quick way to log several foods at a time via the calls to Log\r\n        Food endpoint.\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-meals-get\r\n              example: !include examples/user-userId-meals-get-example.json\r\n  /apiSubscriptions{mediaTypeExtension}:\r\n    type: base\r\n    get:\r\n      description: |\r\n        Retrieve the list of Fitbit devices for a user in the format requested.\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: user-userId-apiSubscriptions-subscribitionId-post\r\n              example: !include examples/user-userId-apiSubscriptions-subscribitionId-post-example.json\r\n    /{subscribitionId}{mediaTypeExtension}:\r\n      uriParameters:\r\n        subscribitionId:\r\n          type: integer\r\n      type: base\r\n      post:\r\n        description: |\r\n          Add a subscription for the user to get notifications and get a response in\r\n          the format requested.\r\n        responses:\r\n          200:\r\n            description: \"The given subscriber is already subscribed to this stream.\"\r\n            body:\r\n              application/json:\r\n                schema: user-userId-apiSubscriptions-subscribitionId-post-schema\r\n                example: !include examples/user-userId-apiSubscriptions-subscribitionId-post-example.json\r\n          201:\r\n            description: \"New subscription was created in response to your request.\"\r\n            body:\r\n              application/json:\r\n                schema: user-userId-apiSubscriptions-subscribitionId-post-schema\r\n                example: !include examples/user-userId-apiSubscriptions-subscribitionId-post-example.json\r\n          409:\r\n            description: |\r\n              If the given subscriber is already subscribed to this stream using a\r\n              different subscription ID, OR\r\n              if the given subscription ID is already used to identify a subscription\r\n              to a different stream.\r\n      delete:\r\n        description: |\r\n          Delete a subscription for the user and get a response in the format requested.\r\n        responses:\r\n          204:\r\n            description: \"The given subscription was successfully deleted\"\r\n          404:\r\n            description: |\r\n              the given subscription ID did not exist for this application (for example,\r\n              if your application already unsubscribed).\r\n/activities{mediaTypeExtension}:\r\n  type: base\r\n  get:\r\n    description: |\r\n      Get a tree of all valid Fitbit public activities from the activities catalog\r\n      as well as private custom activities the user created in the format requested.\r\n      If activity has levels, also get a list of activity level details.\r\n      Typically, an application will retrieve the complete list of activities once\r\n      at startup to cache and show in the UI later.\r\n    responses:\r\n      200:\r\n        body:\r\n          application/json:\r\n            schema: activities-get\r\n            example: !include examples/activities-get-example.json\r\n  /{activityId}{mediaTypeExtension}:\r\n    uriParameters:\r\n      activityId:\r\n        type: integer\r\n    type: base\r\n    get:\r\n      description: |\r\n        Get the details of a specific activity in Fitbit activities database in the\r\n        format requested. If activity has levels, also get a list of activity level\r\n        details.\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: activities-activityId-get\r\n              example: !include examples/activities-activityId-get-example.json\r\n/foods:\r\n  /units{mediaTypeExtension}:\r\n    type: base\r\n    get:\r\n      description: |\r\n        Get a list of all valid Fitbit food units in the format requested.\r\n        Typically, an application will retrieve the complete list of units once a\r\n        startup. From then on, the application will receive a food-specific lis\r\n        of unit ids along with the Favorite, Recent or Frequent food or by making\r\n        a query to Search Foods endpoint. These are the ids of units that apply to\r\n        the favorite food. The application will refer to the complete list of units\r\n        retrieved previously to get and display to the user the unit name or plural\r\n        name for each unit id on food-specific list.\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: foods-units\r\n              example: !include examples/foods-units-example.json\r\n  /{foodId}{mediaTypeExtension}:\r\n    uriParameters:\r\n      foodId:\r\n        description: \"Id of a food item.\"\r\n        type: integer\r\n    type: base\r\n    get:\r\n      description: |\r\n        Get the details of a specific food in Fitbit Food database (or private food\r\n        for the user) in the format requested. Note, that nutritional values currently\r\n        included in response only for the PRIVATE or SHARED foods.\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: foods-foodId\r\n              example: !include examples/foods-foodId-example.json\r\n  /search{mediaTypeExtension}:\r\n    type: base\r\n    get:\r\n      description: |\r\n        Retrieve the list of Fitbit devices for a user in the format requested.\r\n      queryParameters:\r\n        query:\r\n          description: \"The search query, URL-encoded.\"\r\n      responses:\r\n        200:\r\n          body:\r\n            application/json:\r\n              schema: foods-search\r\n              example: !include examples/foods-search-example.json\r\ndocumentation: \r\n  - title: Headline\r\n    content: !include docs/headline.md","filePath":"api.raml","repo":"Fitbit"},{"path":"/virtual/Fitbit/docs/headline.md","content":"Fitbit offers a free website that can be used with or without the Fitbit Tracker. Users have the ability to log their food, activities, weight, blood pressure, heart rate, and glucose levels to track over time. Users also have the ability to set daily and weekly goals for themselves for steps, calories burned and consumed, and distance walked.","filePath":"docs/headline.md","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/activities-activityId-get-example.json","content":"{\n    \"activity\":\n    {\n        \"accessLevel\":\"PUBLIC\",\n        \"activityLevels\":[\n            {\n                \"id\":1010,\n                \"maxSpeedMPH\":9.9,\n                \"minSpeedMPH\":-1,\n                \"mets\":4,\n                \"name\":\"Very Leisurely - Less than 10 mph\"\n            },\n            {\n                \"id\":1020,\n                \"maxSpeedMPH\":11.9,\n                \"minSpeedMPH\":10,\n                \"mets\":6,\n                \"name\":\"Leisurely - 10 to 11.9mph\"\n            },\n            {\n                \"id\":1030,\n                \"maxSpeedMPH\":13.9,\n                \"minSpeedMPH\":12,\n                \"mets\":8,\n                \"name\":\"Moderate - 12 to 13.9mph\"\n            },\n            {\n                \"id\":1009,\n                \"maxSpeedMPH\":-1,\n                \"minSpeedMPH\":-1,\n                \"mets\":8.5,\n                \"name\":\"Mountain Biking/BMX\"\n            },\n            {\n                \"id\":1040,\n                \"maxSpeedMPH\":15.9,\n                \"minSpeedMPH\":14,\n                \"mets\":10,\n                \"name\":\"Fast - 14 to 15.9mph\"\n            },\n            {\n                \"id\":1050,\n                \"maxSpeedMPH\":19,\n                \"minSpeedMPH\":16,\n                \"mets\":12,\n                \"name\":\"Really Fast - 16 to 19mph\"\n            },\n            {\n                \"id\":1060,\n                \"maxSpeedMPH\":-1,\n                \"minSpeedMPH\":20,\n                \"mets\":16,\n                \"name\":\"Racing - Faster than 20mph\"\n            }\n        ],\n        \"hasSpeed\":true,\n        \"id\":90001,\n        \"name\":\"Bicycling\"\n    }\n}","filePath":"examples/activities-activityId-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/activities-get-example.json","content":"{\n    \"activities\":[\n        {\n            \"activityId\":\"value\",\n            \"activityParentId\":\"value\",\n            \"calories\":\"value\",\n            \"description\":\"value\",\n            \"distance\":\"value\",\n            \"duration\":\"value\",\n            \"hasStartTime\":\"value\",\n            \"isFavorite\":\"value\",\n            \"logId\":\"value\",\n            \"name\":\"value\",\n            \"startTime\":\"value\",\n            \"steps\":\"value\"\n        }\n    ],\n    \"goals\":{\n        \"caloriesOut\":\"value\",\n        \"distance\":\"value\",\n        \"floors\":[],\n        \"steps\":\"value\"\n    },\n    \"summary\":{\n        \"activityCalories\":\"value\",\n        \"caloriesBMR\":\"value\",\n        \"caloriesOut\":\"value\",\n        \"distances\":[\n            {\"activity\":\"tracker\", \"distance\":\"value\"},\n            {\"activity\":\"loggedActivities\", \"distance\":\"value\"},\n            {\"activity\":\"total\", \"distance\":\"value\"},\n            {\"activity\":\"veryActive\", \"distance\":\"value\"},\n            {\"activity\":\"moderatelyActive\", \"distance\":\"value\"},\n            {\"activity\":\"lightlyActive\", \"distance\":\"value\"},\n            {\"activity\":\"sedentaryActive\", \"distance\":\"value\"},\n            {\"activity\":\"ACTIVITY NAME\", \"distance\":\"value\"}\n        ],\n        \"elevation\":\"value\",\n        \"fairlyActiveMinutes\":\"value\",\n        \"floors\":\"value\",\n        \"lightlyActiveMinutes\":\"value\",\n        \"marginalCalories\":\"value\",\n        \"sedentaryMinutes\":\"value\",\n        \"steps\":\"value\",\n        \"veryActiveMinutes\":\"value\"\n    }\n}\n","filePath":"examples/activities-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/foods-foodId-example.json","content":"{\n    \"food\":\n        {\n            \"accessLevel\":\"PUBLIC\",\n            \"brand\":\"Philadelphia Brand\",\n            \"calories\":60,\n            \"defaultServingSize\":2,\n            \"defaultUnit\":{\"id\":349,\"name\":\"tbsp\",\"plural\":\"tbsp\"},\n            \"foodId\":12323,\n            \"locale\":\"en_US\",\n            \"name\":\"Cream Cheese, Ranch, Whipped\",\n            \"servings\":[\n                {\n                    \"multiplier\":1,\n                    \"servingSize\":2,\n                    \"unitId\":349,\n                    \"unit\":{\"id\":349,\"name\":\"tbsp\",\"plural\":\"tbsp\"}\n                },\n                {\n                    \"multiplier\":1,\n                    \"servingSize\":0.7400000095367432,\n                    \"unitId\":226\n                }\n            ],\n            \"units\":[349,364,226,180,147,389],\n            \"nutritionalValues\":\n                {\n                    \"biotin\":0,\n                    \"calcium\":0,\n                    \"calories\":60,\n                    \"caloriesFromFat\":52,\n                    \"cholesterol\":15,\n                    \"copper\":0,\n                    \"dietaryFiber\":0,\n                    \"folicAcid\":0,\n                    \"iodine\":0,\n                    \"iron\":0,\n                    \"magnesium\":0,\n                    \"niacin\":0,\n                    \"pantothenicAcid\":0,\n                    \"phosphorus\":0,\n                    \"potassium\":0,\n                    \"protein\":1,\n                    \"riboflavin\":0,\n                    \"saturatedFat\":3.5,\n                    \"sodium\":150,\n                    \"sugars\":1,\n                    \"thiamin\":0,\n                    \"totalCarbohydrate\":1,\n                    \"totalFat\":6,\n                    \"transFat\":0,\n                    \"vitaminA\":300,\n                    \"vitaminB12\":0,\n                    \"vitaminB6\":0,\n                    \"vitaminC\":0,\n                    \"vitaminD\":0,\n                    \"vitaminE\":0,\n                    \"zinc\":0\n                }\n        }\n}","filePath":"examples/foods-foodId-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/foods-search-example.json","content":"{\n    \"foods\": [\n        {\n            \"accessLevel\":\"PUBLIC\",\n            \"calories\":570,\n            \"defaultServingSize\":100,\n            \"defaultUnit\":{\"id\":147,\"name\":\"gram\",\"plural\":\"grams\"},\n            \"foodId\":18828,\n            \"locale\":\"en_US\",\n            \"name\":\"Chocolate, Milk\",\n            \"units\":[226,180,147,389]\n        },\n        {\n            \"accessLevel\":\"PRIVATE\",\n            \"calories\":564,\n            \"defaultServingSize\":100,\n            \"defaultUnit\":{\"id\":147,\"name\":\"gram\",\"plural\":\"grams\"},\n            \"foodId\":14823,\n            \"name\":\"Chocolate, Bitter\",\n            \"units\":[226,180,147,389]\n        },\n        {\n            \"accessLevel\":\"PUBLIC\",\n            \"brand\":\"Bounty\",\n            \"calories\":488,\n            \"defaultServingSize\":100,\n            \"defaultUnit\":{\"id\":147,\"name\":\"gram\",\"plural\":\"grams\"},\n            \"foodId\":23500,\n            \"locale\":\"en_US\",\n            \"name\":\"Chocolate, Bounty\",\n            \"units\":[226,180,147,389]\n        }\n    ]\n}","filePath":"examples/foods-search-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/foods-units-example.json","content":"[\n    {\n        \"id\":1,\n        \"name\":\"almond\",\n        \"plural\":\"almonds\"\n    },\n    {\n        \"id\":2,\n        \"name\":\"anchovy\",\n        \"plural\":\"anchovies\"\n    }\n]","filePath":"examples/foods-units-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-activities-date-date-get-example.json","content":"{\n    \"activities\":[\n        {\n            \"activityId\":51007,\n            \"activityParentId\":90019,\n            \"calories\":230,\n            \"description\":\"7mph\",\n            \"distance\":2.04,\n            \"duration\":1097053,\n            \"hasStartTime\":true,\n            \"isFavorite\":true,\n            \"logId\":1154701,\n            \"name\":\"Treadmill, 0% Incline\",\n            \"startTime\":\"00:25\",\n            \"steps\":3783\n        }\n    ],\n    \"goals\":{\n        \"caloriesOut\":2826,\n        \"distance\":8.05,\n        \"floors\":150,\n        \"steps\":10000\n     },\n    \"summary\":{\n        \"activityCalories\":230,\n        \"caloriesBMR\":1913,\n        \"caloriesOut\":2143,\n        \"distances\":[\n            {\"activity\":\"tracker\", \"distance\":1.32},\n            {\"activity\":\"loggedActivities\", \"distance\":0},\n            {\"activity\":\"total\",\"distance\":1.32},\n            {\"activity\":\"veryActive\", \"distance\":0.51},\n            {\"activity\":\"moderatelyActive\", \"distance\":0.51},\n            {\"activity\":\"lightlyActive\", \"distance\":0.51},\n            {\"activity\":\"sedentaryActive\", \"distance\":0.51},\n            {\"activity\":\"Treadmill, 0% Incline\", \"distance\":3.28}\n        ],\n        \"elevation\":48.77,\n        \"fairlyActiveMinutes\":0,\n        \"floors\":16,\n        \"lightlyActiveMinutes\":0,\n        \"marginalCalories\":200,\n        \"sedentaryMinutes\":1166,\n        \"steps\":0,\n        \"veryActiveMinutes\":0\n    }\n}","filePath":"examples/user-userId-activities-date-date-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-activities-favorite-get-example.json","content":"[\n    {\n        \"activityId\":1010,\n        \"description\":\"Very Leisurely - Less than 10 mph\",\n        \"mets\":4,\n        \"name\":\"Bicycling\"\n    }\n]","filePath":"examples/user-userId-activities-favorite-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-activities-get-example.json","content":"{\n    \"best\":{\n        \"total\":{\n            \"caloriesOut\":{\n                \"date\":\"2012-01-07\",\n                \"value\":4015\n            },\n           \"distance\":{\n                \"date\":\"2012-01-07\",\n                \"value\":20.31597\n            },\n            \"floors\":{\n                \"date\":\"2012-01-29\",\n                \"value\":14\n            },\n            \"steps\":{\n                \"date\":\"2012-01-07\",\n                \"value\":26901\n            }\n        },\n        \"tracker\":{\n            \"caloriesOut\":{\n                \"date\":\"2012-01-07\",\n                \"value\":5699\n            },\n            \"distance\":{\n                \"date\":\"2012-01-07\",\n                \"value\":20.31597\n            },\n            \"floors\":  {\n                 \"date\":\"2012-01-29\",\n                 \"value\":14\n            },\n            \"steps\":{\n                 \"date\":\"2012-01-07\",\n                 \"value\":26901\n            }\n        }\n    },\n    \"lifetime\":{\n        \"total\":{\n            \"caloriesOut\":60223,\n            \"distance\":2711.62,\n            \"floors\":2500,\n            \"steps\":203300\n        },\n        \"tracker\":{\n            \"caloriesOut\":27565,\n            \"distance\":2579.82,\n            \"floors\":2500,\n            \"steps\":106934\n        }\n     }\n}","filePath":"examples/user-userId-activities-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-activities-goals-daily-get-example.json","content":"{\n    \"goals\":{\n        \"caloriesOut\":2500,\n        \"distance\":8.05,\n        \"floors\":15,\n        \"steps\":10000\n    }\n}","filePath":"examples/user-userId-activities-goals-daily-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-activities-goals-daily-post-example.json","content":"{\n    \"goals\":{\n        \"caloriesOut\":2500,\n        \"distance\":8.05,\n        \"floors\":15,\n        \"steps\":10000,\n        \"activeMinutes\":50\n    }\n}","filePath":"examples/user-userId-activities-goals-daily-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-activities-goals-weekly-get-example.json","content":"{\n    \"goals\":{\n        \"distance\":60,\n        \"floors\":250,\n        \"steps\":70000\n    }\n}","filePath":"examples/user-userId-activities-goals-weekly-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-activities-goals-weekly-post-example.json","content":"{\n    \"goals\":{\n        \"distance\":60,\n        \"floors\":250,\n        \"steps\":70000\n    }\n}","filePath":"examples/user-userId-activities-goals-weekly-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-activities-post-example.json","content":"{\n    \"activityLog\":{\n        \"activityId\":12030,\n        \"activityParentId\":90009,\n        \"calories\":197,\n        \"description\":\"5 mph (12 min/mile)\",\n        \"distance\":3.34,\n        \"duration\":1800000,\n        \"isFavorite\":false,\n        \"logId\":132394,\n        \"name\":\"Running\",\n        \"startTime\":\"12:20\",\n        \"steps\":2970\n    }\n}","filePath":"examples/user-userId-activities-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-activities-recent-get-example.json","content":"[\n    {\n        \"activityId\":1030,\n        \"calories\":1721,\n        \"description\":\"Moderate - 12 to 13.9mph\",\n        \"distance\":1,\n        \"duration\":3723000,\n        \"name\":\"Bicycling\"\n    },\n    {\n        \"activityId\":12030,\n        \"calories\":1124,\n        \"description\":\"Running - 5 mph (12 min/mile)\",\n        \"distance\":2,\n        \"duration\":7322000,\n        \"name\":\"Running\"\n    },\n    {\n        \"activityId\":18240,\n        \"calories\":1476,\n        \"description\":\"\",\n        \"distance\":0,\n        \"duration\":10983000,\n        \"name\":\"Swimming laps, freestyle, slow, moderate or light effort\"\n    },\n    {\n        \"activityId\":17151,\n        \"calories\":357,\n        \"description\":\"Walking less than 2 mph, strolling very slowly\",\n        \"distance\":4,\n        \"duration\":3723000,\n        \"name\":\"Walking\"\n    },\n    {\n        \"activityId\":18120,\n        \"calories\":1291,\n        \"description\":\"\",\n        \"distance\":0,\n        \"duration\":3723000,\n        \"name\":\"Sailing, boat and board sailing, windsurfing, ice sailing, general\"\n    }\n]","filePath":"examples/user-userId-activities-recent-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-activities-steps-date-baseDate-period-get-example.json","content":"{\n    \"activities-log-steps\":[\n        {\"dateTime\":\"2011-04-27\",\"value\":5490},\n        {\"dateTime\":\"2011-04-28\",\"value\":2344},\n        {\"dateTime\":\"2011-04-29\",\"value\":2779},\n        {\"dateTime\":\"2011-04-30\",\"value\":9196},\n        {\"dateTime\":\"2011-05-01\",\"value\":15828},\n        {\"dateTime\":\"2011-05-02\",\"value\":1945},\n        {\"dateTime\":\"2011-05-03\",\"value\":366}\n    ]\n}","filePath":"examples/user-userId-activities-steps-date-baseDate-period-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-apiSubscriptions-subscribitionId-post-example.json","content":"{\n    \"collectionType\":\"user\",\n    \"ownerId\":\"227YZL\",\n    \"ownerType\":\"user\",\n    \"subscriberId\":\"1\",\n    \"subscriptionId\":\"323\"\n}","filePath":"examples/user-userId-apiSubscriptions-subscribitionId-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-badges-get-example.json","content":"{\n    \"badges\":[\n        {\n            \"badgeType\":\"DAILY_FLOORS\",\n            \"dateTime\":\"2012-04-27\",\n            \"image50px\":\"http://www.fitbit.com/images/dash/badge_daily_floors10.png\",\n            \"image75px\":\"http://www.fitbit.com/images/dash/75px/badge_daily_floors10.png\",\n            \"timesAchieved\":3,\n            \"value\":10\n        },\n        {\n            \"badgeType\":\"DAILY_FLOORS\",\n            \"dateTime\":\"2012-04-27\",\n            \"image50px\":\"http://www.fitbit.com/images/dash/badge_daily_floors25.png\",\n            \"image75px\":\"http://www.fitbit.com/images/dash/75px/badge_daily_floors25.png\",\n            \"timesAchieved\":3,\n            \"value\":25\n        },\n        {\n            \"badgeType\":\"DAILY_STEPS\",\n            \"dateTime\":\"2012-04-27\",\n            \"image50px\":\"http://www.fitbit.com/images/dash/badge_daily_steps5k.png\",\n            \"image75px\":\"http://www.fitbit.com/images/dash/75px/badge_daily_steps5k.png\",\n            \"timesAchieved\":6,\n            \"value\":5000\n        },\n        {\n            \"badgeType\":\"LIFETIME_KILOMETERS\",\n            \"dateTime\":\"2011-09-26\",\n            \"image50px\":\"http://www.fitbit.com/images/dash/badge_lifetime_kilometers50.png\",\n            \"image75px\":\"http://www.fitbit.com/images/dash/75px/badge_lifetime_kilometers50.png\",\n            \"timesAchieved\":1,\n            \"unit\":\"KILOMETERS\",\n            \"value\":50\n        },\n        {\n            \"badgeType\":\"LIFETIME_FLOORS\",\n            \"dateTime\":\"2011-09-27\",\n            \"image50px\":\"http://www.fitbit.com/images/dash/badge_lifetime_floors500.png\",\n            \"image75px\":\"http://www.fitbit.com/images/dash/75px/badge_lifetime_floors500.png\",\n            \"name\":\"Helicopter\",\n            \"timesAchieved\":1,\n            \"value\":500\n        },\n        {\n            \"badgeType\":\"GOAL_BASED_WEIGHT_LOSS_POUNDS\",\n            \"dateTime\":\"2012-06-21\",\n            \"image50px\":\"http://www.fitbit.com/images/dash/badge_weight_finish.png\",\n            \"image75px\":\"http://www.fitbit.com/images/dash/75px/badge_weight_finish.png\",\n            \"timesAchieved\":1,\n            \"value\":1\n        },\n        {\n            \"badgeType\":\"LIFETIME_LOSS_POUNDS\",\n            \"dateTime\":\"2012-05-23\",\n            \"image50px\":\"http://www.fitbit.com/images/dash/badge_lifetime_weight_teal.png\",\n            \"image75px\":\"http://www.fitbit.com/images/dash/75px/badge_lifetime_weight_teal.png\",\n            \"timesAchieved\":1,\n            \"unit\":\"POUNDS\",\n            \"value\":-10\n        },\n        {\n            \"badgeType\":\"GOAL_BASED_WEIGHT_LOSS_ACHIEVEMENT\",\n            \"dateTime\":\"2012-06-21\",\n            \"image50px\":\"http://www.fitbit.com/images/dash/badge_weight_finish.png\",\n            \"image75px\":\"http://www.fitbit.com/images/dash/75px/badge_weight_finish.png\",\n            \"timesAchieved\":1,\n            \"value\":1\n        }\n    ]\n}","filePath":"examples/user-userId-badges-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-body-date-date-example.json","content":"{\n    \"body\":\n    {\n        \"bicep\":40,\n        \"bmi\":16.14,\n        \"calf\":11.2,\n        \"chest\":50,\n        \"fat\":0,\n        \"forearm\":22.3,\n        \"hips\":34,\n        \"neck\":30,\n        \"thigh\":45,\n        \"waist\":60,\n        \"weight\":80.55\n    },\n    \"goals\":\n    {\n        \"weight\":75\n    }\n}","filePath":"examples/user-userId-body-date-date-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-body-log-fat-date-get-example.json","content":"{\n    \"fat\":[\n        {\n            \"date\":\"2012-03-05\",\n            \"fat\":14,\n            \"logId\":1330991999000,\n            \"time\":\"23:59:59\"\n        },\n        {\n            \"date\":\"2012-03-05\",\n            \"fat\":13.5,\n            \"logId\":1330991999000,\n            \"time\":\"21:20:59\"\n        }\n    ]\n}","filePath":"examples/user-userId-body-log-fat-date-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-body-log-fat-goal-post-example.json","content":"{\n    \"goal\":{\n        \"fat\":15\n    }\n}","filePath":"examples/user-userId-body-log-fat-goal-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-body-log-fat-post-example.json","content":"{\n    \"weightLog\":{\n        \"bmi\":23.57,\n        \"date\":\"2012-03-05\",\n        \"fat\":14.5,        \n        \"logId\":1330991999000,\n        \"time\":\"23:59:59\"\n    }\n}","filePath":"examples/user-userId-body-log-fat-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-body-log-weight-date-date-get-example.json","content":"{\n    \"weight\":[\n        {\n            \"bmi\":23.57,\n            \"date\":\"2012-03-05\",\n            \"logId\":1330991999000,\n            \"time\":\"23:59:59\",\n            \"weight\":73\n        },\n        {\n            \"bmi\":22.57,\n            \"date\":\"2012-03-05\",\n            \"logId\":1330991999000,\n            \"time\":\"21:10:59\",\n            \"weight\":72.5\n        }\n    ]\n}","filePath":"examples/user-userId-body-log-weight-date-date-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-body-log-weight-goal-get-example.json","content":"{\n    \"goal\": {\n       \"startDate\":\"2012-03-05\",\n       \"startWeight\":70,\n       \"weight\":75\n    }\n}","filePath":"examples/user-userId-body-log-weight-goal-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-body-log-weight-goal-post-example.json","content":"{\n    \"goal\":{\n        \"startDate\":\"2012-03-05\",\n        \"startWeight\":70,\n        \"weight\":75\n    }\n}","filePath":"examples/user-userId-body-log-weight-goal-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-body-log-weight-post-example.json","content":"{\n    \"weightLog\":{\n        \"bmi\":23.57,\n        \"date\":\"2012-03-05\",\n        \"logId\":1330991999000,\n        \"time\":\"23:59:59\",\n        \"weight\":73\n    }\n}","filePath":"examples/user-userId-body-log-weight-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-body-post-example.json","content":"{\n    \"body\":{\n        \"bicep\":10.3,\n        \"calf\":11.2,\n        \"chest\":26.2,\n        \"fat\":14.3,\n        \"forearm\":22.3,\n        \"hips\":10.3,\n        \"neck\":10.3,\n        \"thigh\":10.3,\n        \"waist\":26.2,\n        \"weight\":73\n    }\n}","filePath":"examples/user-userId-body-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-bp-date-date-get-example.json","content":"{\n    \"average\":{\n            \"condition\":\"Prehypertension\",\n            \"diastolic\":85,\n            \"systolic\":115\n    },\n    \"bp\":[\n        {\n            \"diastolic\":80,\n            \"logId\":483697,\n            \"systolic\":120\n        },\n        {\n            \"diastolic\":90,\n            \"logId\":483699,\n            \"systolic\":110,\n            \"time\":\"08:00\"\n        }\n    ]\n}","filePath":"examples/user-userId-bp-date-date-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-bp-post-example.json","content":"{\n    \"bpLog\":{\n        \"diastolic\":80,\n        \"logId\":483753,\n        \"systolic\":120,\n        \"time\":\"10:25\"\n    }\n}","filePath":"examples/user-userId-bp-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-devices-get-example.json","content":"[\n    {     \n        \"battery\":\"High\",\n        \"id\":\"123456\",\n        \"lastSyncTime\":\"2011-08-26T11:19:03.000\",\n        \"type\":\"TRACKER\",\n        \"deviceVersion\":\"Ultra\"\n    }\n]","filePath":"examples/user-userId-devices-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-devices-tracker-trackerId-alarms-alarmId-get-example.json","content":"{\n    \"trackerAlarms\":[\n        {\n            \"alarmId\":8272,\n            \"deleted\":false,\n            \"enabled\":false,\n            \"label\":\"Work!!!\",\n            \"recurring\":true,\n            \"snoozeCount\":3,\n            \"snoozeLength\":9,\n            \"syncedToDevice\":true,\n            \"time\":\"02:00+04:00\",\n            \"vibe\":\"DEFAULT\",\n            \"weekDays\":[\n                \"TUESDAY\",\n                \"WEDNESDAY\",\n                \"THURSDAY\"\n            ]\n        },\n        {\n            \"alarmId\":8273,\n            \"deleted\":false,\n            \"enabled\":false,\n            \"recurring\":false,\n            \"snoozeCount\":3,\n            \"snoozeLength\":1,\n            \"syncedToDevice\":true,\n            \"time\":\"10:15+04:00\",\n            \"vibe\":\"DEFAULT\",\n            \"weekDays\":[]\n        }\n    ]\n}","filePath":"examples/user-userId-devices-tracker-trackerId-alarms-alarmId-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-devices-tracker-trackerId-alarms-alarmId-post-example.json","content":"{\n    \"trackerAlarm\":{\n        \"alarmId\":907604,\n        \"deleted\":false,\n        \"enabled\":false,\n        \"label\":\"Work!!!\",\n        \"recurring\":true,\n        \"snoozeCount\":2,\n        \"snoozeLength\":9,\n        \"syncedToDevice\":true,\n        \"time\":\"19:00+04:00\",\n        \"vibe\":\"DEFAULT\",\n        \"weekDays\":[\n            \"MONDAY\",\n            \"TUESDAY\"\n        ]\n    }\n}","filePath":"examples/user-userId-devices-tracker-trackerId-alarms-alarmId-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-devices-tracker-trackerId-alarms-post-example.json","content":"{\n    \"trackerAlarm\":{\n        \"alarmId\":907604,\n        \"deleted\":false,\n        \"enabled\":false,\n        \"label\":\"Work!!!\",\n        \"recurring\":true,\n        \"snoozeCount\":2,\n        \"snoozeLength\":9,\n        \"syncedToDevice\":true,\n        \"time\":\"19:00+04:00\",\n        \"vibe\":\"DEFAULT\",\n        \"weekDays\":[\n            \"MONDAY\",\n            \"TUESDAY\"\n        ]\n    }\n}","filePath":"examples/user-userId-devices-tracker-trackerId-alarms-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-foods-log-date-date-get-example.json","content":"{\n    \"foods\":[\n        {\n            \"isFavorite\":true,\n            \"logDate\":\"2011-06-29\",\n            \"logId\":1820,\n            \"loggedFood\":{\n                \"accessLevel\":\"PUBLIC\",\n                \"amount\":132.57,\n                \"brand\":\"\",\n                \"calories\":752,\n                \"foodId\":18828,\n                \"mealTypeId\":4,\n                \"locale\":\"en_US\",\n                \"name\":\"Chocolate, Milk\",\n                \"unit\":{\"id\":147,\"name\":\"gram\",\"plural\":\"grams\"},\n                \"units\":[226,180,147,389]\n            },\n            \"nutritionalValues\":{\"calories\":752,\"carbs\":66.5,\"fat\":49,\"fiber\":0.5,\"protein\":12.5,\"sodium\":186}\n        }\n    ],\n    \"summary\":{\"calories\":752,\"carbs\":66.5,\"fat\":49,\"fiber\":0.5,\"protein\":12.5,\"sodium\":186,\"water\":0},\n    \"goals\":{\n        \"calories\": 2286\n    }\n}","filePath":"examples/user-userId-foods-log-date-date-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-foods-log-favorite-get-example.json","content":"[\n    {\n        \"accessLevel\":\"PRIVATE\",\n        \"brand\":\"Philadelphia Brand\",\n        \"calories\":60,\n        \"defaultServingSize\":2,\n        \"defaultUnit\":{\"id\":349,\"name\":\"tbsp\",\"plural\":\"tbsp\"},\n        \"foodId\":12323,\n        \"name\":\"Cream Cheese, Ranch, Whipped\",\n        \"servings\":[\n            {\n                \"multiplier\":1,\n                \"servingSize\":2,\n                \"unitId\":349,\n                \"unit\":{\"id\":349,\"name\":\"tbsp\",\"plural\":\"tbsp\"}\n            },\n            {\n                \"multiplier\":1,\n                \"servingSize\":0.7400000095367432,\n                \"unitId\":226\n            }\n        ],\n        \"units\":[349,364,226,180,147,389],\n        \"nutritionalValues\":\n                {\n                    \"biotin\":0,\n                    \"calcium\":0,\n                    \"calories\":60,\n                    \"caloriesFromFat\":52,\n                    \"cholesterol\":15,\n                    \"copper\":0,\n                    \"dietaryFiber\":0,\n                    \"folicAcid\":0,\n                    \"iodine\":0,\n                    \"iron\":0,\n                    \"magnesium\":0,\n                    \"niacin\":0,\n                    \"pantothenicAcid\":0,\n                    \"phosphorus\":0,\n                    \"potassium\":0,\n                    \"protein\":1,\n                    \"riboflavin\":0,\n                    \"saturatedFat\":3.5,\n                    \"sodium\":150,\n                    \"sugars\":1,\n                    \"thiamin\":0,\n                    \"totalCarbohydrate\":1,\n                    \"totalFat\":6,\n                    \"transFat\":0,\n                    \"vitaminA\":300,\n                    \"vitaminB12\":0,\n                    \"vitaminB6\":0,\n                    \"vitaminC\":0,\n                    \"vitaminD\":0,\n                    \"vitaminE\":0,\n                    \"zinc\":0\n                }    \n    }\n]","filePath":"examples/user-userId-foods-log-favorite-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-foods-log-goal-get-example.json","content":"{\n    \"goals\":{\n        \"calories\":1800\n    },\n    \"foodPlan\":{\n        \"intensity\":\"MEDIUM\",\n        \"estimatedDate\":\"2012-12-31\",\n        \"personalized\":true\n    }\n}","filePath":"examples/user-userId-foods-log-goal-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-foods-log-goal-post-example.json","content":"{\n    \"goals\":{\n        \"calories\":1800\n    },\n    \"foodPlan\":{\n        \"intensity\":\"MEDIUM\",\n        \"estimatedDate\":\"2012-12-31\",\n        \"personalized\":true\n    }\n}","filePath":"examples/user-userId-foods-log-goal-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-foods-log-post-example.json","content":"{\n    \"foodLog\":{\n        \"isFavorite\":true,\n        \"logDate\":\"2011-06-29\",\n        \"logId\":21633,\n        \"loggedFood\":{\n            \"accessLevel\":\"PUBLIC\",\n            \"amount\":2.55,\n            \"brand\":\"\",\n            \"calories\":370,\n            \"foodId\":82294,\n            \"mealTypeId\":7,\n            \"locale\":\"en_US\",\n            \"name\":\"Chips\",\n            \"unit\":{\"id\":304,\"name\":\"serving\",\"plural\":\"servings\"},\n            \"units\":[304,226,180,147,389]\n        },\n        \"nutritionalValues\":{\"calories\":370,\"carbs\":47,\"fat\":17.5,\"fiber\":5,\"protein\":5,\"sodium\":325}\n    }\n}","filePath":"examples/user-userId-foods-log-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-foods-log-recent-get-example.json","content":"[\n    {\n        \"accessLevel\":\"PRIVATE\",\n        \"amount\":1,\n        \"brand\":\"\",\n        \"calories\":59,\n        \"foodId\":25868,\n        \"mealTypeId\":7,\n        \"name\":\"Papaya, Raw\",\n        \"unit\":{\"id\":319,\"name\":\"small\",\"plural\":\"smalls\"},\n        \"units\":[319,204,179,91,256,279,226,180,147,389]\n    },\n    {\n        \"accessLevel\":\"PUBLIC\",\n        \"amount\":1,\n        \"brand\":\"\",\n        \"calories\":154,\n        \"foodId\":1182,\n        \"mealTypeId\":7,\n        \"locale\":\"en_US\",\n        \"name\":\"Yogurt, Lowfat\",\n        \"unit\":{\"id\":91,\"name\":\"cup\",\"plural\":\"cups\"},\n        \"units\":[91,256,279,226,180,147,389]\n    }\n]","filePath":"examples/user-userId-foods-log-recent-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-foods-log-water-date-date-get-example.json","content":"{\n    \"summary\":{\n        \"water\":800\n    },\n    \"water\":[\n        {\"amount\":500,\"logId\":950},\n        {\"amount\":200,\"logId\":951},\n        {\"amount\":100,\"logId\":952}\n    ]\n}","filePath":"examples/user-userId-foods-log-water-date-date-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-foods-log-water-post-example.json","content":"{\n    \"waterLog\":{\n        \"logId\":154654,\n        \"amount\":300\n    }\n}","filePath":"examples/user-userId-foods-log-water-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-foods-post-example.json","content":"{\n    \"food\":\n        {\n            \"accessLevel\":\"PRIVATE\",\n            \"brand\":\"\",\n            \"calories\":100,\n            \"defaultServingSize\":1,\n            \"defaultUnit\":{\n                \"id\":100,\n                \"name\":\"dolma\",\n                \"plural\":\"dolmas\"\n            },\n            \"foodId\":490768,\n            \"name\":\"TestFood\",\n            \"units\":[541]\n        }\n}","filePath":"examples/user-userId-foods-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-friends-get-example.json","content":"{\n    \"friends\":[\n        {\n            \"user\":\n                {\n                    \"aboutMe\":\"I live in San Francisco.\",\n                    \"avatar\":\"http://www.fitbit.com/images/profile/defaultProfile_100_male.gif\",\n                    \"city\":\"San Francisco\",\n                    \"country\":\"US\",\n                    \"dateOfBirth\":\"1970-02-18\",\n                    \"displayName\":\"Nick\",\n                    \"encodedId\":\"257V3V\",\n                    \"fullName\":\"Fitbit\",\n                    \"gender\":\"MALE\",\n                    \"height\":176.7,\n                    \"nickname\":\"Nick\",\n                    \"offsetFromUTCMillis\":25200000,\n                    \"state\":\"CA\",\n                    \"strideLengthRunning\":0,\n                    \"strideLengthWalking\":0,\n                    \"timezone\":\"America/Los_Angeles\",\n                    \"weight\":80.5\n                }\n         },\n         {\n            \"user\":\n                {\n                    \"aboutMe\":\"\",\n                    \"avatar\":\"http://www.fitbit.com/images/profile/defaultProfile_100_male.gif\",\n                    \"city\":\"\",\n                    \"country\":\"\",\n                    \"dateOfBirth\":\"\",\n                    \"displayName\":\"Fitbit U.\",\n                    \"encodedId\":\"2246K9\",\n                    \"fullName\":\"Fitbit User\",\n                    \"gender\":\"NA\",\n                    \"height\":190.7,\n                    \"nickname\":\"\",\n                    \"offsetFromUTCMillis\":14400000,\n                    \"state\":\"\",\n                    \"strideLengthRunning\":0,\n                    \"strideLengthWalking\":0,\n                    \"timezone\":\"Europe/Moscow\",\n                    \"weight\":0\n                }\n         }\n     ]\n}","filePath":"examples/user-userId-friends-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-friends-invitations-get-example.json","content":"{\n    \"friends\":[\n        {\n            \"dateTime\":\"2012-06-05T02:26:29.000\",\n            \"user\":\n                {\n                    \"aboutMe\":\"I live in San Francisco.\",\n                    \"avatar\":\"http://www.fitbit.com/images/profile/defaultProfile_100_male.gif\",\n                    \"city\":\"San Francisco\",\n                    \"country\":\"US\",\n                    \"dateOfBirth\":\"1970-02-18\",\n                    \"displayName\":\"Nick\",\n                    \"encodedId\":\"257V3V\",\n                    \"fullName\":\"Fitbit\",\n                    \"gender\":\"MALE\",\n                    \"height\":176.7,\n                    \"nickname\":\"Nick\",\n                    \"offsetFromUTCMillis\":25200000,\n                    \"state\":\"CA\",\n                    \"strideLengthRunning\":0,\n                    \"strideLengthWalking\":0,\n                    \"timezone\":\"America/Los_Angeles\",\n                    \"weight\":80.5\n                }     \n        }\n    ]\n}","filePath":"examples/user-userId-friends-invitations-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-friends-leaderboard-get-example.json","content":"{\n    \"hideMeFromLeaderboard\":\"false\",\n    \"friends\":[\n        {\n            \"average\":\n                {\n                    \"steps\":9854\n                },\n            \"rank\":\n                {\n                    \"steps\":1\n                },\n            \"summary\":\n                {\n                    \"steps\":56000\n                },\n            \"lastUpdateTime\":\"2013-03-29T13:25:00\",\n            \"user\":\n                {\n                    \"aboutMe\":\"I live in San Francisco.\",\n                    \"avatar\":\"http://www.fitbit.com/images/profile/defaultProfile_100_male.gif\",\n                    \"city\":\"San Francisco\",\n                    \"country\":\"US\",\n                    \"dateOfBirth\":\"1970-02-18\",\n                    \"displayName\":\"Nick\",\n                    \"encodedId\":\"257V3V\",\n                    \"fullName\":\"Fitbit\",\n                    \"gender\":\"MALE\",\n                    \"height\":176.7,\n                    \"nickname\":\"Nick\",\n                    \"offsetFromUTCMillis\":-25200000,\n                    \"state\":\"CA\",\n                    \"timezone\":\"America/Los_Angeles\",\n                    \"weight\":80.5\n                }\n         },\n         {\n            \"average\":\n                {\n                    \"steps\":13854\n                },\n            \"rank\":\n                {\n                    \"steps\":2\n                },\n            \"summary\":\n                {\n                    \"steps\":45000\n                },\n            \"lastUpdateTime\":\"2013-03-29T15:25:00\",\n            \"user\":\n                {\n                    \"aboutMe\":\"\",\n                    \"avatar\":\"http://www.fitbit.com/images/profile/defaultProfile_100_male.gif\",\n                    \"city\":\"\",\n                    \"country\":\"\",\n                    \"dateOfBirth\":\"\",\n                    \"displayName\":\"Fitbit U.\",\n                    \"encodedId\":\"2246K9\",\n                    \"fullName\":\"Fitbit User\",\n                    \"gender\":\"NA\",\n                    \"height\":190.7,\n                    \"nickname\":\"\",\n                    \"offsetFromUTCMillis\":14400000,\n                    \"state\":\"\",\n                    \"timezone\":\"Europe/Moscow\",\n                    \"weight\":0\n                }\n         }\n     ]\n}","filePath":"examples/user-userId-friends-leaderboard-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-friends-leaderboard-post-example.json","content":"{\n    \"hideMeFromLeaderboard\": \"false\",\n    \"friends\":[\n        {\n            \"average\":\n                {\n                    \"steps\":9854\n                },\n            \"rank\":\n                {\n                    \"steps\":1\n                },\n            \"summary\":\n                {\n                    \"steps\":56000\n                },\n            \"lastUpdateTime\":\"2013-03-29T13:25:00\",\n            \"user\":\n                {\n                    \"aboutMe\":\"I live in San Francisco.\",\n                    \"avatar\":\"http://www.fitbit.com/images/profile/defaultProfile_100_male.gif\",\n                    \"city\":\"San Francisco\",\n                    \"country\":\"US\",\n                    \"dateOfBirth\":\"1970-02-18\",\n                    \"displayName\":\"Nick\",\n                    \"encodedId\":\"257V3V\",\n                    \"fullName\":\"Fitbit\",\n                    \"gender\":\"MALE\",\n                    \"height\":176.7,\n                    \"nickname\":\"Nick\",\n                    \"offsetFromUTCMillis\":-25200000,\n                    \"state\":\"CA\",\n                    \"timezone\":\"America/Los_Angeles\",\n                    \"weight\":80.5\n                }\n         },\n         {\n            \"average\":\n                {\n                    \"steps\":13854\n                },\n            \"rank\":\n                {\n                    \"steps\":2\n                },\n            \"summary\":\n                {\n                    \"steps\":45000\n                },\n            \"lastUpdateTime\":\"2013-03-29T15:25:00\",\n            \"user\":\n                {\n                    \"aboutMe\":\"\",\n                    \"avatar\":\"http://www.fitbit.com/images/profile/defaultProfile_100_male.gif\",\n                    \"city\":\"\",\n                    \"country\":\"\",\n                    \"dateOfBirth\":\"\",\n                    \"displayName\":\"Fitbit U.\",\n                    \"encodedId\":\"2246K9\",\n                    \"fullName\":\"Fitbit User\",\n                    \"gender\":\"NA\",\n                    \"height\":190.7,\n                    \"nickname\":\"\",\n                    \"offsetFromUTCMillis\":14400000,\n                    \"state\":\"\",\n                    \"timezone\":\"Europe/Moscow\",\n                    \"weight\":0\n                }\n         }\n     ]\n}","filePath":"examples/user-userId-friends-leaderboard-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-get-example.json","content":"{\n    \"user\":{\n        \"aboutMe\":\"I live in San Francisco.\",\n        \"avatar\":\"http://www.fitbit.com/images/profile/defaultProfile_100_male.gif\",\n        \"avatar150\":\"http://www.fitbit.com/images/profile/defaultProfile_150_male.gif\",\n        \"city\":\"San Francisco\",\n        \"country\":\"US\",\n        \"dateOfBirth\":\"1970-02-18\",\n        \"displayName\":\"Fitbit U.\",\n        \"distanceUnit\":\"METRIC\",\n        \"encodedId\":\"257V3V\",\n        \"fullName\":\"Fitbit User\",\n        \"gender\":\"MALE\",\n        \"glucoseUnit\":\"METRIC\",\n        \"height\":176.75,\n        \"heightUnit\":\"METRIC\",\n        \"nickname\":\"\",\n        \"locale\":\"en_GB\",\n        \"memberSince\":\"2010-02-07\",\n        \"offsetFromUTCMillis\":-25200000,\n        \"state\":\"CA\",\n        \"strideLengthRunning\":0,\n        \"strideLengthWalking\":0,\n        \"timezone\":\"America/Los_Angeles\",\n        \"waterUnit\":\"METRIC\",\n        \"weight\":80.55,\n        \"weightUnit\":\"METRIC\"\n    }\n}","filePath":"examples/user-userId-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-glucose-date-date-get-example.json","content":"{\n    \"glucose\":[\n        {\n            \"glucose\":5,\n            \"tracker\":\"Morning\",\n            \"time\":\"08:00\"\n        },\n        {\n            \"glucose\":5.5,\n            \"tracker\":\"Afternoon\"\n        },\n        {\n            \"glucose\":6,\n            \"tracker\":\"Evening\"\n        },\n        {\n            \"glucose\":7,\n            \"tracker\":\"Custom\"\n        }\n    ],\n    \"hba1c\":4.5\n}","filePath":"examples/user-userId-glucose-date-date-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-glucose-post-example.json","content":"{\n    \"glucose\":[\n        {\n            \"glucose\":5,\n            \"tracker\":\"Morning\",\n            \"time\":\"08:00\"\n        },\n        {\n            \"glucose\":5.5,\n            \"tracker\":\"Afternoon\"\n        },\n        {\n            \"glucose\":6,\n            \"tracker\":\"Evening\"\n        },\n        {\n            \"glucose\":7,\n            \"tracker\":\"Custom\"\n        }\n    ],\n    \"hba1c\":4.5\n}","filePath":"examples/user-userId-glucose-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-heart-date-date-get-example.json","content":"{\n     \"average\":[\n         {\n             \"heartRate\":70,\n             \"tracker\":\"Resting Heart Rate\"\n         },\n         {\n             \"heartRate\":83,\n             \"tracker\":\"Normal Heart Rate\"\n         },\n         {\n             \"heartRate\":130,\n             \"tracker\":\"Exertive Heart Rate\"\n         },\n         {\n             \"heartRate\":150,\n             \"tracker\":\"Running\"\n         }\n    ],\n    \"heart\":[\n         {\n             \"heartRate\":70,\n             \"logId\":1428,\n             \"tracker\":\"Resting Heart Rate\"\n         },\n         {\n             \"heartRate\":85,\n             \"logId\":1427,\n             \"tracker\":\"Normal Heart Rate\"\n         },\n         {\n             \"heartRate\":81,\n             \"logId\":1431,\n             \"tracker\":\"Normal Heart Rate\"\n         },\n         {\n             \"heartRate\":130,\n             \"logId\":1429,\n             \"tracker\":\"Exertive Heart Rate\"\n         },\n         {\n             \"heartRate\":150,\n             \"logId\":1425,\n             \"time\":\"12:20\",\n             \"tracker\":\"Running\"\n         },\n         {\n             \"heartRate\":145,\n             \"logId\":1432,\n             \"time\":\"12:21\",\n             \"tracker\":\"Running\"\n         },\n         {\n             \"heartRate\":157,\n             \"logId\":1433,\n             \"time\":\"12:22\",\n             \"tracker\":\"Running\"\n         }\n    ]\n}","filePath":"examples/user-userId-heart-date-date-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-heart-post-example.json","content":"{\n    \"heartLog\":{\n        \"heartRate\":150,\n        \"logId\":1424,\n        \"time\":\"12:20\",\n        \"tracker\":\"Running\"\n    }\n}","filePath":"examples/user-userId-heart-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-meals-get-example.json","content":"{\n    \"meals\":[\n        {\n            \"mealFoods\":[\n                {\n                    \"accessLevel\":\"PUBLIC\",\n                    \"amount\":1,\n                    \"brand\":\"Dannon\",\n                    \"calories\":15,\n                    \"foodId\":33893,\n                    \"mealTypeId\":7,\n                    \"locale\":\"en_US\",\n                    \"name\":\"Yogurt, Dan-o-nino, Banana\",\n                    \"unit\":{\"id\":91,\"name\":\"cup\",\"plural\":\"cups\"},\n                    \"units\":[91,256,279,226,180,147,389]\n                },\n                {\n                    \"accessLevel\":\"PUBLIC\",\n                    \"amount\":16,\n                    \"brand\":\"\",\n                    \"calories\":9,\n                    \"foodId\":17222,\n                    \"mealTypeId\":7,\n                    \"locale\":\"en_US\",\n                    \"name\":\"Coffee\",\n                    \"unit\":{\"id\":147,\"name\":\"gram\",\"plural\":\"grams\"},\n                    \"units\":[226,180,147,389]\n                }\n            ],\n            \"id\":12430,\n            \"description\":\"\",\n            \"name\":\"Weekend Breakfast\"\n        }\n    ]\n}","filePath":"examples/user-userId-meals-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-post-example.json","content":"{\n    \"user\":{\n        \"aboutMe\":\"I live in San Francisco.\",\n        \"avatar\":\"http://www.fitbit.com/images/profile/defaultProfile_100_male.gif\",\n        \"city\":\"San Francisco\",\n        \"country\":\"US\",\n        \"dateOfBirth\":\"1970-02-18\",\n        \"displayName\":\"Fitbit U.\",\n        \"distanceUnit\":\"METRIC\",\n        \"encodedId\":\"257V3V\",\n        \"foodsLocale\":\"en_US\",\n        \"fullName\":\"Fitbit User\",\n        \"gender\":\"MALE\",\n        \"glucoseUnit\":\"METRIC\",\n        \"height\":176.75,\n        \"heightUnit\":\"METRIC\",\n        \"nickname\":\"\",\n        \"locale\":\"en_GB\",\n        \"memberSince\":\"2010-02-07\",\n        \"offsetFromUTCMillis\":-25200000,\n        \"state\":\"CA\",\n        \"strideLengthRunning\":0,\n        \"strideLengthWalking\":0,\n        \"timezone\":\"America/Los_Angeles\",\n        \"waterUnit\":\"METRIC\",\n        \"weight\":80.55,\n        \"weightUnit\":\"METRIC\"\n    }\n}","filePath":"examples/user-userId-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-sleep-date-date-get-example.json","content":"{\n    \"sleep\":[\n        {\n            \"isMainSleep\":true,\n            \"logId\":29744,\n            \"efficiency\":98,\n            \"startTime\":\"2011-06-16T00:00:00.000\",\n            \"duration\":28800000,\n            \"minutesToFallAsleep\":0,\n            \"minutesAsleep\":480,\n            \"minutesAwake\":0,\n            \"minutesAfterWakeup\":0,\n            \"awakeningsCount\":0,\n            \"timeInBed\":480,\n            \"minuteData\":[\n                {\n                    \"dateTime\":\"00:00:00\",\n                    \"value\":\"3\"\n                },\n                {\n                    \"dateTime\":\"00:01:00\",\n                    \"value\":\"2\"\n                },\n                {\n                    \"dateTime\":\"00:02:00\",\n                    \"value\":\"1\"\n                }\n            ]\n        },   \n        {\n            \"isMainSleep\":false,\n            \"logId\":29745,\n            \"efficiency\":93,\n            \"startTime\":\"2011-06-16T14:00:00.000\",\n            \"duration\":3600000,\n            \"minutesToFallAsleep\":20,\n            \"minutesAsleep\":38,\n            \"minutesAwake\":0,\n            \"minutesAfterWakeup\":2,\n            \"awakeningsCount\":0,\n            \"timeInBed\":60,\n            \"minuteData\":[\n                {\n                    \"dateTime\":\"14:00:00\",\n                    \"value\":\"3\"\n                }]\n        }\n    ],\n    \"summary\":{\n        \"totalMinutesAsleep\":518,\n        \"totalSleepRecords\":2,\n        \"totalTimeInBed\":540\n    }\n}","filePath":"examples/user-userId-sleep-date-date-get-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/examples/user-userId-sleep-post-example.json","content":"{\n    \"sleep\":{\n        \"isMainSleep\":false,\n        \"logId\":29767,\n        \"efficiency\":98,\n        \"startTime\":\"2011-06-16T17:20:00.000\",\n        \"duration\":6000000,\n        \"minutesToFallAsleep\":0,\n        \"minutesAsleep\":47,\n        \"minutesAwake\":24,\n        \"awakeningsCount\":10,\n        \"timeInBed\":100\n    }\n}","filePath":"examples/user-userId-sleep-post-example.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/portal/api.md","content":"","filePath":"portal/api.md","repo":"Fitbit"},{"path":"/virtual/Fitbit/portal/notebook.md","content":"","filePath":"portal/notebook.md","repo":"Fitbit"},{"path":"/virtual/Fitbit/resourceTypes/base.raml","content":"get?:\r\nput?:","filePath":"resourceTypes/base.raml","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/activities-activityId-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"activity\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"accessLevel\": {\n          \"enum\": [\n            \"PUBLIC\",\n            \"PRIVATE\",\n            \"SHARED\"\n          ]\n        },\n        \"activityLevels\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"maxSpeedMPH\": {\n                \"type\": \"number\"\n              },\n              \"minSpeedMPH\": {\n                \"type\": \"integer\"\n              },\n              \"mets\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"hasSpeed\": {\n          \"type\": \"boolean\"\n        },\n        \"id\": {\n          \"type\": \"integer\"\n        },\n        \"name\": {\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}","filePath":"schemas/activities-activityId-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/activities-get-schema.json","content":"{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"activities\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"activityId\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"activityParentId\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"calories\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"description\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"distance\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"duration\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"hasStartTime\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"isFavorite\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"logId\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"startTime\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"steps\": {\n            \"required\": false,\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"goals\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"caloriesOut\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"distance\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"floors\": {\n          \"required\": false,\n          \"type\": \"array\"\n        },\n        \"steps\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    },\n    \"summary\": {\n      \"required\": false,\n      \"type\": \"object\",\n      \"properties\": {\n        \"activityCalories\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"caloriesBMR\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"caloriesOut\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"distances\": {\n          \"required\": false,\n          \"type\": \"array\",\n          \"items\": {\n            \"required\": false,\n            \"type\": \"object\",\n            \"properties\": {\n              \"activity\": {\n                \"required\": false,\n                \"type\": \"string\"\n              },\n              \"distance\": {\n                \"required\": false,\n                \"type\": \"string\"\n              }\n            }\n          }\n        },\n        \"elevation\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"fairlyActiveMinutes\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"floors\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"lightlyActiveMinutes\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"marginalCalories\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"sedentaryMinutes\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"steps\": {\n          \"required\": false,\n          \"type\": \"string\"\n        },\n        \"veryActiveMinutes\": {\n          \"required\": false,\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}\n","filePath":"schemas/activities-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/foods-foodId-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"food\": {\n            \"accessLevel\": {\n                \"enum\": [\n                    \"PUBLIC\",\n                    \"PRIVATE\",\n                    \"SHARED\"\n                ]\n            },\n            \"brand\": {\n                \"type\": \"string\"\n            },\n            \"calories\": {\n                \"type\": \"integer\"\n            },\n            \"defaultServingSize\": {\n                \"type\": \"integer\"\n            },\n            \"defaultUnit\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"plural\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"foodId\": {\n                \"type\": \"integer\"\n            },\n            \"locale\": {\n                \"type\": \"string\"\n            },\n            \"name\": {\n                \"type\": \"string\"\n            },\n            \"servings\": [\n                {\n                    \"properties\": {\n                        \"multiplier\": {\n                            \"type\": \"integer\"\n                        },\n                        \"servingSize\": {\n                            \"type\": \"integer\"\n                        },\n                        \"unitId\": {\n                            \"type\": \"integer\"\n                        },\n                        \"unit\": {\n                            \"properties\": {\n                                \"id\": {\n                                    \"type\": \"integer\"\n                                },\n                                \"name\": {\n                                    \"type\": \"string\"\n                                },\n                                \"plural\": {\n                                    \"type\": \"string\"\n                                }\n                            },\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"type\": \"object\"\n                }\n            ],\n            \"type\": \"array\",\n            \"units\": [\n                {\n                    \"type\": \"integer\"\n                }\n            ],\n            \"nutritionalValues\": {\n                \"biotin\": {\n                    \"type\": \"integer\"\n                },\n                \"calcium\": {\n                    \"type\": \"number\"\n                },\n                \"calories\": {\n                    \"type\": \"number\"\n                },\n                \"caloriesFromFat\": {\n                    \"type\": \"number\"\n                },\n                \"cholesterol\": {\n                    \"type\": \"number\"\n                },\n                \"copper\": {\n                    \"type\": \"number\"\n                },\n                \"dietaryFiber\": {\n                    \"type\": \"number\"\n                },\n                \"folicAcid\": {\n                    \"type\": \"number\"\n                },\n                \"iodine\": {\n                    \"type\": \"number\"\n                },\n                \"iron\": {\n                    \"type\": \"number\"\n                },\n                \"magnesium\": {\n                    \"type\": \"number\"\n                },\n                \"niacin\": {\n                    \"type\": \"number\"\n                },\n                \"pantothenicAcid\": {\n                    \"type\": \"number\"\n                },\n                \"phosphorus\": {\n                    \"type\": \"number\"\n                },\n                \"potassium\": {\n                    \"type\": \"number\"\n                },\n                \"protein\": {\n                    \"type\": \"number\"\n                },\n                \"riboflavin\": {\n                    \"type\": \"number\"\n                },\n                \"saturatedFat\": {\n                    \"type\": \"number\"\n                },\n                \"sodium\": {\n                    \"type\": \"number\"\n                },\n                \"sugars\": {\n                    \"type\": \"number\"\n                },\n                \"thiamin\": {\n                    \"type\": \"number\"\n                },\n                \"totalCarbohydrate\": {\n                    \"type\": \"number\"\n                },\n                \"totalFat\": {\n                    \"type\": \"number\"\n                },\n                \"transFat\": {\n                    \"type\": \"number\"\n                },\n                \"vitaminA\": {\n                    \"type\": \"number\"\n                },\n                \"vitaminB12\": {\n                    \"type\": \"number\"\n                },\n                \"vitaminB6\": {\n                    \"type\": \"number\"\n                },\n                \"vitaminC\": {\n                    \"type\": \"number\"\n                },\n                \"vitaminD\": {\n                    \"type\": \"number\"\n                },\n                \"vitaminE\": {\n                    \"type\": \"number\"\n                },\n                \"zinc\": {\n                    \"type\": \"number\"\n                }\n            }\n        }\n    }\n}","filePath":"schemas/foods-foodId-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/foods-search-schema.json","content":"{\n  \"type\": \"object\",\n  \"\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"foods\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accessLevel\": {\n            \"enum\": [\n              \"PUBLIC\",\n              \"PRIVATE\",\n              \"SHARED\"\n            ]\n          },\n          \"calories\": {\n            \"type\": \"integer\"\n          },\n          \"defaultServingSize\": {\n            \"type\": \"integer\"\n          },\n          \"defaultUnit\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"plural\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"foodId\": {\n            \"type\": \"integer\"\n          },\n          \"locale\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"units\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/foods-search-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/foods-units-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"array\",\n    \"items\": {\n    \t\"properties\": {\n\t\t\t\"id\": {\n\t\t\t\t\"type\": \"integer\"\n\t\t\t},\n\t        \"name\": {\n\t        \t\"type\": \"string\"\n\t        },\n\t        \"plural\": {\n\t        \t\"type\": \"string\"\n\t        }\n        }\n\t}\n}\n","filePath":"schemas/foods-units-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-date-date-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"activities\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"properties\": {\n          \"activityId\": {\n            \"type\": \"integer\"\n          },\n          \"activityParentId\": {\n            \"type\": \"integer\"\n          },\n          \"calories\": {\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"distance\": {\n            \"type\": \"integer\"\n          },\n          \"duration\": {\n            \"type\": \"integer\"\n          },\n          \"hasStartTime\": {\n            \"type\": \"integer\"\n          },\n          \"isFavorite\": {\n            \"type\": \"integer\"\n          },\n          \"logId\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"startTime\": {\n            \"type\": \"string\"\n          },\n          \"steps\": {\n            \"type\": \"integer\"\n          }\n        }\n      }\n    },\n    \"goals\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"caloriesOut\": {\n          \"type\": \"integer\"\n        },\n        \"distance\": {\n          \"type\": \"number\"\n        },\n        \"floors\": {\n          \"type\": \"integer\"\n        },\n        \"steps\": {\n          \"type\": \"integer\"\n        }\n      }\n    },\n    \"summary\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"activityCalories\": {\n          \"type\": \"integer\"\n        },\n        \"caloriesBMR\": {\n          \"type\": \"integer\"\n        },\n        \"caloriesOut\": {\n          \"type\": \"integer\"\n        },\n        \"distances\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"activity\": {\n                \"type\": \"string\"\n              },\n              \"distance\": {\n                \"type\": \"number\"\n              }\n            }\n          }\n        },\n        \"elevation\": {\n          \"type\": \"number\"\n        },\n        \"fairlyActiveMinutes\": {\n          \"type\": \"integer\"\n        },\n        \"floors\": {\n          \"type\": \"integer\"\n        },\n        \"lightlyActiveMinutes\": {\n          \"type\": \"integer\"\n        },\n        \"marginalCalories\": {\n          \"type\": \"integer\"\n        },\n        \"sedentaryMinutes\": {\n          \"type\": \"integer\"\n        },\n        \"steps\": {\n          \"type\": \"integer\"\n        },\n        \"veryActiveMinutes\": {\n          \"type\": \"integer\"\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-activities-date-date-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-favId-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\n    }\n}    ","filePath":"schemas/user-userId-activities-favId-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-favorite-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"array\",\n    \"items\": \n\t\t\t{\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"activityId\": {\n\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t},\n\t\t\t        \"description\": {\n\t\t\t        \t\"type\": \"string\"\n\t\t\t        },\n\t\t\t        \"mets\": {\n\t\t\t        \t\"type\": \"integer\"\n\t\t\t        },\n\t\t\t        \"name\": {\n\t\t\t        \t\"type\": \"string\"\n\t\t\t        }\n\t\t\t\t},\n\t\t\t\t\"type\": \"object\"\n\t\t\t}\n}","filePath":"schemas/user-userId-activities-favorite-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"best\": {\n            \"properties\": {\n                \"total\": {\n                    \"properties\": {\n                        \"caloriesOut\": {\n                            \"properties\": {\n                                \"date\": {\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"type\": \"number\"\n                                }\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"distance\": {\n                            \"properties\": {\n                                \"date\": {\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"type\": \"number\"\n                                }\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"floors\": {\n                            \"properties\": {\n                                \"date\": {\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"type\": \"number\"\n                                }\n                            },\n                            \"type\": \"object\"\n                        },\n                        \"steps\": {\n                            \"properties\": {\n                                \"date\": {\n                                    \"type\": \"string\"\n                                },\n                                \"value\": {\n                                    \"type\": \"number\"\n                                }\n                            },\n                            \"type\": \"object\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"tracker\": {\n                    \"caloriesOut\": {\n                        \"properties\": {\n                            \"date\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"type\": \"number\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"distance\": {\n                        \"properties\": {\n                            \"date\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"type\": \"number\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"floors\": {\n                        \"properties\": {\n                            \"date\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"type\": \"number\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"steps\": {\n                        \"properties\": {\n                            \"date\": {\n                                \"type\": \"string\"\n                            },\n                            \"value\": {\n                                \"type\": \"number\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"lifetime\": {\n            \"properties\": {\n                \"total\": {\n                    \"properties\": {\n                        \"caloriesOut\": {\n                            \"type\": \"number\"\n                        },\n                        \"distance\": {\n                            \"type\": \"number\"\n                        },\n                        \"floors\": {\n                            \"type\": \"string\"\n                        },\n                        \"steps\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    \"type\": \"object\"\n                },\n                \"tracker\": {\n                    \"properties\": {\n                        \"caloriesOut\": {\n                            \"type\": \"number\"\n                        },\n                        \"distance\": {\n                            \"type\": \"number\"\n                        },\n                        \"floors\": {\n                            \"type\": \"integer\"\n                        },\n                        \"steps\": {\n                            \"type\": \"integer\"\n                        }\n                    },\n                    \"type\": \"object\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    }\n}","filePath":"schemas/user-userId-activities-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-goals-daily-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"goals\": {\n\t\t\t\"properties\": {\n\t\t\t\t\"caloriesOut\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t},\n\t\t        \"distance\": {\n\t\t        \t\"type\": \"number\"\n\t\t        },\n\t\t        \"floors\": {\n\t\t        \t\"type\": \"integer\"\n\t\t        },\n\t\t        \"steps\": {\n\t\t        \t\"type\": \"integer\"\n\t\t        }\n\t\t\t},\n\t\t\t\"type\": \"object\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-activities-goals-daily-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-goals-daily-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"goals\": {\n\t\t\t\"properties\": {\n\t\t\t\t\"caloriesOut\": {\n\t\t    \t\t\"type\": \"integer\"\n\t\t    \t},\n\t\t    \t\"activeMinutes\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t    \t},\n\t\t    \t\"floors\": {\n\t\t    \t\t\"type\": \"integer\"\n\t\t    \t},\n\t\t    \t\"distance\": {\n\t\t    \t\t\"type\": \"number\"\n\t\t    \t},\n\t\t    \t\"steps\": {\n\t\t    \t\t\"type\": \"integer\"\n\t\t    \t}\n\t\t\t},\n\t\t\t\"type\": \"object\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-activities-goals-daily-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-goals-daily-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"caloriesOut\": {\n    \t\t\"type\": \"integer\"\n    \t},\n    \t\"activeMinutes\": {\n\t\t\t\"type\": \"integer\"\n    \t},\n    \t\"floors\": {\n    \t\t\"type\": \"integer\"\n    \t},\n    \t\"distance\": {\n    \t\t\"type\": \"number\"\n    \t},\n    \t\"steps\": {\n    \t\t\"type\": \"integer\"\n    \t}\n\t}\n}","filePath":"schemas/user-userId-activities-goals-daily-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-goals-weekly-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"goals\": {\n\t\t\t\"properties\": {\n\t\t\t\t\"distance\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t},\n\t\t        \"floors\": {\n\t\t        \t\"type\": \"integer\"\n\t\t        },\n\t\t        \"steps\": {\n\t\t        \t\"type\": \"integer\"\n\t\t        }\n\t\t\t},\n\t\t\t\"type\": \"object\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-activities-goals-weekly-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-goals-weekly-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"goals\": {\n\t\t\t\"properties\": {\n\t\t\t\t\"steps\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t},\n\t\t\t\t\"distance\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t},\n\t\t\t\t\"floors\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"type\": \"object\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-activities-goals-weekly-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-goals-weekly-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"steps\": {\n\t\t\t\"type\": \"integer\"\n\t\t},\n\t\t\"distance\": {\n\t\t\t\"type\": \"number\"\n\t\t},\n\t\t\"floors\": {\n\t\t\t\"type\": \"integer\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-activities-goals-weekly-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"activityLog\": {\n\t\t\t\"properties\": {\n\t\t\t\t\"activityId\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t},\n\t\t\t\t\"activityName\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"manualCalories\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t},\n\t\t\t\t\"startTime\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"durationMillis\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t},\n\t\t\t\t\"date\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"distance\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"distanceUnit\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"type\": \"object\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-activities-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-recent-get-schema.json","content":"{\n  \"type\": \"array\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"activityId\": {\n            \"description\": \"The activity id.\",\n            \"type\": \"integer\"\n          },\n          \"calories\": {\n            \"description\": \"Calories expended during the activity the last time it was logged.\",\n            \"type\": \"number\"\n          },\n          \"description\": {\n            \"description\": \"Activity level description for an activity with level. Empty for an activity with no level.\",\n            \"type\": \"string\"\n          },\n          \"distance\": {\n            \"description\": \"Distance in units specified via the unit system.\",\n            \"type\": \"number\"\n          },\n          \"duration\": {\n            \"description\": \"Duration in milliseconds.\",\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"description\": \"Name of the activity.\",\n            \"type\": \"string\"\n          }\n        }\n  \t  }\n}\n","filePath":"schemas/user-userId-activities-recent-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"activityId\": {\n\t\t\t\"description\": \"Activity id; id of the activity, directory activity or intensity level activity; if you pass directory activity id Fitbit will calculate and substitute it with the intensity level activity id, based on distance/duration.\",\n\t\t\t\"type\": \"integer\"\n\t\t},\n\t\t\"activityName\": {\n\t\t\t\"description\": \"Custom activity name; either activityId or activityName should be provided.\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"manualCalories\": {\n\t\t\t\"description\": \"Manual calories; amount of calories defined manually; required with activityName parameter, otherwise optional.\",\n\t\t\t\"type\": \"integer\"\n\t\t},\n\t\t\"startTime\": {\n\t\t\t\"description\": \"Start time; hours and minutes in the format HH:mm\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"required\": true\n\t\t},\n\t\t\"durationMillis\": {\n\t\t\t\"description\": \"Duration; in milliseconds.\",\n\t\t\t\"type\": \"integer\",\n\t\t\t\"required\": true\n\t\t},\n\t\t\"date\": {\n\t\t\t\"description\": \"Log entry date; in the format yyyy-MM-dd\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"required\": true\n\t\t},\n\t\t\"distance\": {\n\t\t\t\"description\": \"Distance; required for logging directory activity; in the format X.XX, in the selected distanceUnit or in the unit system that corresponds to the Accept-Language header provided.\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"distanceUnit\": {\n\t\t\t\"description\": \"Distance measurement unit; Steps units are available only for 'Walking' (activityId=90013) and 'Running' (activityId=90009) directory activities and their intensity levels\",\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-activities-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-activities-steps-date-baseDate-period-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"activities-log-steps\": \n\t\t\t{\n\t\t\t\t\"dateTime\": {\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"value\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t}\n}","filePath":"schemas/user-userId-activities-steps-date-baseDate-period-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-apiSubscriptions-subscribitionId-post-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"collectionType\": {\n    \t\t\"type\": \"string\"\n    \t},\n        \"ownerId\": {\n        \t\"type\": \"string\"\n        },\n        \"ownerType\": {\n        \t\"type\": \"string\"\n        },\n        \"subscriberId\": {\n        \t\"type\": \"string\"\n        },\n        \"subscriptionId\": {\n        \t\"type\": \"string\"\n        }\n    }\n}    ","filePath":"schemas/user-userId-apiSubscriptions-subscribitionId-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-badges-get-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"badges\": \n            {\n                \"properties\": {\n                    \"badgeType\": {\n                        \"type\": \"string\"\n                    },\n                    \"dateTime\": {\n                        \"type\": \"string\"\n                    },\n                    \"image50px\": {\n                        \"type\": \"string\"\n                    },\n                    \"image75px\": {\n                        \"type\": \"string\"\n                    },\n                    \"timesAchieved\": {\n                        \"type\": \"integer\"\n                    },\n                    \"value\": {\n                        \"type\": \"integer\"\n                    }\n                },\n                \"type\": \"object\"\n            }\n        \n    }\n}","filePath":"schemas/user-userId-badges-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-date-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"body\": {\n            \"properties\": {\n                \"bicep\": {\n                    \"type\": \"number\"\n                },\n                \"bmi\": {\n                    \"type\": \"number\"\n                },\n                \"calf\": {\n                    \"type\": \"number\"\n                },\n                \"chest\": {\n                    \"type\": \"number\"\n                },\n                \"fat\": {\n                    \"type\": \"number\"\n                },\n                \"forearm\": {\n                    \"type\": \"number\"\n                },\n                \"hips\": {\n                    \"type\": \"number\"\n                },\n                \"neck\": {\n                    \"type\": \"number\"\n                },\n                \"thigh\": {\n                    \"type\": \"number\"\n                },\n                \"waist\": {\n                    \"type\": \"number\"\n                },\n                \"weight\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"goals\": {\n            \"properties\": {\n                \"weight\": {\n                    \"type\": \"number\"\n                }\n            }\n        }\n    }\n}","filePath":"schemas/user-userId-body-date-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-fat-date-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"fat\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"date\": {\n            \"type\": \"string\"\n          },\n          \"fat\": {\n            \"type\": \"integer\"\n          },\n          \"logId\": {\n            \"type\": \"integer\"\n          },\n          \"time\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-body-log-fat-date-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-fat-goal-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"goal\": {\n            \"properties\": {\n                \"bodyFat\": {\n                    \"type\": \"number\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    }\n}","filePath":"schemas/user-userId-body-log-fat-goal-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-fat-goal-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"goal\": {\n\t\t\t\"properties\": {\n\t\t\t\t\"fat\": {\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"type\": \"object\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-body-log-fat-goal-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-fat-goal-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"fat\": {\n\t\t\t\"description\": \"Target body fat in %; in the format X.XX\",\n\t\t\t\"type\": \"number\",\n            \"required\": true\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-body-log-fat-goal-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-fat-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"weightLog\":{\n\t        \"properties\": {\n\t        \t\"bmi\": {\n\t        \t\t\"type\": \"number\"\n\t        \t},\n\t\t        \"date\": {\n\t\t        \t\"type\": \"string\"\n\t\t        },\n\t\t        \"fat\": {\n\t\t        \t\"type\": \"number\"\n\t\t        },\n\t\t        \"logId\": {\n\t\t        \t\"type\": \"integer\"\n\t\t        },\n\t\t        \"time\": {\n\t\t        \t\"type\": \"string\"\n\t\t        }\n\t        },\n\t        \"type\": \"object\"\n\t    }\n\t}\n}","filePath":"schemas/user-userId-body-log-fat-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-fat-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"fat\": {\n\t\t\t\"description\": \"Body Fat; in the format X.XX, in the unit system that corresponds to the Accept-Language header provided.\",\n\t\t\t\"type\": \"number\",\n            \"required\": true\n\t\t},\n\t\t\"date\": {\n\t\t\t\"description\": \"Log entry date; in the format yyyy-MM-dd\",\n\t\t\t\"type\": \"string\",\n            \"required\": true\n\t\t},\n\t\t\"time\": {\n\t\t\t\"description\": \"Time of the measurement; hours and minutes in the format HH:mm:ss; set to last second of the day if not provided.\",\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-body-log-fat-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-weight-date-date-get-schema.json","content":"{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"required\": false,\n  \"type\": \"object\",\n  \"properties\": {\n    \"weight\": {\n      \"required\": false,\n      \"type\": \"array\",\n      \"items\": {\n        \"required\": false,\n        \"type\": \"object\",\n        \"properties\": {\n          \"bmi\": {\n            \"required\": false,\n            \"type\": \"number\"\n          },\n          \"date\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"logId\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          },\n          \"time\": {\n            \"required\": false,\n            \"type\": \"string\"\n          },\n          \"weight\": {\n            \"required\": false,\n            \"type\": \"integer\"\n          }\n        }\n      }\n    }\n  }\n}\n","filePath":"schemas/user-userId-body-log-weight-date-date-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-weight-goal-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"goal\": {\n            \"startDate\": {\n                \"type\": \"string\"\n            },\n            \"startWeight\": {\n                \"type\": \"integer\"\n            },\n            \"weight\": {\n                \"type\": \"integer\"\n            }\n        }\n    }\n}","filePath":"schemas/user-userId-body-log-weight-goal-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-weight-goal-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"goal\": {\n            \"properties\": {\n                \"startDate\": {\n                    \"type\": \"string\"\n                },\n                \"startWeight\": {\n                    \"type\": \"integer\"\n                },\n                \"weight\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    }\n}","filePath":"schemas/user-userId-body-log-weight-goal-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-weight-goal-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"startDate\": {\n\t\t\t\"description\": \"Weight goal start date; in the format yyyy-MM-dd.\",\n\t\t\t\"type\": \"string\",\n            \"required\": true\n\t\t},\n\t\t\"startWeight\": {\n\t\t\t\"description\": \"Weight goal start weight; in the format X.XX, in the unit system that corresponds to the Accept-Language header provided.\",\n\t\t\t\"type\": \"string\",\n      \t\t\"required\": true\n\t\t},\n\t\t\"weight\": {\n\t\t\t\"description\": \"Weight goal target weight; in the format X.XX, in the unit system that corresponds to the Accept-Language header provided; required if user doesn't have a weight goal.\",\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-body-log-weight-goal-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-weight-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"weightLog\": {\n        \t\"properties\": {\n        \t\t\"bmi\": {\n        \t\t\t\"type\": \"number\"\n        \t\t},\n\t\t        \"date\": {\n\t\t        \t\"type\": \"string\"\n\t\t        },\n\t\t        \"logId\": {\n\t\t        \t\"type\": \"integer\"\n\t\t        },\n\t\t        \"time\": {\n\t\t        \t\"type\": \"string\"\n\t\t        },\n\t\t        \"weight\": {\n\t\t        \t\"type\": \"number\"\n\t\t        }\n        \t},\n        \t\"type\": \"object\"\n    \t}\n\t}\n}","filePath":"schemas/user-userId-body-log-weight-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-log-weight-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"weight\": {\n\t\t\t\"description\": \"Weight; in the format X.XX, in the unit system that corresponds to the Accept-Language header provided.\",\n\t\t\t\"type\": \"number\",\n            \"required\": true\n\t\t},\n\t\t\"date\": {\n\t\t\t\"description\": \"Log entry date; in the format yyyy-MM-dd\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"time\": {\n\t\t\t\"description\": \"Time of the measurement; hours and minutes in the format HH:mm:ss; set to last second of the day if not provided.\",\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-body-log-weight-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"body\": {\n            \"description\": \"At least one optional parameter required.\",\n            \"date\": {\n                \"description\": \"Measurement date; in the format yyyy-MM-dd\",\n                \"type\": \"string\"\n            },\n            \"bicep\": {\n                \"description\": \"Bicep; in the format X.XX\",\n                \"type\": \"number\"\n            },\n            \"calf\": {\n                \"description\": \"Calf; in the format X.XX\",\n                \"type\": \"number\"\n            },\n            \"chest\": {\n                \"description\": \"Chest; in the format X.XX\",\n                \"type\": \"number\"\n            },\n            \"fat\": {\n                \"description\": \"Body Fat %; in the format X.XX\",\n                \"type\": \"number\"\n            },\n            \"forearm\": {\n                \"description\": \"Forearm; in the format X.XX\",\n                \"type\": \"number\"\n            },\n            \"hips\": {\n                \"description\": \"Hips; in the format X.XX\",\n                \"type\": \"number\"\n            },\n            \"neck\": {\n                \"description\": \"Neck; in the format X.XX\",\n                \"type\": \"number\"\n            },\n            \"thigh\": {\n                \"description\": \"Thigh; in the format X.XX\",\n                \"type\": \"number\"\n            },\n            \"waist\": {\n                \"description\": \"Waist; in the format X.XX\",\n                \"type\": \"number\"\n            },\n            \"weight\": {\n                \"description\": \"Weight; in the format X.XX\",\n                \"type\": \"string\"\n            }\n        }\n    }\n}","filePath":"schemas/user-userId-body-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"date\": {\n      \"description\": \"Measurement date; in the format yyyy-MM-dd\",\n      \"type\": \"string\",\n      \"required\": true\n    },\n    \"bicep\": {\n      \"description\": \"Bicep; in the format X.XX\",\n      \"type\": \"number\"\n    },\n    \"calf\": {\n      \"description\": \"Calf; in the format X.XX\",\n      \"type\": \"number\"\n    },\n    \"chest\": {\n      \"description\": \"Chest; in the format X.XX\",\n      \"type\": \"number\"\n    },\n    \"fat\": {\n      \"description\": \"Body Fat %; in the format X.XX\",\n      \"type\": \"number\"\n    },\n    \"forearm\": {\n      \"description\": \"Forearm; in the format X.XX\",\n      \"type\": \"number\"\n    },\n    \"hips\": {\n      \"description\": \"Hips; in the format X.XX\",\n      \"type\": \"number\"\n    },\n    \"neck\": {\n      \"description\": \"Neck; in the format X.XX\",\n      \"type\": \"number\"\n    },\n    \"thigh\": {\n      \"description\": \"Thigh; in the format X.XX\",\n      \"type\": \"number\"\n    },\n    \"waist\": {\n      \"description\": \"Waist; in the format X.XX\",\n      \"type\": \"number\"\n    },\n    \"weight\": {\n      \"description\": \"Weight; in the format X.XX\",\n      \"type\": \"string\"\n    }\n  }\n}","filePath":"schemas/user-userId-body-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-body-weight-date-baseDate-period-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"body-log-weight\": \n\t\t\t{\n\t\t\t\t\"properties\": {\n\t\t\t\t\t\"dateTime\": {\n\t\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t\t},\n\t\t\t\t\t\"value\": {\n\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"type\": \"object\"\n\t\t\t}\n\t\t\n\t}\n}","filePath":"schemas/user-userId-body-weight-date-baseDate-period-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-bp-date-date-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"average\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"condition\": {\n          \"type\": \"string\"\n        },\n        \"diastolic\": {\n          \"type\": \"integer\"\n        },\n        \"systolic\": {\n          \"type\": \"integer\"\n        }\n      }\n    },\n    \"bp\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"diastolic\": {\n            \"type\": \"integer\"\n          },\n          \"logId\": {\n            \"type\": \"integer\"\n          },\n          \"systolic\": {\n            \"type\": \"integer\"\n          },\n          \"time\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-bp-date-date-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-bp-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"bpLog\": {\n\t\t\t\"properties\": {\n\t\t\t\t\"diastolic\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t},\n\t\t        \"logId\": {\n\t\t        \t\"type\": \"integer\"\n\t\t        },\n\t\t        \"systolic\": {\n\t\t        \t\"type\": \"integer\"\n\t\t        },\n\t\t        \"time\": {\n\t\t        \t\"type\": \"string\"\n\t\t        }\n\t\t\t},\n\t\t\t\"type\": \"object\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-bp-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-bp-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"systolic\": {\n    \t\t\"description\": \"Systolic measurement.\",\n    \t\t\"type\": \"integer\",\n\t\t\t\"required\": true\n    \t},\n    \t\"diastolic\": {\n    \t\t\"description\": \"Diastolic measurement.\",\n    \t\t\"type\": \"integer\",\n\t\t\t\"required\": true\n    \t},\n    \t\"date\": {\n    \t\t\"description\": \"Log entry date; in the format yyyy-MM-dd.\",\n    \t\t\"type\": \"string\",\n\t\t\t\"required\": true\n    \t},\n    \t\"time\": {\n    \t\t\"description\": \"Time of the measurement; hours and minutes in the format HH:mm.\",\n    \t\t\"type\": \"string\"\n    \t}\n\t}\n}","filePath":"schemas/user-userId-bp-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-devices-get-schema.json","content":"{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"battery\": {\n            \"type\": \"string\"\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"lastSyncTime\": {\n            \"type\": \"string\"\n          },\n          \"type\": {\n            \"enum\": [\n              \"TRACKER\",\n              \"SCALE\"\n            ]\n          },\n          \"deviceVersion\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n}\n","filePath":"schemas/user-userId-devices-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-devices-tracker-trackerId-alarms-alarmId-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"trackerAlarms\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"alarmId\": {\n          \"type\": \"integer\"\n        },\n        \"deleted\": {\n          \"type\": \"boolean\"\n        },\n        \"enabled\": {\n          \"type\": \"boolean\"\n        },\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"recurring\": {\n          \"type\": \"boolean\"\n        },\n        \"snoozeCount\": {\n          \"type\": \"integer\"\n        },\n        \"snoozeLength\": {\n          \"type\": \"integer\"\n        },\n        \"syncedToDevice\": {\n          \"type\": \"boolean\"\n        },\n        \"time\": {\n          \"type\": \"string\"\n        },\n        \"vibe\": {\n          \"type\": \"string\"\n        },\n        \"weekDays\": [\n          {\n            \"enum\": [\n              \"SUNDAY\",\n              \"MONDAY\",\n              \"TUESDAY\",\n              \"WEDNESDAY\",\n              \"THURSDAY\",\n              \"FRIDAY\",\n              \"SATURDAY\"\n            ]\n          }\n        ]\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-devices-tracker-trackerId-alarms-alarmId-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-devices-tracker-trackerId-alarms-alarmId-post-schema.json","content":"{\n  \"type\": \"object\",\n  \"\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"trackerAlarm\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"alarmId\": {\n          \"type\": \"integer\"\n        },\n        \"deleted\": {\n          \"type\": \"boolean\"\n        },\n        \"enabled\": {\n          \"type\": \"boolean\"\n        },\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"recurring\": {\n          \"type\": \"boolean\"\n        },\n        \"snoozeCount\": {\n          \"type\": \"integer\"\n        },\n        \"snoozeLength\": {\n          \"type\": \"integer\"\n        },\n        \"syncedToDevice\": {\n          \"type\": \"boolean\"\n        },\n        \"time\": {\n          \"type\": \"string\"\n        },\n        \"vibe\": {\n          \"type\": \"string\"\n        },\n        \"weekDays\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"enum\": [\n              \"MONDAY\",\n              \"TUESDAY\",\n              \"WEDNESDAY\",\n              \"THURSDAY\",\n              \"FRIDAY\",\n              \"SATURDAY\",\n              \"SUNDAY\"\n            ]\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-devices-tracker-trackerId-alarms-alarmId-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-devices-tracker-trackerId-alarms-alarmId-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"time\": {\n            \"description\": \"Time of the alarm; in the format XX:XX+XX:XX, time with timezone; on backend will be converted to timezone of the user's profile.\",\n            \"type\": \"string\",\n            \"required\": true\n        },\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"required\": true\n        },\n        \"recurring\": {\n            \"description\": \"One time or recurring alarm.\",\n            \"type\": \"boolean\",\n            \"required\": true\n        },\n        \"weekDays\": {\n            \"description\": \"The days alarm active on; for recurring alarm only, otherwise alarm active only next time.\",\n            \"enum\": [\n                \"MONDAY\",\n                \"TUESDAY\",\n                \"WEDNESDAY\",\n                \"THURSDAY\",\n                \"FRIDAY\",\n                \"SATURDAY\",\n                \"SUNDAY\"\n            ],\n            \"required\": true\n        },\n        \"label\": {\n            \"description\": \"Label for the alarm.\",\n            \"type\": \"string\"\n        },\n        \"snoozeLength\": {\n            \"description\": \"Minutes between alarms.\",\n            \"type\": \"integer\"\n        },\n        \"snoozeCount\": {\n            \"description\": \"Maximum snooze count.\",\n            \"type\": \"integer\"\n        },\n        \"vibe\": {\n            \"description\": \"Vibe pattern; only one value for now  DEFAULT\",\n            \"type\": \"string\"\n        }\n    }\n}","filePath":"schemas/user-userId-devices-tracker-trackerId-alarms-alarmId-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-devices-tracker-trackerId-alarms-post-schema.json","content":"{\n  \"type\": \"object\",\n  \"\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"trackerAlarm\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"alarmId\": {\n          \"type\": \"integer\"\n        },\n        \"deleted\": {\n          \"type\": \"boolean\"\n        },\n        \"enabled\": {\n          \"type\": \"boolean\"\n        },\n        \"label\": {\n          \"type\": \"string\"\n        },\n        \"recurring\": {\n          \"type\": \"boolean\"\n        },\n        \"snoozeCount\": {\n          \"type\": \"integer\"\n        },\n        \"snoozeLength\": {\n          \"type\": \"integer\"\n        },\n        \"syncedToDevice\": {\n          \"type\": \"boolean\"\n        },\n        \"time\": {\n          \"type\": \"string\"\n        },\n        \"vibe\": {\n          \"type\": \"string\"\n        },\n        \"weekDays\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"enum\": [\n              \"MONDAY\",\n              \"TUESDAY\",\n              \"WEDNESDAY\",\n              \"THURSDAY\",\n              \"FRIDAY\",\n              \"SATURDAY\",\n              \"SUNDAY\"\n            ]\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-devices-tracker-trackerId-alarms-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-devices-tracker-trackerId-alarms-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"time\": {\n            \"description\": \"Time of the alarm; in the format XX:XX+XX:XX, time with timezone; on backend will be converted to timezone of the user's profile.\",\n            \"type\": \"string\",\n            \"required\": true\n        },\n        \"enabled\": {\n            \"type\": \"boolean\",\n            \"required\": true\n        },\n        \"recurring\": {\n            \"description\": \"One time or recurring alarm.\",\n            \"type\": \"boolean\",\n            \"required\": true\n        },\n        \"weekDays\": {\n            \"description\": \"The days alarm active on; for recurring alarm only, otherwise alarm active only next time.\",\n            \"enum\": [\n                \"MONDAY\",\n                \"TUESDAY\",\n                \"WEDNESDAY\",\n                \"THURSDAY\",\n                \"FRIDAY\",\n                \"SATURDAY\",\n                \"SUNDAY\"\n            ],\n            \"required\": true\n        },\n        \"label\": {\n            \"description\": \"Label for the alarm.\",\n            \"type\": \"string\"\n        },\n        \"snoozeLength\": {\n            \"description\": \"Minutes between alarms.\",\n            \"type\": \"integer\"\n        },\n        \"snoozeCount\": {\n            \"description\": \"Maximum snooze count.\",\n            \"type\": \"integer\"\n        },\n        \"vibe\": {\n            \"description\": \"Vibe pattern; only one value for now  DEFAULT\",\n            \"type\": \"string\"\n        }\n    }\n}","filePath":"schemas/user-userId-devices-tracker-trackerId-alarms-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-log-date-date-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"foods\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"isFavorite\": {\n            \"type\": \"boolean\"\n          },\n          \"logDate\": {\n            \"type\": \"string\"\n          },\n          \"logId\": {\n            \"type\": \"integer\"\n          },\n          \"loggedFood\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"accessLevel\": {\n                \"enum\": [\n                  \"PUBLIC\",\n                  \"PRIVATE\",\n                  \"SHARED\"\n                ]\n              },\n              \"amount\": {\n                \"type\": \"number\"\n              },\n              \"brand\": {\n                \"type\": \"string\"\n              },\n              \"calories\": {\n                \"type\": \"integer\"\n              },\n              \"foodId\": {\n                \"type\": \"integer\"\n              },\n              \"mealTypeId\": {\n                \"type\": \"integer\"\n              },\n              \"locale\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"unit\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"integer\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"plural\": {\n                    \"type\": \"string\"\n                  }\n                }\n              },\n              \"units\": {\n                \"type\": \"array\",\n                \"items\": {\n                  \"type\": \"integer\"\n                }\n              }\n            }\n          },\n          \"nutritionalValues\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"calories\": {\n                \"type\": \"integer\"\n              },\n              \"carbs\": {\n                \"type\": \"number\"\n              },\n              \"fat\": {\n                \"type\": \"number\"\n              },\n              \"fiber\": {\n                \"type\": \"number\"\n              },\n              \"protein\": {\n                \"type\": \"number\"\n              },\n              \"sodium\": {\n                \"type\": \"number\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"summary\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"calories\": {\n          \"type\": \"integer\"\n        },\n        \"carbs\": {\n          \"type\": \"number\"\n        },\n        \"fat\": {\n          \"type\": \"number\"\n        },\n        \"fiber\": {\n          \"type\": \"number\"\n        },\n        \"protein\": {\n          \"type\": \"number\"\n        },\n        \"sodium\": {\n          \"type\": \"number\"\n        },\n        \"water\": {\n          \"type\": \"number\"\n        }\n      }\n    },\n    \"goals\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"calories\": {\n          \"type\": \"integer\"\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-foods-log-date-date-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-log-favorite-get-schema.json","content":"{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accessLevel\": {\n            \"enum\": [\n              \"PRIVATE\",\n              \"PUBLIC\",\n              \"SHARED\"\n            ]\n          },\n          \"brand\": {\n            \"type\": \"string\"\n          },\n          \"calories\": {\n            \"type\": \"integer\"\n          },\n          \"defaultServingSize\": {\n            \"type\": \"integer\"\n          },\n          \"defaultUnit\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"plural\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"foodId\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"servings\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"object\",\n              \"properties\": {\n                \"multiplier\": {\n                  \"type\": \"integer\"\n                },\n                \"servingSize\": {\n                  \"type\": \"integer\"\n                },\n                \"unitId\": {\n                  \"type\": \"integer\"\n                },\n                \"unit\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"id\": {\n                      \"type\": \"integer\"\n                    },\n                    \"name\": {\n                      \"type\": \"string\"\n                    },\n                    \"plural\": {\n                      \"type\": \"string\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"units\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          },\n          \"nutritionalValues\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"biotin\": {\n                \"type\": \"number\"\n              },\n              \"calcium\": {\n                \"type\": \"number\"\n              },\n              \"calories\": {\n                \"type\": \"number\"\n              },\n              \"caloriesFromFat\": {\n                \"type\": \"number\"\n              },\n              \"cholesterol\": {\n                \"type\": \"number\"\n              },\n              \"copper\": {\n                \"type\": \"number\"\n              },\n              \"dietaryFiber\": {\n                \"type\": \"number\"\n              },\n              \"folicAcid\": {\n                \"type\": \"number\"\n              },\n              \"iodine\": {\n                \"type\": \"number\"\n              },\n              \"iron\": {\n                \"type\": \"number\"\n              },\n              \"magnesium\": {\n                \"type\": \"number\"\n              },\n              \"niacin\": {\n                \"type\": \"number\"\n              },\n              \"pantothenicAcid\": {\n                \"type\": \"number\"\n              },\n              \"phosphorus\": {\n                \"type\": \"number\"\n              },\n              \"potassium\": {\n                \"type\": \"number\"\n              },\n              \"protein\": {\n                \"type\": \"number\"\n              },\n              \"riboflavin\": {\n                \"type\": \"number\"\n              },\n              \"saturatedFat\": {\n                \"type\": \"number\"\n              },\n              \"sodium\": {\n                \"type\": \"number\"\n              },\n              \"sugars\": {\n                \"type\": \"number\"\n              },\n              \"thiamin\": {\n                \"type\": \"number\"\n              },\n              \"totalCarbohydrate\": {\n                \"type\": \"number\"\n              },\n              \"totalFat\": {\n                \"type\": \"number\"\n              },\n              \"transFat\": {\n                \"type\": \"number\"\n              },\n              \"vitaminA\": {\n                \"type\": \"number\"\n              },\n              \"vitaminB12\": {\n                \"type\": \"number\"\n              },\n              \"vitaminB6\": {\n                \"type\": \"number\"\n              },\n              \"vitaminC\": {\n                \"type\": \"number\"\n              },\n              \"vitaminD\": {\n                \"type\": \"number\"\n              },\n              \"vitaminE\": {\n                \"type\": \"number\"\n              },\n              \"zinc\": {\n                \"type\": \"integer\"\n              }\n            }\n          }\n        }\n      }\n}","filePath":"schemas/user-userId-foods-log-favorite-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-log-goal-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"goals\": {\n            \"properties\": {\n                \"calories\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"type\": \"object\"\n        },\n        \"foodPlan\": {\n            \"properties\": {\n                \"intensity\": {\n                    \"type\": \"string\"\n                },\n                \"estimatedDate\": {\n                    \"type\": \"string\"\n                },\n                \"personalized\": {\n                    \"type\": \"boolean\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    }\n}","filePath":"schemas/user-userId-foods-log-goal-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-log-goal-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"calories\": {\n\t\t\t\"description\": \"Manual Calorie Consumption Goal; calories, integer; either calories or intensity should be provided.\",\n\t\t\t\"type\": \"integer\"\n\t\t},\n\t\t\"intensity\": {\n\t\t\t\"description\": \"Food Plan intensity; either calories or intensity should be provided.\",\t\t\t\n\t\t\t\"enum\": [\n\t\t\t\t\"MAINTENANCE\",\n\t\t\t\t\"EASIER\",\n\t\t\t\t\"MEDIUM\",\n\t\t\t\t\"KINDAHARD\",\n\t\t\t\t\"HARDER\"\n\t\t\t]\n\t\t},\n\t\t\"personalized\": {\n\t\t\t\"type\": \"boolean\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-foods-log-goal-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-log-post-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"foodLog\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"oneOf\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"foodId\": {\n                \"type\": \"integer\"\n              },\n              \"favorite\": {\n                \"description\": \"Add food to favorites\",\n                \"type\": \"boolean\"\n              }\n            }\n          }\n        },\n        \"mealTypeId\": {\n          \"description\": \"1  Breakfast; 2  Morning Snack; 3  Lunch; 4  Afternoon Snack; 5  Dinner; 7  Anytime\",\n          \"type\": \"integer\",\n          \"minimum\": 1,\n          \"maximum\": 7\n        },\n        \"unitId\": {\n          \"description\": \"Unit id; typically retrieved via a previous calls to Get Foods (Recent, Frequent, Favorite), Search Foods or Get Food Units\",\n          \"type\": \"integer\"\n        },\n        \"amount\": {\n          \"description\": \"Amount consumed; in the format X.XX, in a selected unit (unitId).\",\n          \"type\": \"number\"\n        },\n        \"date\": {\n          \"description\": \"Log entry date; in the format yyyy-MM-dd\",\n          \"type\": \"string\"\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-foods-log-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-log-recent-get-schema.json","content":"{\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"accessLevel\": {\n            \"enum\": [\n              \"PRIVATE\",\n              \"PUBLIC\",\n              \"SHARED\"\n            ]\n          },\n          \"amount\": {\n            \"type\": \"integer\"\n          },\n          \"brand\": {\n            \"type\": \"string\"\n          },\n          \"calories\": {\n            \"type\": \"integer\"\n          },\n          \"foodId\": {\n            \"type\": \"integer\"\n          },\n          \"mealTypeId\": {\n            \"type\": \"integer\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          },\n          \"unit\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"id\": {\n                \"type\": \"integer\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"plural\": {\n                \"type\": \"string\"\n              }\n            }\n          },\n          \"units\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"integer\"\n            }\n          }\n        }\n      }\n}","filePath":"schemas/user-userId-foods-log-recent-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-log-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"oneOf\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"foodId\": {\n            \"type\": \"integer\"\n          },\n          \"favorite\": {\n            \"description\": \"Add food to favorites\",\n            \"type\": \"boolean\"\n          }\n        }\n      }\n    },\n    \"mealTypeId\": {\n      \"description\": \"1  Breakfast; 2  Morning Snack; 3  Lunch; 4  Afternoon Snack; 5  Dinner; 7  Anytime\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"maximum\": 7,\n      \"required\": true\n    },\n    \"unitId\": {\n      \"description\": \"Unit id; typically retrieved via a previous calls to Get Foods (Recent, Frequent, Favorite), Search Foods or Get Food Units\",\n      \"type\": \"integer\",\n      \"required\": true\n    },\n    \"amount\": {\n      \"description\": \"Amount consumed; in the format X.XX, in a selected unit (unitId).\",\n      \"type\": \"number\",\n      \"required\": true\n    },\n    \"date\": {\n      \"description\": \"Log entry date; in the format yyyy-MM-dd\",\n      \"type\": \"string\",\n      \"required\": true\n    }\n  }\n}","filePath":"schemas/user-userId-foods-log-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-log-water-date-date-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"summary\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"water\": {\n          \"type\": \"integer\"\n        }\n      }\n    },\n    \"water\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"amount\": {\n            \"type\": \"integer\"\n          },\n          \"logId\": {\n            \"type\": \"integer\"\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-foods-log-water-date-date-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-log-water-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"waterLog\": {\n\t\t\t\"properties\": {\n\t\t\t\t\"amount\": {\n\t\t\t\t\t\"description\": \"Amount consumed; in the format X.X, in the selected waterUnit or in the unit system that corresponds to the Accept-Language header provided.\",\n\t\t\t\t\t\"type\": \"number\"\n\t\t\t\t},\n\t\t\t\t\"date\": {\n\t\t\t\t\t\"description\": \"Log entry date; in the format yyyy-MM-dd \",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t},\n\t\t\t\t\"unit\": {\n\t\t\t\t\t\"description\": \"Water measurement unit; ('ml', fl oz' or 'cup') \",\n\t\t\t\t\t\"type\": \"string\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"type\": \"object\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-foods-log-water-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-log-water-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"amount\": {\n\t\t\t\"description\": \"Amount consumed; in the format X.X, in the selected waterUnit or in the unit system that corresponds to the Accept-Language header provided.\",\n\t\t\t\"type\": \"number\",\n            \"required\": true\n\t\t},\n\t\t\"date\": {\n\t\t\t\"description\": \"Log entry date; in the format yyyy-MM-dd \",\n\t\t\t\"type\": \"string\",\n            \"required\": true\n\t\t},\n\t\t\"unit\": {\n\t\t\t\"description\": \"Water measurement unit; ('ml', fl oz' or 'cup') \",\n\t\t\t\"type\": \"string\"\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-foods-log-water-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-post-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"food\": {\n            \"accessLevel\": {\n                \"enum\": [\n                    \"PRIVATE\",\n                    \"PUBLIC\",\n                    \"SHARED\"\n                ]\n            },\n            \"brand\": {\n                \"type\": \"string\"\n            },\n            \"calories\": {\n                \"type\": \"integer\"\n            },\n            \"defaultServingSize\": {\n                \"type\": \"integer\"\n            },\n            \"defaultUnit\": {\n                \"properties\": {\n                    \"id\": {\n                        \"type\": \"integer\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"plural\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"foodId\": {\n                \"type\": \"integer\"\n            },\n            \"name\": {\n                \"type\": \"string\"\n            },\n            \"units\": [\n                {\n                    \"type\": \"integer\"\n                }\n            ],\n            \"type\": \"array\"\n        }\n    }\n}","filePath":"schemas/user-userId-foods-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-foods-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"name\": {\n            \"description\": \"Food name.\",\n            \"type\": \"string\",\n            \"required\": true\n        },\n        \"defaultFoodMeasurementUnitId\": {\n            \"description\": \"Unit id; default measurement unit; full list of units could be retrieved via a previous calls to Get Food Units.\",\n            \"type\": \"string\",\n            \"required\": true\n        },\n        \"defaultServingSize\": {\n            \"description\": \"Size of the default serving; nutritional values should be provided for this serving size.\",\n            \"type\": \"integer\",\n            \"required\": true\n        },\n        \"calories\": {\n            \"description\": \"Calories in the default serving size.\",\n            \"type\": \"integer\",\n            \"required\": true\n        },\n        \"formType\": {\n            \"enum\": [\n                \"LIQUID\",\n                \"DRY\"\n            ]\n        },\n        \"description\": {\n            \"type\": \"string\"\n        }\n    }\n}","filePath":"schemas/user-userId-foods-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-friends-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"friends\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"user\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"aboutMe\": {\n                \"type\": \"string\"\n              },\n              \"avatar\": {\n                \"type\": \"string\"\n              },\n              \"city\": {\n                \"type\": \"string\"\n              },\n              \"country\": {\n                \"type\": \"string\"\n              },\n              \"dateOfBirth\": {\n                \"type\": \"string\"\n              },\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"encodedId\": {\n                \"type\": \"string\"\n              },\n              \"fullName\": {\n                \"type\": \"string\"\n              },\n              \"gender\": {\n                \"enum\": [\n                  \"MALE\",\n                  \"FEMALE\"\n                ]\n              },\n              \"height\": {\n                \"type\": \"number\"\n              },\n              \"nickname\": {\n                \"type\": \"string\"\n              },\n              \"offsetFromUTCMillis\": {\n                \"type\": \"integer\"\n              },\n              \"state\": {\n                \"type\": \"string\",\n                \"minLength\": 2,\n                \"maxLength\": 2\n              },\n              \"strideLengthRunning\": {\n                \"type\": \"number\"\n              },\n              \"strideLengthWalking\": {\n                \"type\": \"number\"\n              },\n              \"timezone\": {\n                \"type\": \"string\"\n              },\n              \"weight\": {\n                \"type\": \"number\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-friends-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-friends-invitations-fromUserId-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"accept\": {\n    \t\t\"description\": \"Accept or reject an invite.\",    \t\t\n    \t\t\"type\": \"boolean\"\n    \t}\n    }\n}    ","filePath":"schemas/user-userId-friends-invitations-fromUserId-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-friends-invitations-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"friends\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"dateTime\": {\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"aboutMe\": {\n                \"type\": \"string\"\n              },\n              \"avatar\": {\n                \"type\": \"string\"\n              },\n              \"city\": {\n                \"type\": \"string\"\n              },\n              \"country\": {\n                \"type\": \"string\"\n              },\n              \"dateOfBirth\": {\n                \"type\": \"string\"\n              },\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"encodedId\": {\n                \"type\": \"string\"\n              },\n              \"fullName\": {\n                \"type\": \"string\"\n              },\n              \"gender\": {\n                \"enum\": [\n                  \"MALE\",\n                  \"FEMALE\"\n                ]\n              },\n              \"height\": {\n                \"type\": \"number\"\n              },\n              \"nickname\": {\n                \"type\": \"string\"\n              },\n              \"offsetFromUTCMillis\": {\n                \"type\": \"integer\"\n              },\n              \"state\": {\n                \"type\": \"string\",\n                \"maxLength\": 2,\n                \"minLength\": 2\n              },\n              \"timezone\": {\n                \"type\": \"string\"\n              },\n              \"weight\": {\n                \"type\": \"number\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-friends-invitations-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-friends-invitations-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"invitedUserEmail\": {\n    \t\t\"type\": \"string\"\n    \t},\n    \t\"invitedUserId\": {\n    \t\t\"type\": \"integer\"\n    \t}\n    }\n}    \t","filePath":"schemas/user-userId-friends-invitations-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-friends-leaderboard-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"hideMeFromLeaderboard\": {\n    \t\t\"required\": false,\n    \t\t\"type\": \"boolean\"\n    \t},\n        \"friends\": {\n            \"items\": {\n                \"properties\": {\n                    \"average\": {\n                        \"properties\": {\n                            \"steps\": {\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"rank\": {\n                        \"properties\": {\n                            \"steps\": {\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"summary\": {\n                        \"properties\": {\n                            \"steps\": {\n                                \"type\": \"integer\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"lastUpdateTime\": {\n                        \"type\": \"string\"\n                    },\n                    \"user\": {\n                        \"properties\": {\n                            \"aboutMe\": {\n                                \"type\": \"string\"\n                            },\n                            \"avatar\": {\n                                \"type\": \"string\"\n                            },\n                            \"city\": {\n                                \"type\": \"string\"\n                            },\n                            \"country\": {\n                                \"type\": \"string\"\n                            },\n                            \"dateOfBirth\": {\n                                \"type\": \"string\"\n                            },\n                            \"displayName\": {\n                                \"type\": \"string\"\n                            },\n                            \"encodedId\": {\n                                \"type\": \"string\"\n                            },\n                            \"fullName\": {\n                                \"type\": \"string\"\n                            },\n                            \"gender\": {\n                                \"enum\": [\n                                    \"MALE\",\n                                    \"FEMALE\"\n                                ]\n                            },\n                            \"height\": {\n                                \"type\": \"number\"\n                            },\n                            \"nickname\": {\n                                \"type\": \"string\"\n                            },\n                            \"offsetFromUTCMillis\": {\n                                \"type\": \"integer\"\n                            },\n                            \"state\": {\n                                \"type\": \"string\",\n                                \"minLength\": 2,\n                                \"maxLength\": 2\n                            },\n                            \"timezone\": {\n                                \"type\": \"string\"\n                            },\n                            \"weight\": {\n                                \"type\": \"number\"\n                            }\n                        },\n                        \"type\": \"object\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n        \t\"type\": \"array\"\n        }\n    }\n}","filePath":"schemas/user-userId-friends-leaderboard-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-friends-leaderboard-post-schema.json","content":"{\n  \"type\": \"object\",\n  \"\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"hideMeFromLeaderboard\": {\n      \"type\": \"boolean\"\n    },\n    \"friends\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"average\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"steps\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"rank\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"steps\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"summary\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"steps\": {\n                \"type\": \"integer\"\n              }\n            }\n          },\n          \"lastUpdateTime\": {\n            \"type\": \"string\"\n          },\n          \"user\": {\n            \"type\": \"object\",\n            \"properties\": {\n              \"aboutMe\": {\n                \"type\": \"string\"\n              },\n              \"avatar\": {\n                \"type\": \"string\"\n              },\n              \"city\": {\n                \"type\": \"string\"\n              },\n              \"country\": {\n                \"type\": \"string\"\n              },\n              \"dateOfBirth\": {\n                \"type\": \"string\"\n              },\n              \"displayName\": {\n                \"type\": \"string\"\n              },\n              \"encodedId\": {\n                \"type\": \"string\"\n              },\n              \"fullName\": {\n                \"type\": \"string\"\n              },\n              \"gender\": {\n                \"enum\": [\n                  \"MALE\",\n                  \"FEMALE\"\n                ]\n              },\n              \"height\": {\n                \"type\": \"number\"\n              },\n              \"nickname\": {\n                \"type\": \"string\"\n              },\n              \"offsetFromUTCMillis\": {\n                \"type\": \"integer\"\n              },\n              \"state\": {\n                \"type\": \"string\",\n                \"maxLength\": 2,\n                \"minLength\": 2\n              },\n              \"timezone\": {\n                \"type\": \"string\"\n              },\n              \"weight\": {\n                \"type\": \"number\"\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-friends-leaderboard-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-friends-leaderboard-schema.json","content":"{\n    \"\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"hideMeFromLeaderboard\": {\n    \t\t\"type\": \"boolean\"\n    \t}\n    }\n}    ","filePath":"schemas/user-userId-friends-leaderboard-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-get-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"user\": {\n            \"properties\": {\n                \"aboutMe\": {\n                    \"type\": \"string\"\n                },\n                \"avatar\": {\n                    \"type\": \"string\"\n                },\n                \"avatar150\": {\n                    \"type\": \"string\"\n                },\n                \"city\": {\n                    \"type\": \"string\"\n                },\n                \"country\": {\n                    \"type\": \"string\"\n                },\n                \"dateOfBirth\": {\n                    \"type\": \"string\"\n                },\n                \"displayName\": {\n                    \"type\": \"string\"\n                },\n                \"distanceUnit\": {\n                    \"type\": \"string\"\n                },\n                \"encodedId\": {\n                    \"type\": \"string\"\n                },\n                \"fullName\": {\n                    \"type\": \"string\"\n                },\n                \"gender\": {\n                    \"type\": \"string\"\n                },\n                \"glucoseUnit\": {\n                    \"type\": \"string\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"heightUnit\": {\n                    \"type\": \"string\"\n                },\n                \"nickname\": {\n                    \"type\": \"string\"\n                },\n                \"locale\": {\n                    \"type\": \"string\"\n                },\n                \"memberSince\": {\n                    \"type\": \"string\"\n                },\n                \"offsetFromUTCMillis\": {\n                    \"type\": \"integer\"\n                },\n                \"state\": {\n                    \"type\": \"string\"\n                },\n                \"strideLengthRunning\": {\n                    \"type\": \"integer\"\n                },\n                \"strideLengthWalking\": {\n                    \"type\": \"integer\"\n                },\n                \"timezone\": {\n                    \"type\": \"integer\"\n                },\n                \"waterUnit\": {\n                    \"type\": \"integer\"\n                },\n                \"weight\": {\n                    \"type\": \"integer\"\n                },\n                \"weightUnit\": {\n                    \"type\": \"string\"\n                }\n            }\n        }\n    }\n}","filePath":"schemas/user-userId-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-glucose-date-date-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"glucose\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"glucose\": {\n            \"type\": \"integer\"\n          },\n          \"tracker\": {\n            \"type\": \"string\"\n          },\n          \"time\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"hba1c\": {\n      \"type\": \"number\"\n    }\n  }\n}","filePath":"schemas/user-userId-glucose-date-date-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-glucose-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"hba1c\": {\n\t\t\t\"type\": \"number\"\n\t\t},\n\t\t\"glucose\": {\n\t\t\t\"glucose\": {\n\t\t\t\t\"type\": \"integer\"\n\t\t\t},\n            \"tracker\": {\n            \t\"type\": \"string\"\n            },\n            \"time\": {\n            \t\"type\": \"string\"\n            }\n\t\t}\n\t}\n}","filePath":"schemas/user-userId-glucose-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-glucose-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"hba1c\": {\n    \t\t\"description\": \"HbA1c measurement; in the format X.X, either hba1c or tracker should be provided (or both).\",\n    \t\t\"type\": \"number\"\n    \t},\n    \t\"tracker\": {\n    \t\t\"description\": \"Glucose tracker name; predefined or custom tracker name (matches tracker name on the website, e.g. 'Afternoon')\",\n    \t\t\"type\": \"string\"\n    \t},\n    \t\"glucose\": {\n    \t\t\"description\": \"Glucose measurement; in the format X.X, required with tracker parameter, otherwise optional.\",\n    \t\t\"type\": \"number\"\n    \t},\n    \t\"date\": {\n    \t\t\"description\": \"Measurement date; in the format yyyy-MM-dd.\",\n    \t\t\"type\": \"string\"\n    \t},\n    \t\"time\": {\n    \t\t\"description\": \"Time of the measurement; hours and minutes in the format HH:mm.\",\n    \t\t\"type\": \"string\"\n    \t}\n\t}\n}","filePath":"schemas/user-userId-glucose-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-heart-date-date-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"average\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"heartRate\": {\n            \"type\": \"integer\"\n          },\n          \"tracker\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    },\n    \"heart\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"heartRate\": {\n            \"type\": \"integer\"\n          },\n          \"logId\": {\n            \"type\": \"integer\"\n          },\n          \"time\": {\n            \"type\": \"string\"\n          },\n          \"tracker\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-heart-date-date-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-heart-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"heartLog\": {\n            \"properties\": {\n                \"heartRate\": {\n                    \"type\": \"integer\"\n                },\n                \"logId\": {\n                    \"type\": \"integer\"\n                },\n                \"time\": {\n                    \"type\": \"string\"\n                },\n                \"tracker\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    }\n}","filePath":"schemas/user-userId-heart-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-heart-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"tracker\": {\n    \t\t\"description\": \"Heart rate tracker name; predefined ('Resting Heart Rate', 'Normal Heart Rate', 'Exertive Heart Rate') or custom tracker name (matches tracker name on the website).\",\n    \t\t\"type\": \"string\",\n\t\t\t\"required\": true\n    \t},\n    \t\"heartRate\": {\n    \t\t\"description\": \"Heart rate measurement.\",\n    \t\t\"type\": \"integer\",\n\t\t\t\"required\": true\n    \t},\n    \t\"date\": {\n    \t\t\"description\": \"Log entry date; in the format yyyy-MM-dd.\",\n    \t\t\"type\": \"string\",\n\t\t\t\"required\": true\n    \t},\n    \t\"time\": {\n    \t\t\"description\": \"Time of the measurement; hours and minutes in the format HH:mm\",\n    \t\t\"type\": \"string\"\n    \t}\n\t}\n}","filePath":"schemas/user-userId-heart-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-meals-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"meals\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"mealFoods\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"type\": \"array\",\n              \"accessLevel\": {\n                \"enum\": [\n                  \"PUBLIC\",\n                  \"PRIVATE\",\n                  \"SHARED\"\n                ]\n              },\n              \"amount\": {\n                \"type\": \"string\"\n              },\n              \"brand\": {\n                \"type\": \"string\"\n              },\n              \"calories\": {\n                \"type\": \"integer\"\n              },\n              \"foodId\": {\n                \"type\": \"integer\"\n              },\n              \"mealTypeId\": {\n                \"type\": \"integer\"\n              },\n              \"locale\": {\n                \"type\": \"string\"\n              },\n              \"name\": {\n                \"type\": \"string\"\n              },\n              \"unit\": {\n                \"properties\": {\n                  \"id\": {\n                    \"type\": \"integer\"\n                  },\n                  \"name\": {\n                    \"type\": \"string\"\n                  },\n                  \"plural\": {\n                    \"type\": \"string\"\n                  }\n                },\n                \"type\": \"object\"\n              },\n              \"units\": [\n                {\n                  \"type\": \"integer\"\n                }\n              ]\n            }\n          },\n          \"id\": {\n            \"type\": \"integer\"\n          },\n          \"description\": {\n            \"type\": \"string\"\n          },\n          \"name\": {\n            \"type\": \"string\"\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-meals-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-post-body-schema.json","content":"{\n\t\"$schema\": \"http://json-schema.org/draft-03/schema\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"gender\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"enum\": [ \"MALE\", \"FEMALE\", \"NA\"]\n\t\t},\n\t\t\"birthday\": {\n\t\t\t\"description\": \"Date of Birth; in the format yyyy-MM-dd.\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"height\": {\n\t\t\t\"description\": \"Height; in the format X.XX, in the unit system that corresponds to the Accept-Language header provided.\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"nickname\": {\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"aboutMe\": {\n\t\t\t\"description\": \"About Me string.\",\n\t\t\t\"type\": \"string\"\n\t\t}\t,\n\t\t\"fullname\": {\n\t\t\t\"description\": \"Full name.\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"country\": {\n\t\t\t\"description\": \"Two-character code.\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"minLength\": 2,\n\t\t\t\"maxLength\": 2\n\t\t},\n\t\t\"state\": {\n\t\t\t\"description\": \"US State; two-character code; valid only if country was or being set to US\",\n\t\t\t\"type\": \"string\",\n\t\t\t\"minLength\": 2,\n\t\t\t\"maxLength\": 2\n\t\t},\n\t\t\"city\": {\n\t\t\t\"description\": \"City\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"strideLengthWalking\": {\n\t\t\t\"description\": \"Walking stride length; in the format X.XX, in the unit system that corresponds to the Accept-Language header provided\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"strideLengthRunning\": {\n\t\t\t\"description\": \"Running stride length; in the format X.XX, in the unit system that corresponds to the Accept-Language header provided\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"weightUnit\": {\n\t\t\t\"description\": \"Default water unit on website (doesn't affect API); one of (en_US, en_GB, 'any' for METRIC)\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"heightUnit\": {\n\t\t\t\"description\": \"Default height/distance unit on website (doesn't affect API); one of (en_US, 'any' for METRIC)\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"waterUnit\": {\n\t\t\t\"description\": \"Default water unit on website (doesn't affect API); one of (en_US, 'any' for METRIC)\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"glucoseUnit\": {\n\t\t\t\"description\": \"Default glucose unit on website (doesn't affect API); one of (en_US, 'any' for METRIC)\",\n\t\t\t\"type\": \"string\"\n\t\t},\t\n\t\t\"timezone\": {\n\t\t\t\"description\": \"Timezone; in the format 'America/Los_Angeles'\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"foodsLocale\": {\n\t\t\t\"description\": \"Food Database Locale; in the format 'xx_XX'\",\n\t\t\t\"type\": \"string\"\n\t\t},\n\t\t\"locale\": {\n\t\t\t\"description\": \"Locale of website (country/language); one of the locales, currently  (en_US, fr_FR, de_DE, es_ES, en_GB, en_AU, en_NZ, ja_JP)\",\n\t\t\t\"type\": \"string\"\n\t\t}\t\n\t}\n}","filePath":"schemas/user-userId-post-body-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"user\": {\n            \"properties\": {\n                \"aboutMe\": {\n                    \"type\": \"string\"\n                },\n                \"avatar\": {\n                    \"type\": \"string\"\n                },\n                \"city\": {\n                    \"type\": \"string\"\n                },\n                \"country\": {\n                    \"type\": \"string\"\n                },\n                \"dateOfBirth\": {\n                    \"type\": \"string\"\n                },\n                \"displayName\": {\n                    \"type\": \"string\"\n                },\n                \"distanceUnit\": {\n                    \"type\": \"string\"\n                },\n                \"encodedId\": {\n                    \"type\": \"string\"\n                },\n                \"foodsLocale\": {\n                    \"type\": \"string\"\n                },\n                \"fullName\": {\n                    \"type\": \"string\"\n                },\n                \"gender\": {\n                    \"type\": \"string\"\n                },\n                \"glucoseUnit\": {\n                    \"type\": \"string\"\n                },\n                \"height\": {\n                    \"type\": \"number\"\n                },\n                \"heightUnit\": {\n                    \"type\": \"string\"\n                },\n                \"nickname\": {\n                    \"type\": \"string\"\n                },\n                \"locale\": {\n                    \"type\": \"string\"\n                },\n                \"memberSince\": {\n                    \"type\": \"string\"\n                },\n                \"offsetFromUTCMillis\": {\n                    \"type\": \"integer\"\n                },\n                \"state\": {\n                    \"type\": \"string\"\n                },\n                \"strideLengthRunning\": {\n                    \"type\": \"integer\"\n                },\n                \"strideLengthWalking\": {\n                    \"type\": \"integer\"\n                },\n                \"timezone\": {\n                    \"type\": \"integer\"\n                },\n                \"waterUnit\": {\n                    \"type\": \"integer\"\n                },\n                \"weight\": {\n                    \"type\": \"integer\"\n                },\n                \"weightUnit\": {\n                    \"type\": \"string\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    }\n}","filePath":"schemas/user-userId-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-sleep-date-date-get-schema.json","content":"{\n  \"type\": \"object\",\n  \"$schema\": \"http://json-schema.org/draft-03/schema\",\n  \"properties\": {\n    \"sleep\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"isMainSleep\": {\n            \"type\": \"boolean\"\n          },\n          \"logId\": {\n            \"type\": \"integer\"\n          },\n          \"efficiency\": {\n            \"type\": \"integer\"\n          },\n          \"startTime\": {\n            \"type\": \"string\"\n          },\n          \"duration\": {\n            \"type\": \"string\"\n          },\n          \"minutesToFallAsleep\": {\n            \"type\": \"integer\"\n          },\n          \"minutesAsleep\": {\n            \"type\": \"integer\"\n          },\n          \"minutesAwake\": {\n            \"type\": \"integer\"\n          },\n          \"minutesAfterWakeup\": {\n            \"type\": \"integer\"\n          },\n          \"awakeningsCount\": {\n            \"type\": \"integer\"\n          },\n          \"timeInBed\": {\n            \"type\": \"integer\"\n          },\n          \"minuteData\": {\n            \"type\": \"array\",\n            \"items\": {\n              \"dateTime\": {\n                \"type\": \"string\"\n              },\n              \"value\": {\n                \"type\": \"string\"\n              }\n            }\n          }\n        }\n      }\n    },\n    \"summary\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"totalMinutesAsleep\": {\n          \"type\": \"string\"\n        },\n        \"totalSleepRecords\": {\n          \"type\": \"integer\"\n        },\n        \"totalTimeInBed\": {\n          \"type\": \"integer\"\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-userId-sleep-date-date-get-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-sleep-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"sleep\": {\n            \"properties\": {\n                \"isMainSleep\": {\n                    \"type\": \"boolean\"\n                },\n                \"logId\": {\n                    \"type\": \"integer\"\n                },\n                \"efficiency\": {\n                    \"type\": \"integer\"\n                },\n                \"startTime\": {\n                    \"type\": \"string\"\n                },\n                \"duration\": {\n                    \"type\": \"integer\"\n                },\n                \"minutesToFallAsleep\": {\n                    \"type\": \"integer\"\n                },\n                \"minutesAsleep\": {\n                    \"type\": \"integer\"\n                },\n                \"minutesAwake\": {\n                    \"type\": \"integer\"\n                },\n                \"awakeningsCount\": {\n                    \"type\": \"integer\"\n                },\n                \"timeInBed\": {\n                    \"type\": \"integer\"\n                }\n            },\n            \"type\": \"object\"\n        }\n    }\n}","filePath":"schemas/user-userId-sleep-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/user-userId-sleep-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n    \t\"startTime\": {\n    \t\t\"description\": \"Start time; hours and minutes in the format HH:mm\",\n    \t\t\"type\": \"string\"\n    \t},\n    \t\"duration\": {\n    \t\t\"description\": \"Duration; in milliseconds.\",\n    \t\t\"type\": \"integer\"\n    \t},\n    \t\"date\": {\n    \t\t\"description\": \"Log entry date; in the format yyyy-MM-dd.\",\n    \t\t\"type\": \"integer\"\n    \t}\n\t}\n}","filePath":"schemas/user-userId-sleep-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/schemas/v1-user-userId-foods-log-goal-post-schema.json","content":"{\n    \"$schema\": \"http://json-schema.org/draft-03/schema\",\n    \"type\": \"object\",\n    \"properties\": {\n\t\t\"goals\": {\n\t\t\t\"properties\": {\n\t\t\t\t\"calories\": {\n\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"type\": \"object\"\n\t\t},\n\t\t\"foodPlan\": {\n\t\t\t\"properties\": {\n\t\t\t\t\"intensity\": {\n\t\t\t\t\t\"enum\": [\n\t\t\t\t\t\t\"MAINTENANCE\",\n\t\t\t\t\t\t\"EASIER\",\n\t\t\t\t\t\t\"MEDIUM\",\n\t\t\t\t\t\t\"KINDAHARD\",\n\t\t\t\t\t\t\"HARDER\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"personalized\": {\n\t\t\t\t\t\"type\": \"boolean\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"type\": \"object\"\n\t\t}\n\t}\n}","filePath":"schemas/v1-user-userId-foods-log-goal-post-schema.json","repo":"Fitbit"},{"path":"/virtual/Fitbit/securitySchemes/oauth_1_0.raml","content":"#%RAML 0.8\n---\ndescription: |\n  The Fitbit API uses OAuth Authentication as described in The OAuth 1.0 Protocol\n  (draft-hammer-oauth-10). OAuth is an open protocol for clients of the Fitbi\n  API to access Fitbit content on behalf of a Fitbit user.\ntype: OAuth 1.0\nsettings:\n  requestTokenUri: https://api.fitbit.com/oauth/request_token\n  authorizationUri: http://www.fitbit.com/oauth/authorize\n  tokenCredentialsUri: https://api.fitbit.com/oauth/access_token\n","filePath":"securitySchemes/oauth_1_0.raml","repo":"Fitbit"}]