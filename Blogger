[{"path":"/virtual/Blogger/.project","content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<projectDescription>\r\n    <name>Blogger</name>\r\n    <comment></comment>\r\n    <projects>\r\n    </projects>\r\n    <buildSpec>\r\n    </buildSpec>\r\n    <natures>\r\n    </natures>\r\n</projectDescription>","filePath":".project","repo":"Blogger"},{"path":"/virtual/Blogger/.settings/org.eclipse.core.resources.prefs","content":"eclipse.preferences.version=1","filePath":".settings/org.eclipse.core.resources.prefs","repo":"Blogger"},{"path":"/virtual/Blogger/api.raml","content":"#%RAML 0.8\ntitle: Blogger\nversion: v3\nbaseUri: https://www.googleapis.com/blogger/{version}\nmediaType: application/json\nsecuritySchemes:\n  - oauth_2_0: !include securitySchemes/oauth_2_0.raml\nschemas:\n  - blogResource: !include /schemas/blogResource-schema.json\n  - getListByUser: !include /schemas/getListByUser-schema.json\n  - commentsList: !include /schemas/commentsList-schema.json\n  - comment: !include /schemas/comment-schema.json\n  - pages: !include /schemas/pages-schema.json\n  - page: !include /schemas/page-schema.json\n  - postsList: !include /schemas/postsList-schema.json\n  - post: !include /schemas/post-schema.json\n  - user: !include /schemas/user-schema.json\n  - blogUserInfo: !include /schemas/blogUserInfo-schema.json\n  - pageViews: !include /schemas/pageViews-schema.json\n  - postUserInfo: !include /schemas/postUserInfo-schema.json\n  - postUserInfosList: !include /schemas/postUserInfosList-schema.json\ntraits:\n  - posts: !include traits/posts.raml\n  - view: !include traits/view.raml\n  - blogs: !include traits/blogs.raml\nsecuredBy: [ oauth_2_0 ]\n/blogs/{blogId}: \n  get: \n    description: Retrieves a blog by its ID.\n    queryParameters: \n      maxPosts: \n        description: Maximum number of posts to retrieve along with the blog. When this parameter is not specified, no posts will be returned as part of the blog resource.\n        type: integer\n        example: 25\n    responses: \n      200: \n        body: \n          application/json: \n            schema: blogResource\n            example: !include examples/blogResource-example.json\n  /comments: \n    get: \n      description: Retrieves the comments for a blog, across all posts, possibly filtered.\n      queryParameters: \n        endDate: \n          description: Latest date of comment to fetch, a date-time with RFC 3339 formatting.\n          type: date\n          example: \"2016-10-02T10:00:00\"\n        fetchBodies: \n          description: Whether the body content of the comments is included.\n          type: boolean\n          example: true\n        maxResults: \n          description: Maximum number of comments to include in the result.\n          type: integer\n          example: 25\n        pageToken: \n          description: Continuation token if request is paged.\n        startDate: \n          description: Earliest date of comment to fetch, a date-time with RFC 3339 formatting.\n          type: date\n          example: \"2016-09-02T10:00:00\"\n      responses: \n        200: \n          body: \n            application/json: \n              schema: commentsList\n              example: !include examples/commentsList-example.json\n  /pages: \n    get: \n      is: [ view ]\n      description: Retrieves the list of pages for a blog.\n      queryParameters: \n        fetchBodies: \n          description: Whether to retrieve the Page bodies.\n          type: boolean\n          example: true\n        status: \n          description: |\n            Acceptable values are:\n            \"draft\": Draft (unpublished) Pages\n            \"imported\": Pages that have had their content removed\n            \"live\": Pages that are publicly visible\n          example: live\n      responses: \n        200: \n          body: \n            application/json: \n              schema: pages\n              example: !include examples/pages-example.json\n    post: \n      description: Add a page.\n      body: \n        application/json: \n          schema: page\n          example: !include examples/page-example.json\n      responses: \n        201: \n          body: \n            application/json: \n              schema: page\n              example: !include examples/page-example.json\n    /{pageId}: \n      get: \n        is: [ view ]\n        description: Retrieves one pages resource by its page ID.\n        responses: \n          200: \n            body: \n              application/json: \n                schema: page\n                example: !include examples/page-example.json\n      delete: \n        description: Delete a page by ID.\n        responses: \n          200: \n      patch: \n        description: Update a page. This method supports patch semantics.\n        body: \n          application/json: \n            schema: page\n            example: !include examples/page-example.json\n        responses: \n          201: \n            body: \n              application/json: \n                schema: page\n                example: !include examples/page-example.json\n      put: \n        description: Update a page.\n        body: \n          application/json: \n            schema: page\n            example: !include examples/page-example.json\n        responses: \n          201: \n            body: \n              application/json: \n                schema: page\n                example: !include examples/page-example.json\n  /posts: \n    get: \n      is: [ blogs , posts ]\n      description: Retrieves a list of posts.\n      queryParameters: \n        fetchImages: \n          description: Whether image URL metadata for each post is included.\n          type: boolean\n          example: true\n      responses: \n        200: \n          body: \n            application/json: \n              schema: postsList\n              example: !include examples/postsList-example.json\n    post: \n      description: Adds a post.\n      queryParameters: \n        isDraft: \n          description: Whether to create the post as a draft\n          type: boolean\n          example: true\n      body: \n        application/json: \n          schema: post\n          example: !include examples/post-example.json\n      responses: \n        201: \n          body: \n            application/json: \n              schema: post\n              example: !include examples/post-example.json\n    /{postId}: \n      get: \n        is: [ view ]\n        description: Retrieves one post by post ID.\n        queryParameters: \n          maxComments: \n            description: Maximum number of comments to retrieve as part of the the post resource. If this parameter is left unspecified, then no comments will be returned.\n            type: integer\n            example: 25\n        responses: \n          200: \n            body: \n              application/json: \n                schema: post\n                example: !include examples/post-example.json\n      delete: \n        description: Deletes a post by ID.\n        body: \n          application/json: \n      patch: \n        description: Updates a post. This method supports patch semantics.\n        body: \n          application/json: \n            schema: post\n            example: !include examples/post-example.json\n        responses: \n          200: \n            body: \n              application/json: \n                schema: post\n                example: !include examples/post-example.json\n      put: \n        description: Updates a post.\n        body: \n          application/json: \n            schema: post\n            example: !include examples/post-example.json\n        responses: \n          200: \n            body: \n              application/json: \n                schema: post\n                example: !include examples/post-example.json\n      /comments: \n        get: \n          is: [ blogs ]\n          description: Retrieves the list of comments for a post.\n          responses: \n            200: \n              body: \n                application/json: \n                  schema: commentsList\n                  example: !include examples/commentsList-example.json\n        /{commentId}: \n          delete: \n            description: Delete a comment by ID.\n            responses: \n              200: \n          get: \n            description: Retrieves one comment resource by its commentId.\n            responses: \n              200: \n                body: \n                  application/json: \n                    schema: comment\n                    example: !include examples/comment-example.json\n          /approve: \n            post: \n              description: Marks a comment as not spam.\n              responses: \n                201: \n                  body: \n                    application/json: \n                      schema: comment\n                      example: !include examples/comment-example.json\n          /spam: \n            post: \n              description: Marks a comment as spam. This will set the status of the comment to spam, and hide it in the default comment rendering.\n              responses: \n                201: \n                  body: \n                    application/json: \n                      schema: comment\n                      example: !include examples/comment-example.json\n          /removecontent: \n            post: \n              description: Removes the content of a comment.\n              responses: \n                201: \n                  body: \n                    application/json: \n                      schema: comment\n                      example: !include examples/comment-example.json\n      /publish: \n        post: \n          description: Publish a draft post.\n          queryParameters: \n            publishDate: \n              description: The date and time to schedule the publishing of the Post.\n              type: date\n              example: \"2016-09-02T10:00:00\"\n          responses: \n            201: \n              body: \n                application/json: \n                  schema: post\n                  example: !include examples/post-example.json\n      /revert: \n        post: \n          description: Revert a published or scheduled post to draft state, which removes the post from the publicly viewable content.\n          responses: \n            201: \n              body: \n                application/json: \n                  schema: post\n                  example: !include examples/post-example.json\n    /search: \n      get: \n        description: Searches for a post that matches the given query terms.\n        queryParameters: \n          fetchBodies: \n            description: \"Whether the body content of posts is included. To minimize traffic, set this parameter to false when the post's body content is not required. (Default: true)\"\n            type: boolean\n            default: true\n            example: true\n          orderBy: \n            description: |\n              The sort order applied to the search results. \n              \n              Acceptable values are:\n              \"published\": Order by the date the post was published\n              \"updated\": Order by the date the post was last updated\n            example: published\n          q: \n            description: Query terms to search for.\n            required: true\n        responses: \n          200: \n            body: \n              application/json: \n                schema: postsList\n                example: !include examples/postsList-example.json\n    /bypath: \n      get: \n        is: [ view ]\n        description: Retrieves a post by path.\n        queryParameters: \n          path: \n            description: Path of the Post to retrieve.\n            required: true\n          maxComments: \n            description: Maximum number of comments to retrieve for a post. If this parameter is left unspecified, no comments will be returned as part of the post resource.\n            type: integer\n            example: 25\n        responses: \n          200: \n            body: \n              application/json: \n                schema: post\n                example: !include examples/post-example.json\n  /pageviews: \n    get: \n      description: Retrieve pageview stats for a Blog.\n      queryParameters: \n        range: \n          description: |\n            Acceptable values are:\n            \"30DAYS\": Page view counts from the last thirty days.\n            \"7DAYS\": Page view counts from the last seven days.\n            \"all\": Total page view counts from all time.\n          example: 30DAYS\n      responses: \n        200: \n          body: \n            application/json: \n              schema: pageViews\n              example: !include examples/pageViews-example.json\n  /byurl: \n    get: \n      description: Retrieves a blog by URL.\n      queryParameters: \n        url: \n          description: The URL of the blog to retrieve.\n          required: true\n          example: http://code.blogger.com/\n      responses: \n        200: \n          body: \n            application/json: \n              schema: blogResource\n              example: !include examples/blogResource-example.json\n/users/{userId}: \n  get: \n    description: Retrieves a user by user ID.\n    responses: \n      200: \n        body: \n          application/json: \n            schema: user\n            example: !include examples/user-example.json\n  /blogs: \n    get: \n      is: [ view ]\n      description: Retrieves a list of blogs.\n      queryParameters: \n        fetchUserInfo: \n          description: Whether the response is a list of blogs with per-user information instead of just blogs.\n          type: boolean\n          example: true\n      responses: \n        200: \n          body: \n            application/json: \n              schema: getListByUser\n              example: !include examples/getListByUser-example.json\n    /{blogId}: \n      get: \n        description: Gets one blog and user info pair by blogId and userId.\n        queryParameters: \n          maxPosts: \n            description: Maximum number of posts to pull back with the blog.\n            type: integer\n            example: 25\n        responses: \n          200: \n            body: \n              application/json: \n                schema: blogUserInfo\n                example: !include examples/blogUserInfo-example.json\n      /posts: \n        get: \n          is: [ blogs , posts ]\n          description: Retrieves a list of post and post user info pairs, possibly filtered. The post user info contains per-user information about the post, such as access rights, specific to the user.\n          responses: \n            200: \n              body: \n                application/json: \n                  schema: postUserInfosList\n                  example: !include examples/postUserInfosList-example.json\n        /{postId}: \n          get: \n            description: Gets one post and user info pair by postId and userId.\n            queryParameters: \n              maxComments: \n                description: Maximum number of comments to retrieve for the post.\n                type: integer\n                example: 25\n            responses: \n              200: \n                body: \n                  application/json: \n                    schema: postUserInfo\n                    example: !include examples/postUserInfo-example.json\ndocumentation: \n  - title: Headline\n    content: !include docs/headline.md","filePath":"api.raml","repo":"Blogger"},{"path":"/virtual/Blogger/docs/headline.md","content":"The Blogger API v3 allows client applications to view and update Blogger content. Your client application can use Blogger API v3 to create new blog posts, edit or delete existing posts, and query for posts that match particular criteria.","filePath":"docs/headline.md","repo":"Blogger"},{"path":"/virtual/Blogger/examples/blogResource-example.json","content":"{\n  \"kind\" : \"blogger#blog\" ,\n  \"id\" : \"value\" ,\n  \"name\" : \"value\" ,\n  \"description\" : \"value\" ,\n  \"published\" : \"value\" ,\n  \"updated\" : \"value\" ,\n  \"url\" : \"value\" ,\n  \"selfLink\" : \"value\" ,\n  \"posts\" : {\n    \"totalItems\" : \"value\" ,\n    \"selfLink\" : \"value\"\n  } ,\n  \"pages\" : {\n    \"totalItems\" : \"value\" ,\n    \"selfLink\" : \"value\"\n  } ,\n  \"locale\" : {\n    \"language\" : \"value\" ,\n    \"country\" : \"value\" ,\n    \"variant\" : \"value\"\n  }\n}","filePath":"examples/blogResource-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/blogUserInfo-example.json","content":"{\r\n  \"kind\": \"blogger#blogUserInfo\",\r\n  \"blog\": blogs Resource,\r\n  \"blog_user_info\": {\r\n    \"kind\": \"blogger#blogPerUserInfo\",\r\n    \"userId\": string,\r\n    \"blogId\": string,\r\n    \"photosAlbumKey\": string,\r\n    \"hasAdminAccess\": boolean\r\n  }\r\n}","filePath":"examples/blogUserInfo-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/comment-example.json","content":"{\n  \"kind\" : \"blogger#comment\" ,\n  \"status\" : \"string\" ,\n  \"id\" : \"string\" ,\n  \"inReplyTo\" : {\n    \"id\" : \"string\"\n  } ,\n  \"post\" : {\n    \"id\" : \"string\"\n  } ,\n  \"blog\" : {\n    \"id\" : \"string\"\n  } ,\n  \"published\" : \"datetime\" ,\n  \"updated\" : \"datetime\" ,\n  \"selfLink\" : \"string\" ,\n  \"content\" : \"string\" ,\n  \"author\" : {\n    \"id\" : \"string\" ,\n    \"displayName\" : \"string\" ,\n    \"url\" : \"string\" ,\n    \"image\" : {\n      \"url\" : \"string\"\n    }\n  }\n}","filePath":"examples/comment-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/commentsList-example.json","content":"{\n  \"kind\" : \"blogger#commentList\" ,\n  \"nextPageToken\" : \"string\" ,\n  \"prevPageToken\" : \"string\" ,\n  \"items\" : [\n    {\n      \"kind\" : \"blogger#comment\" ,\n      \"status\" : \"string\" ,\n      \"id\" : \"string\" ,\n      \"inReplyTo\" : {\n        \"id\" : \"string\"\n      } ,\n      \"post\" : {\n        \"id\" : \"string\"\n      } ,\n      \"blog\" : {\n        \"id\" : \"string\"\n      } ,\n      \"published\" : \"datetime\" ,\n      \"updated\" : \"datetime\" ,\n      \"selfLink\" : \"string\" ,\n      \"content\" : \"string\" ,\n      \"author\" : {\n        \"id\" : \"string\" ,\n        \"displayName\" : \"string\" ,\n        \"url\" : \"string\" ,\n        \"image\" : {\n          \"url\" : \"string\"\n        }\n      }\n    }\n  ]\n}","filePath":"examples/commentsList-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/getListByUser-example.json","content":"{\n  \"kind\" : \"blogger#blogList\" ,\n  \"items\" : [\n    {\n      \"kind\" : \"blogger#blog\" ,\n      \"id\" : \"value\" ,\n      \"name\" : \"value\" ,\n      \"description\" : \"value\" ,\n      \"published\" : \"value\" ,\n      \"updated\" : \"value\" ,\n      \"url\" : \"value\" ,\n      \"selfLink\" : \"value\" ,\n      \"posts\" : {\n        \"totalItems\" : \"value\" ,\n        \"selfLink\" : \"value\"\n      } ,\n      \"pages\" : {\n        \"totalItems\" : \"value\" ,\n        \"selfLink\" : \"value\"\n      } ,\n      \"locale\" : {\n        \"language\" : \"value\" ,\n        \"country\" : \"value\" ,\n        \"variant\" : \"value\"\n      }\n    }\n  ] ,\n  \"blogUserInfos\" : [\n    {\n      \"kind\" : \"blogger#blogUserInfo\" ,\n      \"blog\" : {\n        \"kind\" : \"blogger#blog\" ,\n        \"id\" : \"value\" ,\n        \"name\" : \"value\" ,\n        \"description\" : \"value\" ,\n        \"published\" : \"value\" ,\n        \"updated\" : \"value\" ,\n        \"url\" : \"value\" ,\n        \"selfLink\" : \"value\" ,\n        \"posts\" : {\n          \"totalItems\" : \"value\" ,\n          \"selfLink\" : \"value\"\n        } ,\n        \"pages\" : {\n          \"totalItems\" : \"value\" ,\n          \"selfLink\" : \"value\"\n        } ,\n        \"locale\" : {\n          \"language\" : \"value\" ,\n          \"country\" : \"value\" ,\n          \"variant\" : \"value\"\n        }\n      } ,\n      \"blog_user_info\" : {\n        \"kind\" : \"blogger#blogPerUserInfo\" ,\n        \"userId\" : \"string\" ,\n        \"blogId\" : \"string\" ,\n        \"photosAlbumKey\" : \"string\" ,\n        \"hasAdminAccess\" : \"boolean\"\n      }\n    }\n  ]\n}","filePath":"examples/getListByUser-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/page-example.json","content":"{\r\n  \"kind\" : \"blogger#page\" ,\r\n  \"id\" : \"string\" ,\r\n  \"status\" : \"string\" ,\r\n  \"blog\" : {\r\n    \"id\" : \"string\"\r\n  } ,\r\n  \"published\" : \"datetime\" ,\r\n  \"updated\" : \"datetime\" ,\r\n  \"url\" : \"string\" ,\r\n  \"selfLink\" : \"string\" ,\r\n  \"title\" : \"string\" ,\r\n  \"content\" : \"string\" ,\r\n  \"author\" : {\r\n    \"id\" : \"string\" ,\r\n    \"displayName\" : \"string\" ,\r\n    \"url\" : \"string\" ,\r\n    \"image\" : {\r\n      \"url\" : \"string\"\r\n    }\r\n  }\r\n}","filePath":"examples/page-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/pageViews-example.json","content":"{\n  \"kind\" : \"blogger#page_views\" ,\n  \"blogId\" : \"long\" ,\n  \"counts\" : [\n    {\n      \"timeRange\" : \"string\" ,\n      \"count\" : \"long\"\n    }\n  ]\n}","filePath":"examples/pageViews-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/pages-example.json","content":"{\n  \"kind\" : \"blogger#pageList\" ,\n  \"items\" : [\n    {\n      \"kind\" : \"blogger#page\" ,\n      \"id\" : \"string\" ,\n      \"status\" : \"string\" ,\n      \"blog\" : {\n        \"id\" : \"string\"\n      } ,\n      \"published\" : \"datetime\" ,\n      \"updated\" : \"datetime\" ,\n      \"url\" : \"string\" ,\n      \"selfLink\" : \"string\" ,\n      \"title\" : \"string\" ,\n      \"content\" : \"string\" ,\n      \"author\" : {\n        \"id\" : \"string\" ,\n        \"displayName\" : \"string\" ,\n        \"url\" : \"string\" ,\n        \"image\" : {\n          \"url\" : \"string\"\n        }\n      }\n    }\n  ]\n}","filePath":"examples/pages-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/post-example.json","content":"{\r\n  \"kind\" : \"blogger#post\" ,\r\n  \"id\" : \"string\" ,\r\n  \"blog\" : {\r\n    \"id\" : \"string\"\r\n  } ,\r\n  \"published\" : \"datetime\" ,\r\n  \"updated\" : \"datetime\" ,\r\n  \"url\" : \"string\" ,\r\n  \"selfLink\" : \"string\" ,\r\n  \"title\" : \"string\" ,\r\n  \"titleLink\" : \"string\" ,\r\n  \"content\" : \"string\" ,\r\n  \"images\" : [\r\n    {\r\n      \"url\" : \"string\"\r\n    }\r\n  ] ,\r\n  \"customMetaData\" : \"string\" ,\r\n  \"author\" : {\r\n    \"id\" : \"string\" ,\r\n    \"displayName\" : \"string\" ,\r\n    \"url\" : \"string\" ,\r\n    \"image\" : {\r\n      \"url\" : \"string\"\r\n    }\r\n  } ,\r\n  \"replies\" : {\r\n    \"totalItems\" : \"long\" ,\r\n    \"selfLink\" : \"string\" ,\r\n    \"items\" : [\r\n      {\r\n        \"kind\" : \"blogger#comment\" ,\r\n        \"status\" : \"string\" ,\r\n        \"id\" : \"string\" ,\r\n        \"inReplyTo\" : {\r\n          \"id\" : \"string\"\r\n        } ,\r\n        \"post\" : {\r\n          \"id\" : \"string\"\r\n        } ,\r\n        \"blog\" : {\r\n          \"id\" : \"string\"\r\n        } ,\r\n        \"published\" : \"datetime\" ,\r\n        \"updated\" : \"datetime\" ,\r\n        \"selfLink\" : \"string\" ,\r\n        \"content\" : \"string\" ,\r\n        \"author\" : {\r\n          \"id\" : \"string\" ,\r\n          \"displayName\" : \"string\" ,\r\n          \"url\" : \"string\" ,\r\n          \"image\" : {\r\n            \"url\" : \"string\"\r\n          }\r\n        }\r\n      }\r\n    ]\r\n  } ,\r\n  \"labels\" : [\r\n    \"string\"\r\n  ] ,\r\n  \"location\" : {\r\n    \"name\" : \"string\" ,\r\n    \"lat\" : \"double\" ,\r\n    \"lng\" : \"double\" ,\r\n    \"span\" : \"string\"\r\n  } ,\r\n  \"status\" : \"string\"\r\n}","filePath":"examples/post-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/postUserInfo-example.json","content":"{\n  \"kind\" : \"blogger#postUserInfo\" ,\n  \"post\" : \"posts Resource\" ,\n  \"post_user_info\" : {\n    \"kind\" : \"blogger#postPerUserInfo\" ,\n    \"userId\" : \"string\" ,\n    \"blogId\" : \"string\" ,\n    \"postId\" : \"string\" ,\n    \"hasEditAccess\" : \"boolean\"\n  }\n}","filePath":"examples/postUserInfo-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/postUserInfosList-example.json","content":"{\n  \"kind\" : \"blogger#postUserInfosList\" ,\n  \"nextPageToken\" : \"string\" ,\n  \"items\" : [\n    {\n      \"kind\" : \"blogger#postUserInfo\" ,\n      \"post\" : \"posts Resource\" ,\n      \"post_user_info\" : {\n        \"kind\" : \"blogger#postPerUserInfo\" ,\n        \"userId\" : \"string\" ,\n        \"blogId\" : \"string\" ,\n        \"postId\" : \"string\" ,\n        \"hasEditAccess\" : \"boolean\"\n      }\n    }\n  ]\n}","filePath":"examples/postUserInfosList-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/postsList-example.json","content":"{\r\n  \"kind\" : \"blogger#postList\" ,\r\n  \"nextPageToken\" : \"string\" ,\r\n  \"items\" : [\r\n    {\r\n      \"kind\" : \"blogger#post\" ,\r\n      \"id\" : \"string\" ,\r\n      \"blog\" : {\r\n        \"id\" : \"string\"\r\n      } ,\r\n      \"published\" : \"datetime\" ,\r\n      \"updated\" : \"datetime\" ,\r\n      \"url\" : \"string\" ,\r\n      \"selfLink\" : \"string\" ,\r\n      \"title\" : \"string\" ,\r\n      \"titleLink\" : \"string\" ,\r\n      \"content\" : \"string\" ,\r\n      \"images\" : [\r\n        {\r\n          \"url\" : \"string\"\r\n        }\r\n      ] ,\r\n      \"customMetaData\" : \"string\" ,\r\n      \"author\" : {\r\n        \"id\" : \"string\" ,\r\n        \"displayName\" : \"string\" ,\r\n        \"url\" : \"string\" ,\r\n        \"image\" : {\r\n          \"url\" : \"string\"\r\n        }\r\n      } ,\r\n      \"replies\" : {\r\n        \"totalItems\" : \"long\" ,\r\n        \"selfLink\" : \"string\" ,\r\n        \"items\" : [\r\n          {\r\n            \"kind\" : \"blogger#comment\" ,\r\n            \"status\" : \"string\" ,\r\n            \"id\" : \"string\" ,\r\n            \"inReplyTo\" : {\r\n              \"id\" : \"string\"\r\n            } ,\r\n            \"post\" : {\r\n              \"id\" : \"string\"\r\n            } ,\r\n            \"blog\" : {\r\n              \"id\" : \"string\"\r\n            } ,\r\n            \"published\" : \"datetime\" ,\r\n            \"updated\" : \"datetime\" ,\r\n            \"selfLink\" : \"string\" ,\r\n            \"content\" : \"string\" ,\r\n            \"author\" : {\r\n              \"id\" : \"string\" ,\r\n              \"displayName\" : \"string\" ,\r\n              \"url\" : \"string\" ,\r\n              \"image\" : {\r\n                \"url\" : \"string\"\r\n              }\r\n            }\r\n          }\r\n        ]\r\n      } ,\r\n      \"labels\" : [\r\n        \"string\"\r\n      ] ,\r\n      \"location\" : {\r\n        \"name\" : \"string\" ,\r\n        \"lat\" : \"double\" ,\r\n        \"lng\" : \"double\" ,\r\n        \"span\" : \"string\"\r\n      } ,\r\n      \"status\" : \"string\"\r\n    }\r\n  ]\r\n}","filePath":"examples/postsList-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/examples/user-example.json","content":"{\n  \"kind\" : \"blogger#user\" ,\n  \"id\" : \"string\" ,\n  \"created\" : \"datetime\" ,\n  \"url\" : \"string\" ,\n  \"selfLink\" : \"string\" ,\n  \"blogs\" : {\n    \"selfLink\" : \"string\"\n  } ,\n  \"displayName\" : \"string\" ,\n  \"about\" : \"string\" ,\n  \"locale\" : {\n    \"language\" : \"string\" ,\n    \"country\" : \"string\" ,\n    \"variant\" : \"string\"\n  }\n}","filePath":"examples/user-example.json","repo":"Blogger"},{"path":"/virtual/Blogger/portal/api.md","content":"","filePath":"portal/api.md","repo":"Blogger"},{"path":"/virtual/Blogger/portal/notebook.md","content":"","filePath":"portal/notebook.md","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/blogResource-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"name\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"description\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"published\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updated\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"selfLink\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"posts\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"totalItems\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"selfLink\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"pages\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"totalItems\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"selfLink\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"locale\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"language\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"country\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"variant\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}","filePath":"schemas/blogResource-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/blogUserInfo-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"blog\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"blog_user_info\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"kind\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"userId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"blogId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"photosAlbumKey\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"hasAdminAccess\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}","filePath":"schemas/blogUserInfo-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/comment-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"inReplyTo\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"post\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"blog\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"published\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updated\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"selfLink\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"content\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"url\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"image\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/comment-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/commentsList-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"nextPageToken\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"prevPageToken\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"kind\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"inReplyTo\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"post\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"blog\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"published\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"selfLink\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"content\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"author\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"url\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}","filePath":"schemas/commentsList-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/getListByUser-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"kind\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"description\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"published\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"selfLink\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"posts\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"totalItems\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"selfLink\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"pages\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"totalItems\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"selfLink\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"locale\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"language\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"country\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"variant\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    } ,\n    \"blogUserInfos\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"kind\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"blog\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"kind\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"description\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"published\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"updated\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"url\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"selfLink\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"posts\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"totalItems\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"selfLink\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"pages\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"totalItems\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"selfLink\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"locale\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"language\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"country\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"variant\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"blog_user_info\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"kind\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"userId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"blogId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"photosAlbumKey\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"hasAdminAccess\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}","filePath":"schemas/getListByUser-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/page-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"blog\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"published\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updated\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"selfLink\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"title\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"content\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"url\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"image\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    }\n  }\n}","filePath":"schemas/page-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/pageViews-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"blogId\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"counts\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"timeRange\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"count\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}","filePath":"schemas/pageViews-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/pages-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"kind\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"blog\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"published\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"selfLink\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"title\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"content\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"author\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"url\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}","filePath":"schemas/pages-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/post-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"blog\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"published\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"updated\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"selfLink\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"title\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"titleLink\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"content\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"images\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"customMetaData\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"author\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"displayName\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"url\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"image\" : {\n          \"type\" : \"object\" ,\n          \"required\" : false ,\n          \"properties\" : {\n            \"url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      }\n    } ,\n    \"replies\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"totalItems\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"selfLink\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"items\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"kind\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"status\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"inReplyTo\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"post\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"blog\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"published\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"updated\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"selfLink\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"content\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"author\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"id\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"displayName\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"image\" : {\n                      \"type\" : \"object\" ,\n                      \"required\" : false ,\n                      \"properties\" : {\n                        \"url\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          ]\n        }\n      }\n    } ,\n    \"labels\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"string\"\n        }\n      ]\n    } ,\n    \"location\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"name\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"lat\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"lng\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"span\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    }\n  }\n}","filePath":"schemas/post-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/postUserInfo-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"post\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"post_user_info\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"kind\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"userId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"blogId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"postId\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"hasEditAccess\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}","filePath":"schemas/postUserInfo-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/postUserInfosList-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"nextPageToken\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"kind\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"post\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"post_user_info\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"kind\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"userId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"blogId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"postId\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"hasEditAccess\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          }\n        }\n      ]\n    }\n  }\n}","filePath":"schemas/postUserInfosList-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/postsList-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"nextPageToken\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"items\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"kind\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"blog\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"published\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"updated\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"url\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"selfLink\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"title\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"titleLink\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"content\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"images\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"object\" ,\n                  \"properties\" : {\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              ]\n            } ,\n            \"customMetaData\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"author\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"displayName\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"url\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"image\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"url\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            } ,\n            \"replies\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"totalItems\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"selfLink\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"items\" : {\n                  \"type\" : \"array\" ,\n                  \"required\" : false ,\n                  \"items\" : [\n                    {\n                      \"type\" : \"object\" ,\n                      \"properties\" : {\n                        \"kind\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"status\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"id\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"inReplyTo\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"id\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        } ,\n                        \"post\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"id\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        } ,\n                        \"blog\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"id\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        } ,\n                        \"published\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"updated\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"selfLink\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"content\" : {\n                          \"type\" : \"string\" ,\n                          \"required\" : false\n                        } ,\n                        \"author\" : {\n                          \"type\" : \"object\" ,\n                          \"required\" : false ,\n                          \"properties\" : {\n                            \"id\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"displayName\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"url\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"image\" : {\n                              \"type\" : \"object\" ,\n                              \"required\" : false ,\n                              \"properties\" : {\n                                \"url\" : {\n                                  \"type\" : \"string\" ,\n                                  \"required\" : false\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  ]\n                }\n              }\n            } ,\n            \"labels\" : {\n              \"type\" : \"array\" ,\n              \"required\" : false ,\n              \"items\" : [\n                {\n                  \"type\" : \"string\"\n                }\n              ]\n            } ,\n            \"location\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"lat\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"lng\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"span\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"status\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    }\n  }\n}","filePath":"schemas/postsList-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/schemas/user-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"kind\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"id\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"created\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"url\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"selfLink\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"blogs\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"selfLink\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    } ,\n    \"displayName\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"about\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"locale\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"language\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"country\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"variant\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}","filePath":"schemas/user-schema.json","repo":"Blogger"},{"path":"/virtual/Blogger/securitySchemes/oauth_2_0.raml","content":"description: |\n  Google recommend using OAuth 2.0 to authorize requests.\ntype: OAuth 2.0\ndescribedBy: \n  headers: \n    Authorization: \n      description: |\n        Used to send a valid OAuth 2 access token.\n  queryParameters: \n    access_token: \n      description: |\n        Used to send a valid OAuth 2 access token\n  responses: \n    401: \n      description: |\n        Authorization error.\nsettings: \n  authorizationUri: https://accounts.google.com/o/oauth2/auth\n  accessTokenUri: https://accounts.google.com/o/oauth2/token\n  authorizationGrants: [ code ]\n  scopes: [ \"https://www.googleapis.com/auth/blogger\" ]\n","filePath":"securitySchemes/oauth_2_0.raml","repo":"Blogger"},{"path":"/virtual/Blogger/traits/blogs.raml","content":"queryParameters: \n  endDate: \n    description: Latest date of comment to fetch, a date-time with RFC 3339 formatting.\n  fetchBodies: \n    description: Whether the body content of the comments is included.\n  maxResults: \n    description: Maximum number of comments to include in the result.\n  pageToken: \n    description: Continuation token if request is paged.\n  startDate: \n    description: Earliest date of comment to fetch, a date-time with RFC 3339 formatting.\n  status: \n    description: |\n      Acceptable values are:\n      \"emptied\": Comments that have had their content removed\n      \"live\": Comments that are publicly visible\n      \"pending\": Comments that are awaiting administrator approval\n      \"spam\": Comments marked as spam by the administrator\n  view: \n    description: |\n      Acceptable values are:\n      \"ADMIN\": Admin level detail\n      \"AUTHOR\": Author level detail\n      \"READER\": Admin level detail\n","filePath":"traits/blogs.raml","repo":"Blogger"},{"path":"/virtual/Blogger/traits/posts.raml","content":"queryParameters: \n  labels: \n    description: Comma-separated list of labels to search for.\n  orderBy: \n    description: |\n      Sort order applied to search results. Default is published. \r\n      \r\n      Acceptable values are:\r\n      \"published\": Order by the date the post was published\r\n      \"updated\": Order by the date the post was last updated\n","filePath":"traits/posts.raml","repo":"Blogger"},{"path":"/virtual/Blogger/traits/view.raml","content":"queryParameters: \n  view: \n    description: |\n      Acceptable values are:\r\n      \"ADMIN\": Admin level detail\r\n      \"AUTHOR\": Author level detail\r\n      \"READER\": Admin level detail\n","filePath":"traits/view.raml","repo":"Blogger"}]