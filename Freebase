[{"path":"/virtual/Freebase/.project","content":"<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<projectDescription>\r\n    <name>Freebase</name>\r\n    <comment></comment>\r\n    <projects>\r\n    </projects>\r\n    <buildSpec>\r\n    </buildSpec>\r\n    <natures>\r\n    </natures>\r\n</projectDescription>","filePath":".project","repo":"Freebase"},{"path":"/virtual/Freebase/.settings/org.eclipse.core.resources.prefs","content":"eclipse.preferences.version=1","filePath":".settings/org.eclipse.core.resources.prefs","repo":"Freebase"},{"path":"/virtual/Freebase/api.raml","content":"#%RAML 0.8\ntitle: Get Started with the Freebase API\nversion: v1\nbaseUri: https://www.googleapis.com/freebase/{version}\nschemas:\n  - search: !include schemas/search-schema.json\n  - reconcile: !include schemas/reconcile-schema.json\n  - mqlread: !include schemas/mqlread-schema.json\n  - error: !include schemas/error-schema.json\n  - topic: !include schemas/topic-schema.json\nresourceTypes:\n  - base: !include resourceTypes/base.raml\ntraits:\n  - dataBaseAccessable: !include traits/dataBaseAccessable.raml\n  - limitable: !include traits/limitable.raml\n  - languageSupportable: !include traits/languageSupportable.raml\n/search: \n  type: base\n  get: \n    is: [ languageSupportable , limitable , dataBaseAccessable ]\n    description: The Search API provides access to Freebase data given a free text query. Please consult Search Overview and the Search Cookbook for more information on how to construct detailed search queries.\n    queryParameters: \n      \"as_of_time  \": \n        description: A MQL as_of_time value to use with mql_output queries.\n      cursor: \n        description: The cursor parameter along with the limit parameter allows you to page through a defined number of results at a time. For example, to present 3 pages of successive 10 results, use  limit=10 and cursor=0, then cursor=10, and cursor=20.\n        type: integer\n        example: cursor=0\n      domain: \n        description: Restrict to topics with this Freebase domain ID.\n      encode: \n        description: The encoding of the response. You can use this parameter to enable HTML encoding.\n        enum: [ off , html ]\n        default: off\n      exact: \n        description: Query on exact name and keys only.\n        type: boolean\n        example: \"\"\n      format: \n        description: Structural format of the JSON response. \n        enum: \n          - ids\n          - entity\n          - mids\n      mql_output: \n        description: \"The MQL query to run againist the results to extract more data. After the query is run, the matching documents' IDs are passed to the mql_output MQL query to retrieve actual data about the matches. The MQL results are sorted by decreasing relevance score. \"\n      prefixed: \n        description: Prefix match against names and aliases.\n        type: boolean\n      scoring: \n        description: Relevance scoring algorithm to use. \n        enum: \n          - schema\n          - entity\n          - freebase\n      spell: \n        description: \"Request 'did you mean' suggestions\"\n        enum: \n          - no_results\n          - no_spelling\n          - always\n        default: no_spelling\n      stemmed: \n        description: Query on stemmed names and aliases. May not be used with prefixed.\n        type: boolean\n      type: \n        description: Restrict to topics with this Freebase type id.\n      with: \n        description: A filter rule to match against.\n      without: \n        description: A filter rule to not match against.\n    responses: \n      200: \n        body: \n          application/json: \n            schema: search\n            example: !include examples/search-example.json\n/reconcile: \n  type: base\n  get: \n    is: [ languageSupportable , limitable ]\n    description: The Reconciliation API matches structured data about entities against potential matching entiities in Freebase. Please consult Reconciliation Overview for more information on how to reconcile your data.\n    queryParameters: \n      kind: \n        description: Classifications of entity e.g. type, category, title. Should be a type id if possible.\n        required: true\n      name: \n        description: The name of root entity to reconcile.\n      prop: \n        description: \"Property values for entity formatted as <predicate>:<value>\"\n      confidence: \n        description: Required confidence for a candidate to match. Must be between .5 and 1.0 and defaults to .99\n        type: number\n        default: .99\n    responses: \n      200: \n        body: \n          application/json: \n            schema: reconcile\n            example: !include examples/reconcile-example.json\n/mqlread: \n  type: base\n  get: \n    is: [ languageSupportable , dataBaseAccessable ]\n    description: The mqlread API provides access to the Freebase database using the Metaweb query language (MQL).\n    queryParameters: \n      \"as_of_time  \": \n        description: A MQL as_of_time value to use with mql_output queries.\n      cursor: \n        description: The cursor parameter along with the limit parameter allows you to page through a defined number of results at a time. For example, to present 3 pages of successive 10 results, use  limit=10 and cursor=0, then cursor=10, and cursor=20.\n        type: integer\n        example: cursor=0\n      cost: \n        description: \"Toggles whether or not to show the costs. (Default: false)\"\n        type: boolean\n      dateline: \n        description: The dateline that you get in a mqlwrite response to ensure consistent results.\n      html_escape: \n        description: \"Whether or not to escape entities. (Default: true)\"\n        type: boolean\n        default:  true\n      uniqueness_failure: \n        description: How MQL responds to uniqueness failures. \n        enum: [ hard , soft ]\n        default: hard\n    responses: \n      200: \n        body: \n          application/json: \n            schema: mqlread\n            example: !include examples/mqlread-example.json\n/mqlwrite: \n  type: base\n  get: \n    is: [ dataBaseAccessable ]\n    description: The mqlwrite API provides access to the Freebase database using the Metaweb query language (MQL).\n    queryParameters: \n      dateline: \n        description: The dateline that you get in a mqlwrite response to ensure consistent results.\n      use_permission_of: \n        description: Use the same permission node of the object with the specified id.\n    responses: \n      200: \n        body: \n          application/json: \n/rdf{/id}: \n  type: base\n  get: \n    description: |\n      The Freebase RDF API is a web service that will return all the known facts for a given topic including images and text blurbs. You can apply filters to the Topic API so that it only returns the property values that you're interested. This is ideal for building topic pages and short summaries of an entity.\n      The RDF API returns an Turtle serialization of the first 100 values for each predicate for a given Freebase topic.\n/topic{/id}: \n  type: base\n  get: \n    is: [ languageSupportable , limitable ]\n    description: If successful, this method returns a response body that depends on the query. Please see Topic API Responses for an overview of the response format and types of responses.\n    queryParameters: \n      dateline: \n        description: Determines how up-to-date the data returned is. A UNIX epoch time, a guid or now.\n      filter: \n        description: A Freebase domain, type or property ID. suggest, commons, or all. Filter the results and return only appropriate properties. See filters parameter details for more information.\n      raw: \n        description: \"Do not apply any constraints, or get any names. (Default: false)\"\n        type: boolean\n    responses: \n      200: \n        description: \"\"\n        body: \n          application/json: \n            schema: topic\n            example: !include examples/topic-example.json\ndocumentation: \n  - title: Headline\n    content: !include docs/headline.md","filePath":"api.raml","repo":"Freebase"},{"path":"/virtual/Freebase/docs/headline.md","content":"Freebase is a large collaborative knowledge base consisting of metadata composed mainly by its community members.","filePath":"docs/headline.md","repo":"Freebase"},{"path":"/virtual/Freebase/examples/error-example.json","content":"{\n  \"error\" : {\n    \"errors\" : [\n      {\n        \"domain\" : \"global\" ,\n        \"reason\" : \"required\" ,\n        \"message\" : \"Login Required\" ,\n        \"locationType\" : \"header\" ,\n        \"location\" : \"Authorization\"\n      }\n    ] ,\n    \"code\" : 401 ,\n    \"message\" : \"Login Required\"\n  }\n}","filePath":"examples/error-example.json","repo":"Freebase"},{"path":"/virtual/Freebase/examples/mqlread-example.json","content":"{\n  \"result\" : {\n    \"type\" : \"/music/album\" ,\n    \"id\" : \"/en/keep_it_turned_on\" ,\n    \"artist\" : \"Rick Astley\"\n  }\n}","filePath":"examples/mqlread-example.json","repo":"Freebase"},{"path":"/virtual/Freebase/examples/reconcile-example.json","content":"{\n  \"candidate\" : [\n    {\n      \"mid\" : \"/m/02ktj7\" ,\n      \"confidence\" : 0.8762683 ,\n      \"name\" : \"King Kong\" ,\n      \"notable\" : {\n        \"name\" : \"Film\" ,\n        \"id\" : \"/film/film\"\n      } ,\n      \"lang\" : \"en\"\n    } , {\n      \"mid\" : \"/m/02dr9j\" ,\n      \"confidence\" : 0.058297582 ,\n      \"name\" : \"King Kong\" ,\n      \"notable\" : {\n        \"name\" : \"Film\" ,\n        \"id\" : \"/film/film\"\n      } ,\n      \"lang\" : \"en\"\n    } , {\n      \"mid\" : \"/m/0gzlzqq\" ,\n      \"confidence\" : 0.022297567 ,\n      \"name\" : \"King Kong\" ,\n      \"notable\" : {\n        \"name\" : \"Film\" ,\n        \"id\" : \"/film/film\"\n      } ,\n      \"lang\" : \"en\"\n    }\n  ] ,\n  \"costs\" : {\n    \"ms\" : 11 ,\n    \"hits\" : 24\n  }\n}","filePath":"examples/reconcile-example.json","repo":"Freebase"},{"path":"/virtual/Freebase/examples/search-example.json","content":"{\n  \"status\" : \"200 OK\" ,\n  \"result\" : [\n    {\n      \"mid\" : \"/m/0bkf4\" ,\n      \"id\" : \"/en/bob_marley\" ,\n      \"name\" : \"Bob Marley\" ,\n      \"notable\" : {\n        \"name\" : \"Musical Artist\" ,\n        \"id\" : \"/music/artist\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 78.634216\n    } , {\n      \"mid\" : \"/m/01vrncs\" ,\n      \"id\" : \"/en/bob_dylan\" ,\n      \"name\" : \"Bob Dylan\" ,\n      \"notable\" : {\n        \"name\" : \"Folk rock Artist\" ,\n        \"id\" : \"/m/016jny\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 75.307129\n    } , {\n      \"mid\" : \"/m/015cbq\" ,\n      \"id\" : \"/en/bob_hope\" ,\n      \"name\" : \"Bob Hope\" ,\n      \"notable\" : {\n        \"name\" : \"Comedian\" ,\n        \"id\" : \"/m/018gz8\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 60.908581\n    } , {\n      \"mid\" : \"/m/01pbxb\" ,\n      \"id\" : \"/en/bob_seger\" ,\n      \"name\" : \"Bob Seger\" ,\n      \"notable\" : {\n        \"name\" : \"Heartland rock Artist\" ,\n        \"id\" : \"/m/05hs4r\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 55.450382\n    } , {\n      \"mid\" : \"/m/09wz9\" ,\n      \"id\" : \"/en/bobsleigh\" ,\n      \"name\" : \"Bobsleigh\" ,\n      \"notable\" : {\n        \"name\" : \"Sport\" ,\n        \"id\" : \"/sports/sport\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 53.285572\n    } , {\n      \"mid\" : \"/m/02fj27\" ,\n      \"id\" : \"/en/bob_cut\" ,\n      \"name\" : \"Bob cut\" ,\n      \"lang\" : \"en\" ,\n      \"score\" : 51.77486\n    } , {\n      \"mid\" : \"/m/0fhkx\" ,\n      \"id\" : \"/en/bob_dole\" ,\n      \"name\" : \"Bob Dole\" ,\n      \"notable\" : {\n        \"name\" : \"U.S. Congressperson\" ,\n        \"id\" : \"/government/u_s_congressperson\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 49.349247\n    } , {\n      \"mid\" : \"/m/01z_dc\" ,\n      \"id\" : \"/en/bob_the_builder\" ,\n      \"name\" : \"Bob the Builder\" ,\n      \"notable\" : {\n        \"name\" : \"Children's TV Program\" ,\n        \"id\" : \"/m/0pr6f\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 48.611294\n    } , {\n      \"mid\" : \"/m/0fl08s\" ,\n      \"id\" : \"/en/the_bob_tom_show\" ,\n      \"name\" : \"The Bob & Tom Show\" ,\n      \"notable\" : {\n        \"name\" : \"Broadcast Content\" ,\n        \"id\" : \"/broadcast/content\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 45.752556\n    } , {\n      \"mid\" : \"/m/03xhfk\" ,\n      \"id\" : \"/en/bob_holly\" ,\n      \"name\" : \"Hardcore Holly\" ,\n      \"notable\" : {\n        \"name\" : \"Wrestler\" ,\n        \"id\" : \"/m/02nx2gc\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 40.662376\n    } , {\n      \"mid\" : \"/m/01kk3lb\" ,\n      \"id\" : \"/en/bob_wills\" ,\n      \"name\" : \"Bob Wills\" ,\n      \"notable\" : {\n        \"name\" : \"Western swing Artist\" ,\n        \"id\" : \"/m/02wydx\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 38.773483\n    } , {\n      \"mid\" : \"/m/01l87db\" ,\n      \"id\" : \"/en/bob_geldof\" ,\n      \"name\" : \"Bob Geldof\" ,\n      \"notable\" : {\n        \"name\" : \"Rock Artist\" ,\n        \"id\" : \"/m/06by7\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 37.039284\n    } , {\n      \"mid\" : \"/m/02ht0ln\" ,\n      \"id\" : \"/en/bob_marley_the_wailers\" ,\n      \"name\" : \"Bob Marley & The Wailers\" ,\n      \"notable\" : {\n        \"name\" : \"Ska Artist\" ,\n        \"id\" : \"/m/06rqw\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 35.457142\n    } , {\n      \"mid\" : \"/m/05kkq7\" ,\n      \"id\" : \"/en/bob_orton_jr\" ,\n      \"name\" : \"Bob Orton, Jr.\" ,\n      \"notable\" : {\n        \"name\" : \"Wrestler\" ,\n        \"id\" : \"/m/02nx2gc\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 35.056168\n    } , {\n      \"mid\" : \"/m/071hsq\" ,\n      \"id\" : \"/en/bob_sinclar\" ,\n      \"name\" : \"Bob Sinclar\" ,\n      \"notable\" : {\n        \"name\" : \"Remixer\" ,\n        \"id\" : \"/m/05c9vcp\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 35.027836\n    } , {\n      \"mid\" : \"/m/09dvvy\" ,\n      \"id\" : \"/en/bob_mcdonnell\" ,\n      \"name\" : \"Bob McDonnell\" ,\n      \"notable\" : {\n        \"name\" : \"Politician\" ,\n        \"id\" : \"/government/politician\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 34.240498\n    } , {\n      \"mid\" : \"/m/012gq6\" ,\n      \"id\" : \"/en/bob_newhart\" ,\n      \"name\" : \"Bob Newhart\" ,\n      \"notable\" : {\n        \"name\" : \"Comedian\" ,\n        \"id\" : \"/m/018gz8\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 33.925415\n    } , {\n      \"mid\" : \"/m/047ymw\" ,\n      \"id\" : \"/en/bob_casey_jr\" ,\n      \"name\" : \"Bob Casey, Jr.\" ,\n      \"notable\" : {\n        \"name\" : \"U.S. Congressperson\" ,\n        \"id\" : \"/government/u_s_congressperson\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 33.472374\n    } , {\n      \"mid\" : \"/m/019yt\" ,\n      \"id\" : \"/en/bob_hawke\" ,\n      \"name\" : \"Bob Hawke\" ,\n      \"notable\" : {\n        \"name\" : \"Politician\" ,\n        \"id\" : \"/government/politician\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 33.388203\n    } , {\n      \"mid\" : \"/m/0gw5_q\" ,\n      \"id\" : \"/en/bob_jane\" ,\n      \"name\" : \"Bob Jane\" ,\n      \"notable\" : {\n        \"name\" : \"Racing driver\" ,\n        \"id\" : \"/m/02h6nn_\"\n      } ,\n      \"lang\" : \"en\" ,\n      \"score\" : 32.523479\n    }\n  ] ,\n  \"cursor\" : 20 ,\n  \"cost\" : 29 ,\n  \"hits\" : 177617\n}","filePath":"examples/search-example.json","repo":"Freebase"},{"path":"/virtual/Freebase/examples/topic-example.json","content":"\"/people/person/spouse_s\": {\n  \"valuetype\" : \"compound\" ,\n  \"values\" : [\n    {\n      \"text\" : \"1992-10-03 - Michelle Obama - Marriage - alexander - Marriage\" ,\n      \"lang\" : \"en\" ,\n      \"id\" : \"/m/02nqglv\" ,\n      \"creator\" : \"/user/spencermountain\" ,\n      \"timestamp\" : \"2010-02-11T23:02:42.001Z\" ,\n      \"property\" : {\n        \"/people/marriage/from\" : {\n          \"valuetype\" : \"datetime\" ,\n          \"values\" : [\n            {\n              \"text\" : \"1992-10-03\" ,\n              \"lang\" : \"\" ,\n              \"value\" : \"1992-10-03\" ,\n              \"creator\" : \"/user/aquebral\" ,\n              \"timestamp\" : \"2012-04-05T03:17:42.000Z\"\n            }\n          ] ,\n          \"count\" : 1\n        } ,\n        \"/people/marriage/spouse\" : {\n          \"valuetype\" : \"object\" ,\n          \"values\" : [\n            {\n              \"text\" : \"Michelle Obama\" ,\n              \"lang\" : \"en\" ,\n              \"id\" : \"/m/025s5v9\" ,\n              \"creator\" : \"/user/alexander\" ,\n              \"timestamp\" : \"2007-07-11T18:34:23.000Z\"\n            }\n          ] ,\n          \"count\" : 2\n        } ,\n        \"/people/marriage/type_of_union\" : {\n          \"valuetype\" : \"object\" ,\n          \"values\" : [\n            {\n              \"text\" : \"Marriage\" ,\n              \"lang\" : \"en\" ,\n              \"id\" : \"/m/04ztj\" ,\n              \"creator\" : \"/user/faye\" ,\n              \"timestamp\" : \"2008-10-03T07:10:49.000Z\"\n            }\n          ] ,\n          \"count\" : 1\n        } ,\n        \"/type/object/attribution\" : {\n          \"valuetype\" : \"object\" ,\n          \"values\" : [\n            {\n              \"text\" : \"alexander\" ,\n              \"lang\" : \"en\" ,\n              \"id\" : \"/m/022q403\" ,\n              \"creator\" : \"/user/alexander\" ,\n              \"timestamp\" : \"2007-07-11T18:34:23.000Z\"\n            }\n          ] ,\n          \"count\" : 1\n        } ,\n        \"/type/object/type\" : {\n          \"valuetype\" : \"object\" ,\n          \"values\" : [\n            {\n              \"text\" : \"Marriage\" ,\n              \"lang\" : \"en\" ,\n              \"id\" : \"/people/marriage\" ,\n              \"creator\" : \"/user/alexander\" ,\n              \"timestamp\" : \"2007-07-11T18:34:23.000Z\"\n            }\n          ] ,\n          \"count\" : 1\n        }\n      }\n    }\n  ] ,\n  \"count\" : 1\n}","filePath":"examples/topic-example.json","repo":"Freebase"},{"path":"/virtual/Freebase/portal/api.md","content":"","filePath":"portal/api.md","repo":"Freebase"},{"path":"/virtual/Freebase/portal/notebook.md","content":"","filePath":"portal/notebook.md","repo":"Freebase"},{"path":"/virtual/Freebase/resourceTypes/base.raml","content":"get?: \n  responses: \n    401: \n      body: \n        application/json: \n          schema: error\n          example: !include ../examples/error-example.json\n","filePath":"resourceTypes/base.raml","repo":"Freebase"},{"path":"/virtual/Freebase/schemas/error-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"error\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"errors\" : {\n          \"type\" : \"array\" ,\n          \"required\" : false ,\n          \"items\" : [\n            {\n              \"type\" : \"object\" ,\n              \"properties\" : {\n                \"domain\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"reason\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"message\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"locationType\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"location\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            }\n          ]\n        } ,\n        \"code\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"message\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}","filePath":"schemas/error-schema.json","repo":"Freebase"},{"path":"/virtual/Freebase/schemas/mqlread-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"result\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"type\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"id\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        } ,\n        \"artist\" : {\n          \"type\" : \"string\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}","filePath":"schemas/mqlread-schema.json","repo":"Freebase"},{"path":"/virtual/Freebase/schemas/reconcile-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"candidate\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"mid\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"confidence\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"notable\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"lang\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"costs\" : {\n      \"type\" : \"object\" ,\n      \"required\" : false ,\n      \"properties\" : {\n        \"ms\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        } ,\n        \"hits\" : {\n          \"type\" : \"number\" ,\n          \"required\" : false\n        }\n      }\n    }\n  }\n}","filePath":"schemas/reconcile-schema.json","repo":"Freebase"},{"path":"/virtual/Freebase/schemas/search-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"status\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"result\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"mid\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"notable\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"name\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                } ,\n                \"id\" : {\n                  \"type\" : \"string\" ,\n                  \"required\" : false\n                }\n              }\n            } ,\n            \"lang\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"score\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        } , {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"mid\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"name\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"lang\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"score\" : {\n              \"type\" : \"number\" ,\n              \"required\" : false\n            }\n          }\n        }\n      ]\n    } ,\n    \"cursor\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"cost\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    } ,\n    \"hits\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}","filePath":"schemas/search-schema.json","repo":"Freebase"},{"path":"/virtual/Freebase/schemas/topic-schema.json","content":"{\n  \"required\" : true ,\n  \"$schema\" : \"http://json-schema.org/draft-03/schema\" ,\n  \"type\" : \"object\" ,\n  \"properties\" : {\n    \"valuetype\" : {\n      \"type\" : \"string\" ,\n      \"required\" : false\n    } ,\n    \"values\" : {\n      \"type\" : \"array\" ,\n      \"required\" : false ,\n      \"items\" : [\n        {\n          \"type\" : \"object\" ,\n          \"properties\" : {\n            \"text\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"lang\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"id\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"creator\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"timestamp\" : {\n              \"type\" : \"string\" ,\n              \"required\" : false\n            } ,\n            \"property\" : {\n              \"type\" : \"object\" ,\n              \"required\" : false ,\n              \"properties\" : {\n                \"/people/marriage/from\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"valuetype\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"values\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"object\" ,\n                          \"properties\" : {\n                            \"text\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"lang\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"value\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"creator\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"timestamp\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      ]\n                    } ,\n                    \"count\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"/people/marriage/spouse\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"valuetype\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"values\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"object\" ,\n                          \"properties\" : {\n                            \"text\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"lang\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"id\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"creator\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"timestamp\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      ]\n                    } ,\n                    \"count\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"/people/marriage/type_of_union\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"valuetype\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"values\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"object\" ,\n                          \"properties\" : {\n                            \"text\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"lang\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"id\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"creator\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"timestamp\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      ]\n                    } ,\n                    \"count\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"/type/object/attribution\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"valuetype\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"values\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"object\" ,\n                          \"properties\" : {\n                            \"text\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"lang\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"id\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"creator\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"timestamp\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      ]\n                    } ,\n                    \"count\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                } ,\n                \"/type/object/type\" : {\n                  \"type\" : \"object\" ,\n                  \"required\" : false ,\n                  \"properties\" : {\n                    \"valuetype\" : {\n                      \"type\" : \"string\" ,\n                      \"required\" : false\n                    } ,\n                    \"values\" : {\n                      \"type\" : \"array\" ,\n                      \"required\" : false ,\n                      \"items\" : [\n                        {\n                          \"type\" : \"object\" ,\n                          \"properties\" : {\n                            \"text\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"lang\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"id\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"creator\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            } ,\n                            \"timestamp\" : {\n                              \"type\" : \"string\" ,\n                              \"required\" : false\n                            }\n                          }\n                        }\n                      ]\n                    } ,\n                    \"count\" : {\n                      \"type\" : \"number\" ,\n                      \"required\" : false\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      ]\n    } ,\n    \"count\" : {\n      \"type\" : \"number\" ,\n      \"required\" : false\n    }\n  }\n}","filePath":"schemas/topic-schema.json","repo":"Freebase"},{"path":"/virtual/Freebase/securitySchemes/oauth_2_0.raml","content":"description: |\n  Body example for authorisation request:\n  \n  client_id=...&\n  redirect_uri=...&\n  response_type=code\n  \n  Bidy example for token request:\n  \n  POST Data\n  client_id=...&\n  client_secret=...&\n  redirect_uri=...&\n  code=...&\n  grant_type=authorization_code\n  \n  All requests to the Buffer API must be made using HTTPS, with the access token provided in the HTTP Authorization header, request body or query string.\ntype: \"OAuth 2.0\"\ndescribedBy: \n  queryParameters: \n    access_token:\n      description: |\n        OAuth 2.0 token for the current user.\n    callback:\n    key: \n      description: \"API key.\"\n      required: true\n    prettyPrint:\n      description: |\n        Returns response with indentations and line breaks.\n        Returns the response in a human-readable format if true.\n        When this is false, it can reduce the response payload size, which might lead to better performance in some environments.\n        default: true        \n    quotaUser:\n      description: |\n        \"Alternative to userIp.\"\n        Lets you enforce per-user quotas from a server-side application even in cases when the user's IP address is unknown. This can occur, for example, with applications that run cron jobs on App Engine on a user's behalf.\n        You can choose any arbitrary string that uniquely identifies a user, but it is limited to 40 characters.\n        Overrides userIp if both are provided.\n        Learn more about capping usage.    \n    userIp:\n      description: |\n        IP address of the end user for whom the API call is being made.\n        Lets you enforce per-user quotas when calling the API from a server-side application.\n        Learn more about capping usage.\nsettings: \n  authorizationUri: \"https://www.googleapis.com/auth/freebase\"\n  authorizationGrants: [ code ]\n","filePath":"securitySchemes/oauth_2_0.raml","repo":"Freebase"},{"path":"/virtual/Freebase/traits/dataBaseAccessable.raml","content":"queryParameters: \n  callback: \n    description: JS method name for JSONP callbacks.\n  indent: \n    description: Whether to indent the JSON results or not.\n  query: \n    description: Query term to search for.\n    example: query=bob\n","filePath":"traits/dataBaseAccessable.raml","repo":"Freebase"},{"path":"/virtual/Freebase/traits/languageSupportable.raml","content":"queryParameters: \n  lang: \n    description: |\n      The code of the language with which to run the query. Default is 'en'.\n      The language you'd like the content in - a Freebase /type/lang language key. \n      Languages for names and values. First language is used for display. Default is 'en'.\n","filePath":"traits/languageSupportable.raml","repo":"Freebase"},{"path":"/virtual/Freebase/traits/limitable.raml","content":"queryParameters: \n  limit: \n    description: |\n      Maximum number of candidates to return. Defaults to 3.\n      The maximum number of property values to return for each property. Must be a positive integer. Default is 10.\n      Maximum number of results to return. By default, 20 matches in decreasing order of relevance are returned, if that many exist. Fewer or more matches may be requested by using the limit parameter with a different value. (Example.)\n","filePath":"traits/limitable.raml","repo":"Freebase"}]